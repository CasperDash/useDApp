{"version":3,"sources":["../../../node_modules/.pnpm/eventemitter3@4.0.7/node_modules/eventemitter3/index.js","../../../node_modules/.pnpm/react@18.2.0/node_modules/react/cjs/react.production.min.js","../../../node_modules/.pnpm/react@18.2.0/node_modules/react/cjs/react.development.js","../../../node_modules/.pnpm/react@18.2.0/node_modules/react/index.js","../../../node_modules/.pnpm/use-sync-external-store@1.2.0_react@18.2.0/node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.production.min.js","../../../node_modules/.pnpm/use-sync-external-store@1.2.0_react@18.2.0/node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.development.js","../../../node_modules/.pnpm/use-sync-external-store@1.2.0_react@18.2.0/node_modules/use-sync-external-store/shim/index.js","../../core/src/errors/ConnectorAlreadyConnectedError.ts","../../core/src/errors/ClientNotFoundError.ts","../../../node_modules/.pnpm/zustand@4.3.2/node_modules/zustand/esm/vanilla.mjs","../../../node_modules/.pnpm/zustand@4.3.2/node_modules/zustand/esm/middleware.mjs","../../core/src/utils/client.ts","../../core/src/actions/account/connect.ts","../../core/src/actions/account/disconnect.ts","../../core/src/actions/account/getActivePublicKey.ts","../../../node_modules/.pnpm/zustand@4.3.2/node_modules/zustand/esm/shallow.mjs","../../core/src/actions/account/getAccount.ts","../../core/src/actions/account/watchAccount.ts","../../core/src/actions/signing/sign.ts","../../core/src/actions/signing/signMessage.ts","../../core/src/connectors/base.ts","../src/hooks/useAccount.ts","../src/hooks/useConnect.ts","../../../node_modules/.pnpm/@tanstack+query-core@4.22.0/node_modules/@tanstack/query-core/src/subscribable.ts","../../../node_modules/.pnpm/@tanstack+query-core@4.22.0/node_modules/@tanstack/query-core/src/utils.ts","../../../node_modules/.pnpm/@tanstack+query-core@4.22.0/node_modules/@tanstack/query-core/src/focusManager.ts","../../../node_modules/.pnpm/@tanstack+query-core@4.22.0/node_modules/@tanstack/query-core/src/onlineManager.ts","../../../node_modules/.pnpm/@tanstack+query-core@4.22.0/node_modules/@tanstack/query-core/src/retryer.ts","../../../node_modules/.pnpm/@tanstack+query-core@4.22.0/node_modules/@tanstack/query-core/src/logger.ts","../../../node_modules/.pnpm/@tanstack+query-core@4.22.0/node_modules/@tanstack/query-core/src/notifyManager.ts","../../../node_modules/.pnpm/@tanstack+query-core@4.22.0/node_modules/@tanstack/query-core/src/removable.ts","../../../node_modules/.pnpm/@tanstack+query-core@4.22.0/node_modules/@tanstack/query-core/src/query.ts","../../../node_modules/.pnpm/@tanstack+query-core@4.22.0/node_modules/@tanstack/query-core/src/queryCache.ts","../../../node_modules/.pnpm/@tanstack+query-core@4.22.0/node_modules/@tanstack/query-core/src/mutation.ts","../../../node_modules/.pnpm/@tanstack+query-core@4.22.0/node_modules/@tanstack/query-core/src/mutationCache.ts","../../../node_modules/.pnpm/@tanstack+query-core@4.22.0/node_modules/@tanstack/query-core/src/infiniteQueryBehavior.ts","../../../node_modules/.pnpm/@tanstack+query-core@4.22.0/node_modules/@tanstack/query-core/src/queryClient.ts","../../../node_modules/.pnpm/@tanstack+query-core@4.22.0/node_modules/@tanstack/query-core/src/mutationObserver.ts","../../../node_modules/.pnpm/@tanstack+react-query@4.22.3_react@18.2.0/node_modules/@tanstack/react-query/src/useSyncExternalStore.ts","../../../node_modules/.pnpm/@tanstack+react-query@4.22.3_react@18.2.0/node_modules/@tanstack/react-query/src/QueryClientProvider.tsx","../../../node_modules/.pnpm/@tanstack+react-query@4.22.3_react@18.2.0/node_modules/@tanstack/react-query/src/utils.ts","../../../node_modules/.pnpm/@tanstack+react-query@4.22.3_react@18.2.0/node_modules/@tanstack/react-query/src/useMutation.ts","../src/hooks/useDisconnect.ts","../src/hooks/useSign.ts","../src/hooks/useSignMessage.ts","../src/provider.ts","../src/client.ts","../src/enums/queryKeys.ts","../src/enums/mutationKeys.ts"],"sourcesContent":["'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","/**\n * @license React\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=Symbol.for(\"react.element\"),n=Symbol.for(\"react.portal\"),p=Symbol.for(\"react.fragment\"),q=Symbol.for(\"react.strict_mode\"),r=Symbol.for(\"react.profiler\"),t=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),v=Symbol.for(\"react.forward_ref\"),w=Symbol.for(\"react.suspense\"),x=Symbol.for(\"react.memo\"),y=Symbol.for(\"react.lazy\"),z=Symbol.iterator;function A(a){if(null===a||\"object\"!==typeof a)return null;a=z&&a[z]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nvar B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};\nE.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(\"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\");this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;\nH.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}\nfunction N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g;function Q(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction R(a,b,e,d,c){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=\"\"===d?\".\"+Q(h,0):d,I(c)?(e=\"\",null!=a&&(e=a.replace(P,\"$&/\")+\"/\"),R(c,b,e,\"\",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?\"\":(\"\"+c.key).replace(P,\"$&/\")+\"/\")+a)),b.push(c)),1;h=0;d=\"\"===d?\".\":d+\":\";if(I(a))for(var g=0;g<a.length;g++){k=\na[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if(\"object\"===k)throw b=String(a),Error(\"Objects are not valid as a React child (found: \"+(\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b)+\"). If you meant to render a collection of children, use an array instead.\");return h}\nfunction S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,\"\",\"\",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}\nvar U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};exports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error(\"React.Children.only expected to receive a single React element child.\");return a}};exports.Component=E;exports.Fragment=p;\nexports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;\nexports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error(\"React.cloneElement(...): The argument must be a React element, but you passed \"+a+\".\");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);\nfor(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};\nexports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=function(){throw Error(\"act(...) is not supported in production builds of React.\");};\nexports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};exports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};\nexports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};exports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};\nexports.useTransition=function(){return U.current.useTransition()};exports.version=\"18.2.0\";\n","/**\n * @license React\n * react.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n\n          'use strict';\n\n/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n}\n          var ReactVersion = '18.2.0';\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\n/**\n * Keeps track of the current dispatcher.\n */\nvar ReactCurrentDispatcher = {\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null\n};\n\n/**\n * Keeps track of the current batch's configuration such as how long an update\n * should suspend for if it needs to.\n */\nvar ReactCurrentBatchConfig = {\n  transition: null\n};\n\nvar ReactCurrentActQueue = {\n  current: null,\n  // Used to reproduce behavior of `batchedUpdates` in legacy mode.\n  isBatchingLegacy: false,\n  didScheduleLegacyUpdate: false\n};\n\n/**\n * Keeps track of the current owner.\n *\n * The current owner is the component who should own any components that are\n * currently being constructed.\n */\nvar ReactCurrentOwner = {\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null\n};\n\nvar ReactDebugCurrentFrame = {};\nvar currentExtraStackFrame = null;\nfunction setExtraStackFrame(stack) {\n  {\n    currentExtraStackFrame = stack;\n  }\n}\n\n{\n  ReactDebugCurrentFrame.setExtraStackFrame = function (stack) {\n    {\n      currentExtraStackFrame = stack;\n    }\n  }; // Stack implementation injected by the current renderer.\n\n\n  ReactDebugCurrentFrame.getCurrentStack = null;\n\n  ReactDebugCurrentFrame.getStackAddendum = function () {\n    var stack = ''; // Add an extra top frame while an element is being validated\n\n    if (currentExtraStackFrame) {\n      stack += currentExtraStackFrame;\n    } // Delegate to the injected renderer-specific implementation\n\n\n    var impl = ReactDebugCurrentFrame.getCurrentStack;\n\n    if (impl) {\n      stack += impl() || '';\n    }\n\n    return stack;\n  };\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\nvar ReactSharedInternals = {\n  ReactCurrentDispatcher: ReactCurrentDispatcher,\n  ReactCurrentBatchConfig: ReactCurrentBatchConfig,\n  ReactCurrentOwner: ReactCurrentOwner\n};\n\n{\n  ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;\n  ReactSharedInternals.ReactCurrentActQueue = ReactCurrentActQueue;\n}\n\n// by calls to these methods by a Babel plugin.\n//\n// In PROD (or in packages without access to React internals),\n// they are left as they are instead.\n\nfunction warn(format) {\n  {\n    {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      printWarning('warn', format, args);\n    }\n  }\n}\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\nvar didWarnStateUpdateForUnmountedComponent = {};\n\nfunction warnNoop(publicInstance, callerName) {\n  {\n    var _constructor = publicInstance.constructor;\n    var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';\n    var warningKey = componentName + \".\" + callerName;\n\n    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {\n      return;\n    }\n\n    error(\"Can't call %s on a component that is not yet mounted. \" + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);\n\n    didWarnStateUpdateForUnmountedComponent[warningKey] = true;\n  }\n}\n/**\n * This is the abstract API for an update queue.\n */\n\n\nvar ReactNoopUpdateQueue = {\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function (publicInstance) {\n    return false;\n  },\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueForceUpdate: function (publicInstance, callback, callerName) {\n    warnNoop(publicInstance, 'forceUpdate');\n  },\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {\n    warnNoop(publicInstance, 'replaceState');\n  },\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} Name of the calling function in the public API.\n   * @internal\n   */\n  enqueueSetState: function (publicInstance, partialState, callback, callerName) {\n    warnNoop(publicInstance, 'setState');\n  }\n};\n\nvar assign = Object.assign;\n\nvar emptyObject = {};\n\n{\n  Object.freeze(emptyObject);\n}\n/**\n * Base class helpers for the updating state of a component.\n */\n\n\nfunction Component(props, context, updater) {\n  this.props = props;\n  this.context = context; // If a component has string refs, we will assign a different object later.\n\n  this.refs = emptyObject; // We initialize the default updater but the real one gets injected by the\n  // renderer.\n\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nComponent.prototype.isReactComponent = {};\n/**\n * Sets a subset of the state. Always use this to mutate\n * state. You should treat `this.state` as immutable.\n *\n * There is no guarantee that `this.state` will be immediately updated, so\n * accessing `this.state` after calling this method may return the old value.\n *\n * There is no guarantee that calls to `setState` will run synchronously,\n * as they may eventually be batched together.  You can provide an optional\n * callback that will be executed when the call to setState is actually\n * completed.\n *\n * When a function is provided to setState, it will be called at some point in\n * the future (not synchronously). It will be called with the up to date\n * component arguments (state, props, context). These values can be different\n * from this.* because your function may be called after receiveProps but before\n * shouldComponentUpdate, and this new state, props, and context will not yet be\n * assigned to this.\n *\n * @param {object|function} partialState Next partial state or function to\n *        produce next partial state to be merged with current state.\n * @param {?function} callback Called after state is updated.\n * @final\n * @protected\n */\n\nComponent.prototype.setState = function (partialState, callback) {\n  if (typeof partialState !== 'object' && typeof partialState !== 'function' && partialState != null) {\n    throw new Error('setState(...): takes an object of state variables to update or a ' + 'function which returns an object of state variables.');\n  }\n\n  this.updater.enqueueSetState(this, partialState, callback, 'setState');\n};\n/**\n * Forces an update. This should only be invoked when it is known with\n * certainty that we are **not** in a DOM transaction.\n *\n * You may want to call this when you know that some deeper aspect of the\n * component's state has changed but `setState` was not called.\n *\n * This will not invoke `shouldComponentUpdate`, but it will invoke\n * `componentWillUpdate` and `componentDidUpdate`.\n *\n * @param {?function} callback Called after update is complete.\n * @final\n * @protected\n */\n\n\nComponent.prototype.forceUpdate = function (callback) {\n  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');\n};\n/**\n * Deprecated APIs. These APIs used to exist on classic React classes but since\n * we would like to deprecate them, we're not going to move them over to this\n * modern base class. Instead, we define a getter that warns if it's accessed.\n */\n\n\n{\n  var deprecatedAPIs = {\n    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],\n    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']\n  };\n\n  var defineDeprecationWarning = function (methodName, info) {\n    Object.defineProperty(Component.prototype, methodName, {\n      get: function () {\n        warn('%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);\n\n        return undefined;\n      }\n    });\n  };\n\n  for (var fnName in deprecatedAPIs) {\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n    }\n  }\n}\n\nfunction ComponentDummy() {}\n\nComponentDummy.prototype = Component.prototype;\n/**\n * Convenience component with default shallow equality check for sCU.\n */\n\nfunction PureComponent(props, context, updater) {\n  this.props = props;\n  this.context = context; // If a component has string refs, we will assign a different object later.\n\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nvar pureComponentPrototype = PureComponent.prototype = new ComponentDummy();\npureComponentPrototype.constructor = PureComponent; // Avoid an extra prototype jump for these methods.\n\nassign(pureComponentPrototype, Component.prototype);\npureComponentPrototype.isPureReactComponent = true;\n\n// an immutable object with a single mutable value\nfunction createRef() {\n  var refObject = {\n    current: null\n  };\n\n  {\n    Object.seal(refObject);\n  }\n\n  return refObject;\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';\n    return type;\n  }\n} // $FlowFixMe only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n\n  return null;\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  var warnAboutAccessingKey = function () {\n    {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    }\n  };\n\n  warnAboutAccessingKey.isReactWarning = true;\n  Object.defineProperty(props, 'key', {\n    get: warnAboutAccessingKey,\n    configurable: true\n  });\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  var warnAboutAccessingRef = function () {\n    {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    }\n  };\n\n  warnAboutAccessingRef.isReactWarning = true;\n  Object.defineProperty(props, 'ref', {\n    get: warnAboutAccessingRef,\n    configurable: true\n  });\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && config.__self && ReactCurrentOwner.current.stateNode !== config.__self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', componentName, config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * Create and return a new ReactElement of the given type.\n * See https://reactjs.org/docs/react-api.html#createelement\n */\n\nfunction createElement(type, config, children) {\n  var propName; // Reserved names are extracted\n\n  var props = {};\n  var key = null;\n  var ref = null;\n  var self = null;\n  var source = null;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      ref = config.ref;\n\n      {\n        warnIfStringRefCannotBeAutoConverted(config);\n      }\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    self = config.__self === undefined ? null : config.__self;\n    source = config.__source === undefined ? null : config.__source; // Remaining properties are added to a new props object\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  } // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n\n\n  var childrenLength = arguments.length - 2;\n\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n\n    {\n      if (Object.freeze) {\n        Object.freeze(childArray);\n      }\n    }\n\n    props.children = childArray;\n  } // Resolve default props\n\n\n  if (type && type.defaultProps) {\n    var defaultProps = type.defaultProps;\n\n    for (propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n\n  {\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n  }\n\n  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n}\nfunction cloneAndReplaceKey(oldElement, newKey) {\n  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\n  return newElement;\n}\n/**\n * Clone and return a new ReactElement using element as the starting point.\n * See https://reactjs.org/docs/react-api.html#cloneelement\n */\n\nfunction cloneElement(element, config, children) {\n  if (element === null || element === undefined) {\n    throw new Error(\"React.cloneElement(...): The argument must be a React element, but you passed \" + element + \".\");\n  }\n\n  var propName; // Original props are copied\n\n  var props = assign({}, element.props); // Reserved names are extracted\n\n  var key = element.key;\n  var ref = element.ref; // Self is preserved since the owner is preserved.\n\n  var self = element._self; // Source is preserved since cloneElement is unlikely to be targeted by a\n  // transpiler, and the original source is probably a better indicator of the\n  // true owner.\n\n  var source = element._source; // Owner will be preserved, unless ref is overridden\n\n  var owner = element._owner;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      // Silently steal the ref from the parent.\n      ref = config.ref;\n      owner = ReactCurrentOwner.current;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    } // Remaining properties override existing props\n\n\n    var defaultProps;\n\n    if (element.type && element.type.defaultProps) {\n      defaultProps = element.type.defaultProps;\n    }\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        if (config[propName] === undefined && defaultProps !== undefined) {\n          // Resolve default props\n          props[propName] = defaultProps[propName];\n        } else {\n          props[propName] = config[propName];\n        }\n      }\n    }\n  } // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n\n\n  var childrenLength = arguments.length - 2;\n\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n\n    props.children = childArray;\n  }\n\n  return ReactElement(element.type, key, ref, self, source, owner, props);\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\nfunction isValidElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\n\nvar SEPARATOR = '.';\nvar SUBSEPARATOR = ':';\n/**\n * Escape and wrap key so it is safe to use as a reactid\n *\n * @param {string} key to be escaped.\n * @return {string} the escaped key.\n */\n\nfunction escape(key) {\n  var escapeRegex = /[=:]/g;\n  var escaperLookup = {\n    '=': '=0',\n    ':': '=2'\n  };\n  var escapedString = key.replace(escapeRegex, function (match) {\n    return escaperLookup[match];\n  });\n  return '$' + escapedString;\n}\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\n\nvar didWarnAboutMaps = false;\nvar userProvidedKeyEscapeRegex = /\\/+/g;\n\nfunction escapeUserProvidedKey(text) {\n  return text.replace(userProvidedKeyEscapeRegex, '$&/');\n}\n/**\n * Generate a key string that identifies a element within a set.\n *\n * @param {*} element A element that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\n\n\nfunction getElementKey(element, index) {\n  // Do some typechecking here since we call this blindly. We want to ensure\n  // that we don't block potential future ES APIs.\n  if (typeof element === 'object' && element !== null && element.key != null) {\n    // Explicit key\n    {\n      checkKeyStringCoercion(element.key);\n    }\n\n    return escape('' + element.key);\n  } // Implicit key determined by the index in the set\n\n\n  return index.toString(36);\n}\n\nfunction mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {\n  var type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  var invokeCallback = false;\n\n  if (children === null) {\n    invokeCallback = true;\n  } else {\n    switch (type) {\n      case 'string':\n      case 'number':\n        invokeCallback = true;\n        break;\n\n      case 'object':\n        switch (children.$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_PORTAL_TYPE:\n            invokeCallback = true;\n        }\n\n    }\n  }\n\n  if (invokeCallback) {\n    var _child = children;\n    var mappedChild = callback(_child); // If it's the only child, treat the name as if it was wrapped in an array\n    // so that it's consistent if the number of children grows:\n\n    var childKey = nameSoFar === '' ? SEPARATOR + getElementKey(_child, 0) : nameSoFar;\n\n    if (isArray(mappedChild)) {\n      var escapedChildKey = '';\n\n      if (childKey != null) {\n        escapedChildKey = escapeUserProvidedKey(childKey) + '/';\n      }\n\n      mapIntoArray(mappedChild, array, escapedChildKey, '', function (c) {\n        return c;\n      });\n    } else if (mappedChild != null) {\n      if (isValidElement(mappedChild)) {\n        {\n          // The `if` statement here prevents auto-disabling of the safe\n          // coercion ESLint rule, so we must manually disable it below.\n          // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key\n          if (mappedChild.key && (!_child || _child.key !== mappedChild.key)) {\n            checkKeyStringCoercion(mappedChild.key);\n          }\n        }\n\n        mappedChild = cloneAndReplaceKey(mappedChild, // Keep both the (mapped) and old keys if they differ, just as\n        // traverseAllChildren used to do for objects as children\n        escapedPrefix + ( // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key\n        mappedChild.key && (!_child || _child.key !== mappedChild.key) ? // $FlowFixMe Flow incorrectly thinks existing element's key can be a number\n        // eslint-disable-next-line react-internal/safe-string-coercion\n        escapeUserProvidedKey('' + mappedChild.key) + '/' : '') + childKey);\n      }\n\n      array.push(mappedChild);\n    }\n\n    return 1;\n  }\n\n  var child;\n  var nextName;\n  var subtreeCount = 0; // Count of children found in the current subtree.\n\n  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n  if (isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getElementKey(child, i);\n      subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);\n    }\n  } else {\n    var iteratorFn = getIteratorFn(children);\n\n    if (typeof iteratorFn === 'function') {\n      var iterableChildren = children;\n\n      {\n        // Warn about using Maps as children\n        if (iteratorFn === iterableChildren.entries) {\n          if (!didWarnAboutMaps) {\n            warn('Using Maps as children is not supported. ' + 'Use an array of keyed ReactElements instead.');\n          }\n\n          didWarnAboutMaps = true;\n        }\n      }\n\n      var iterator = iteratorFn.call(iterableChildren);\n      var step;\n      var ii = 0;\n\n      while (!(step = iterator.next()).done) {\n        child = step.value;\n        nextName = nextNamePrefix + getElementKey(child, ii++);\n        subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);\n      }\n    } else if (type === 'object') {\n      // eslint-disable-next-line react-internal/safe-string-coercion\n      var childrenString = String(children);\n      throw new Error(\"Objects are not valid as a React child (found: \" + (childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString) + \"). \" + 'If you meant to render a collection of children, use an array ' + 'instead.');\n    }\n  }\n\n  return subtreeCount;\n}\n\n/**\n * Maps children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenmap\n *\n * The provided mapFunction(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} func The map function.\n * @param {*} context Context for mapFunction.\n * @return {object} Object containing the ordered map of results.\n */\nfunction mapChildren(children, func, context) {\n  if (children == null) {\n    return children;\n  }\n\n  var result = [];\n  var count = 0;\n  mapIntoArray(children, result, '', '', function (child) {\n    return func.call(context, child, count++);\n  });\n  return result;\n}\n/**\n * Count the number of children that are typically specified as\n * `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrencount\n *\n * @param {?*} children Children tree container.\n * @return {number} The number of children.\n */\n\n\nfunction countChildren(children) {\n  var n = 0;\n  mapChildren(children, function () {\n    n++; // Don't return anything\n  });\n  return n;\n}\n\n/**\n * Iterates through children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenforeach\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} forEachFunc\n * @param {*} forEachContext Context for forEachContext.\n */\nfunction forEachChildren(children, forEachFunc, forEachContext) {\n  mapChildren(children, function () {\n    forEachFunc.apply(this, arguments); // Don't return anything.\n  }, forEachContext);\n}\n/**\n * Flatten a children object (typically specified as `props.children`) and\n * return an array with appropriately re-keyed children.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrentoarray\n */\n\n\nfunction toArray(children) {\n  return mapChildren(children, function (child) {\n    return child;\n  }) || [];\n}\n/**\n * Returns the first child in a collection of children and verifies that there\n * is only one child in the collection.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenonly\n *\n * The current implementation of this function assumes that a single child gets\n * passed without a wrapper, but the purpose of this helper function is to\n * abstract away the particular structure of children.\n *\n * @param {?object} children Child collection structure.\n * @return {ReactElement} The first and only `ReactElement` contained in the\n * structure.\n */\n\n\nfunction onlyChild(children) {\n  if (!isValidElement(children)) {\n    throw new Error('React.Children.only expected to receive a single React element child.');\n  }\n\n  return children;\n}\n\nfunction createContext(defaultValue) {\n  // TODO: Second argument used to be an optional `calculateChangedBits`\n  // function. Warn to reserve for future use?\n  var context = {\n    $$typeof: REACT_CONTEXT_TYPE,\n    // As a workaround to support multiple concurrent renderers, we categorize\n    // some renderers as primary and others as secondary. We only expect\n    // there to be two concurrent renderers at most: React Native (primary) and\n    // Fabric (secondary); React DOM (primary) and React ART (secondary).\n    // Secondary renderers store their context values on separate fields.\n    _currentValue: defaultValue,\n    _currentValue2: defaultValue,\n    // Used to track how many concurrent renderers this context currently\n    // supports within in a single renderer. Such as parallel server rendering.\n    _threadCount: 0,\n    // These are circular\n    Provider: null,\n    Consumer: null,\n    // Add these to use same hidden class in VM as ServerContext\n    _defaultValue: null,\n    _globalName: null\n  };\n  context.Provider = {\n    $$typeof: REACT_PROVIDER_TYPE,\n    _context: context\n  };\n  var hasWarnedAboutUsingNestedContextConsumers = false;\n  var hasWarnedAboutUsingConsumerProvider = false;\n  var hasWarnedAboutDisplayNameOnConsumer = false;\n\n  {\n    // A separate object, but proxies back to the original context object for\n    // backwards compatibility. It has a different $$typeof, so we can properly\n    // warn for the incorrect usage of Context as a Consumer.\n    var Consumer = {\n      $$typeof: REACT_CONTEXT_TYPE,\n      _context: context\n    }; // $FlowFixMe: Flow complains about not setting a value, which is intentional here\n\n    Object.defineProperties(Consumer, {\n      Provider: {\n        get: function () {\n          if (!hasWarnedAboutUsingConsumerProvider) {\n            hasWarnedAboutUsingConsumerProvider = true;\n\n            error('Rendering <Context.Consumer.Provider> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Provider> instead?');\n          }\n\n          return context.Provider;\n        },\n        set: function (_Provider) {\n          context.Provider = _Provider;\n        }\n      },\n      _currentValue: {\n        get: function () {\n          return context._currentValue;\n        },\n        set: function (_currentValue) {\n          context._currentValue = _currentValue;\n        }\n      },\n      _currentValue2: {\n        get: function () {\n          return context._currentValue2;\n        },\n        set: function (_currentValue2) {\n          context._currentValue2 = _currentValue2;\n        }\n      },\n      _threadCount: {\n        get: function () {\n          return context._threadCount;\n        },\n        set: function (_threadCount) {\n          context._threadCount = _threadCount;\n        }\n      },\n      Consumer: {\n        get: function () {\n          if (!hasWarnedAboutUsingNestedContextConsumers) {\n            hasWarnedAboutUsingNestedContextConsumers = true;\n\n            error('Rendering <Context.Consumer.Consumer> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');\n          }\n\n          return context.Consumer;\n        }\n      },\n      displayName: {\n        get: function () {\n          return context.displayName;\n        },\n        set: function (displayName) {\n          if (!hasWarnedAboutDisplayNameOnConsumer) {\n            warn('Setting `displayName` on Context.Consumer has no effect. ' + \"You should set it directly on the context with Context.displayName = '%s'.\", displayName);\n\n            hasWarnedAboutDisplayNameOnConsumer = true;\n          }\n        }\n      }\n    }); // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty\n\n    context.Consumer = Consumer;\n  }\n\n  {\n    context._currentRenderer = null;\n    context._currentRenderer2 = null;\n  }\n\n  return context;\n}\n\nvar Uninitialized = -1;\nvar Pending = 0;\nvar Resolved = 1;\nvar Rejected = 2;\n\nfunction lazyInitializer(payload) {\n  if (payload._status === Uninitialized) {\n    var ctor = payload._result;\n    var thenable = ctor(); // Transition to the next state.\n    // This might throw either because it's missing or throws. If so, we treat it\n    // as still uninitialized and try again next time. Which is the same as what\n    // happens if the ctor or any wrappers processing the ctor throws. This might\n    // end up fixing it if the resolution was a concurrency bug.\n\n    thenable.then(function (moduleObject) {\n      if (payload._status === Pending || payload._status === Uninitialized) {\n        // Transition to the next state.\n        var resolved = payload;\n        resolved._status = Resolved;\n        resolved._result = moduleObject;\n      }\n    }, function (error) {\n      if (payload._status === Pending || payload._status === Uninitialized) {\n        // Transition to the next state.\n        var rejected = payload;\n        rejected._status = Rejected;\n        rejected._result = error;\n      }\n    });\n\n    if (payload._status === Uninitialized) {\n      // In case, we're still uninitialized, then we're waiting for the thenable\n      // to resolve. Set it as pending in the meantime.\n      var pending = payload;\n      pending._status = Pending;\n      pending._result = thenable;\n    }\n  }\n\n  if (payload._status === Resolved) {\n    var moduleObject = payload._result;\n\n    {\n      if (moduleObject === undefined) {\n        error('lazy: Expected the result of a dynamic imp' + 'ort() call. ' + 'Instead received: %s\\n\\nYour code should look like: \\n  ' + // Break up imports to avoid accidentally parsing them as dependencies.\n        'const MyComponent = lazy(() => imp' + \"ort('./MyComponent'))\\n\\n\" + 'Did you accidentally put curly braces around the import?', moduleObject);\n      }\n    }\n\n    {\n      if (!('default' in moduleObject)) {\n        error('lazy: Expected the result of a dynamic imp' + 'ort() call. ' + 'Instead received: %s\\n\\nYour code should look like: \\n  ' + // Break up imports to avoid accidentally parsing them as dependencies.\n        'const MyComponent = lazy(() => imp' + \"ort('./MyComponent'))\", moduleObject);\n      }\n    }\n\n    return moduleObject.default;\n  } else {\n    throw payload._result;\n  }\n}\n\nfunction lazy(ctor) {\n  var payload = {\n    // We use these fields to store the result.\n    _status: Uninitialized,\n    _result: ctor\n  };\n  var lazyType = {\n    $$typeof: REACT_LAZY_TYPE,\n    _payload: payload,\n    _init: lazyInitializer\n  };\n\n  {\n    // In production, this would just set it on the object.\n    var defaultProps;\n    var propTypes; // $FlowFixMe\n\n    Object.defineProperties(lazyType, {\n      defaultProps: {\n        configurable: true,\n        get: function () {\n          return defaultProps;\n        },\n        set: function (newDefaultProps) {\n          error('React.lazy(...): It is not supported to assign `defaultProps` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');\n\n          defaultProps = newDefaultProps; // Match production behavior more closely:\n          // $FlowFixMe\n\n          Object.defineProperty(lazyType, 'defaultProps', {\n            enumerable: true\n          });\n        }\n      },\n      propTypes: {\n        configurable: true,\n        get: function () {\n          return propTypes;\n        },\n        set: function (newPropTypes) {\n          error('React.lazy(...): It is not supported to assign `propTypes` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');\n\n          propTypes = newPropTypes; // Match production behavior more closely:\n          // $FlowFixMe\n\n          Object.defineProperty(lazyType, 'propTypes', {\n            enumerable: true\n          });\n        }\n      }\n    });\n  }\n\n  return lazyType;\n}\n\nfunction forwardRef(render) {\n  {\n    if (render != null && render.$$typeof === REACT_MEMO_TYPE) {\n      error('forwardRef requires a render function but received a `memo` ' + 'component. Instead of forwardRef(memo(...)), use ' + 'memo(forwardRef(...)).');\n    } else if (typeof render !== 'function') {\n      error('forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);\n    } else {\n      if (render.length !== 0 && render.length !== 2) {\n        error('forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.');\n      }\n    }\n\n    if (render != null) {\n      if (render.defaultProps != null || render.propTypes != null) {\n        error('forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?');\n      }\n    }\n  }\n\n  var elementType = {\n    $$typeof: REACT_FORWARD_REF_TYPE,\n    render: render\n  };\n\n  {\n    var ownName;\n    Object.defineProperty(elementType, 'displayName', {\n      enumerable: false,\n      configurable: true,\n      get: function () {\n        return ownName;\n      },\n      set: function (name) {\n        ownName = name; // The inner component shouldn't inherit this display name in most cases,\n        // because the component may be used elsewhere.\n        // But it's nice for anonymous functions to inherit the name,\n        // so that our component-stack generation logic will display their frames.\n        // An anonymous function generally suggests a pattern like:\n        //   React.forwardRef((props, ref) => {...});\n        // This kind of inner function is not used elsewhere so the side effect is okay.\n\n        if (!render.name && !render.displayName) {\n          render.displayName = name;\n        }\n      }\n    });\n  }\n\n  return elementType;\n}\n\nvar REACT_MODULE_REFERENCE;\n\n{\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n}\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction memo(type, compare) {\n  {\n    if (!isValidElementType(type)) {\n      error('memo: The first argument must be a component. Instead ' + 'received: %s', type === null ? 'null' : typeof type);\n    }\n  }\n\n  var elementType = {\n    $$typeof: REACT_MEMO_TYPE,\n    type: type,\n    compare: compare === undefined ? null : compare\n  };\n\n  {\n    var ownName;\n    Object.defineProperty(elementType, 'displayName', {\n      enumerable: false,\n      configurable: true,\n      get: function () {\n        return ownName;\n      },\n      set: function (name) {\n        ownName = name; // The inner component shouldn't inherit this display name in most cases,\n        // because the component may be used elsewhere.\n        // But it's nice for anonymous functions to inherit the name,\n        // so that our component-stack generation logic will display their frames.\n        // An anonymous function generally suggests a pattern like:\n        //   React.memo((props) => {...});\n        // This kind of inner function is not used elsewhere so the side effect is okay.\n\n        if (!type.name && !type.displayName) {\n          type.displayName = name;\n        }\n      }\n    });\n  }\n\n  return elementType;\n}\n\nfunction resolveDispatcher() {\n  var dispatcher = ReactCurrentDispatcher.current;\n\n  {\n    if (dispatcher === null) {\n      error('Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for' + ' one of the following reasons:\\n' + '1. You might have mismatching versions of React and the renderer (such as React DOM)\\n' + '2. You might be breaking the Rules of Hooks\\n' + '3. You might have more than one copy of React in the same app\\n' + 'See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.');\n    }\n  } // Will result in a null access error if accessed outside render phase. We\n  // intentionally don't throw our own error because this is in a hot path.\n  // Also helps ensure this is inlined.\n\n\n  return dispatcher;\n}\nfunction useContext(Context) {\n  var dispatcher = resolveDispatcher();\n\n  {\n    // TODO: add a more generic warning for invalid values.\n    if (Context._context !== undefined) {\n      var realContext = Context._context; // Don't deduplicate because this legitimately causes bugs\n      // and nobody should be using this in existing code.\n\n      if (realContext.Consumer === Context) {\n        error('Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' + 'removed in a future major release. Did you mean to call useContext(Context) instead?');\n      } else if (realContext.Provider === Context) {\n        error('Calling useContext(Context.Provider) is not supported. ' + 'Did you mean to call useContext(Context) instead?');\n      }\n    }\n  }\n\n  return dispatcher.useContext(Context);\n}\nfunction useState(initialState) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useState(initialState);\n}\nfunction useReducer(reducer, initialArg, init) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useReducer(reducer, initialArg, init);\n}\nfunction useRef(initialValue) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useRef(initialValue);\n}\nfunction useEffect(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useEffect(create, deps);\n}\nfunction useInsertionEffect(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useInsertionEffect(create, deps);\n}\nfunction useLayoutEffect(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useLayoutEffect(create, deps);\n}\nfunction useCallback(callback, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useCallback(callback, deps);\n}\nfunction useMemo(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useMemo(create, deps);\n}\nfunction useImperativeHandle(ref, create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useImperativeHandle(ref, create, deps);\n}\nfunction useDebugValue(value, formatterFn) {\n  {\n    var dispatcher = resolveDispatcher();\n    return dispatcher.useDebugValue(value, formatterFn);\n  }\n}\nfunction useTransition() {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useTransition();\n}\nfunction useDeferredValue(value) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useDeferredValue(value);\n}\nfunction useId() {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useId();\n}\nfunction useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n}\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if ( !fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher$1.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher$1.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher$1.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      setExtraStackFrame(stack);\n    } else {\n      setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n\nfunction getDeclarationErrorAddendum() {\n  if (ReactCurrentOwner.current) {\n    var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n    if (name) {\n      return '\\n\\nCheck the render method of `' + name + '`.';\n    }\n  }\n\n  return '';\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  if (source !== undefined) {\n    var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n    var lineNumber = source.lineNumber;\n    return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n  }\n\n  return '';\n}\n\nfunction getSourceInfoErrorAddendumForProps(elementProps) {\n  if (elementProps !== null && elementProps !== undefined) {\n    return getSourceInfoErrorAddendum(elementProps.__source);\n  }\n\n  return '';\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  var info = getDeclarationErrorAddendum();\n\n  if (!info) {\n    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n    if (parentName) {\n      info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n    }\n  }\n\n  return info;\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  if (!element._store || element._store.validated || element.key != null) {\n    return;\n  }\n\n  element._store.validated = true;\n  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n  if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n    return;\n  }\n\n  ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n  // property, it may be the creator of the child that's responsible for\n  // assigning it a key.\n\n  var childOwner = '';\n\n  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n    // Give the component that originally created this child.\n    childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n  }\n\n  {\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  if (typeof node !== 'object') {\n    return;\n  }\n\n  if (isArray(node)) {\n    for (var i = 0; i < node.length; i++) {\n      var child = node[i];\n\n      if (isValidElement(child)) {\n        validateExplicitKey(child, parentType);\n      }\n    }\n  } else if (isValidElement(node)) {\n    // This element was passed in a valid location.\n    if (node._store) {\n      node._store.validated = true;\n    }\n  } else if (node) {\n    var iteratorFn = getIteratorFn(node);\n\n    if (typeof iteratorFn === 'function') {\n      // Entry iterators used to provide implicit keys,\n      // but now we print a separate warning for them later.\n      if (iteratorFn !== node.entries) {\n        var iterator = iteratorFn.call(node);\n        var step;\n\n        while (!(step = iterator.next()).done) {\n          if (isValidElement(step.value)) {\n            validateExplicitKey(step.value, parentType);\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\nfunction createElementWithValidation(type, props, children) {\n  var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n  // succeed and there will likely be errors in render.\n\n  if (!validType) {\n    var info = '';\n\n    if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n      info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n    }\n\n    var sourceInfo = getSourceInfoErrorAddendumForProps(props);\n\n    if (sourceInfo) {\n      info += sourceInfo;\n    } else {\n      info += getDeclarationErrorAddendum();\n    }\n\n    var typeString;\n\n    if (type === null) {\n      typeString = 'null';\n    } else if (isArray(type)) {\n      typeString = 'array';\n    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n      typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n      info = ' Did you accidentally export a JSX literal instead of a component?';\n    } else {\n      typeString = typeof type;\n    }\n\n    {\n      error('React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n  }\n\n  var element = createElement.apply(this, arguments); // The result can be nullish if a mock or a custom function is used.\n  // TODO: Drop this when these are no longer allowed as the type argument.\n\n  if (element == null) {\n    return element;\n  } // Skip key warning if the type isn't valid since our key validation logic\n  // doesn't expect a non-string/function type and can throw confusing errors.\n  // We don't want exception behavior to differ between dev and prod.\n  // (Rendering will throw with a helpful message and as soon as the type is\n  // fixed, the key warnings will appear.)\n\n\n  if (validType) {\n    for (var i = 2; i < arguments.length; i++) {\n      validateChildKeys(arguments[i], type);\n    }\n  }\n\n  if (type === REACT_FRAGMENT_TYPE) {\n    validateFragmentProps(element);\n  } else {\n    validatePropTypes(element);\n  }\n\n  return element;\n}\nvar didWarnAboutDeprecatedCreateFactory = false;\nfunction createFactoryWithValidation(type) {\n  var validatedFactory = createElementWithValidation.bind(null, type);\n  validatedFactory.type = type;\n\n  {\n    if (!didWarnAboutDeprecatedCreateFactory) {\n      didWarnAboutDeprecatedCreateFactory = true;\n\n      warn('React.createFactory() is deprecated and will be removed in ' + 'a future major release. Consider using JSX ' + 'or use React.createElement() directly instead.');\n    } // Legacy hook: remove it\n\n\n    Object.defineProperty(validatedFactory, 'type', {\n      enumerable: false,\n      get: function () {\n        warn('Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');\n\n        Object.defineProperty(this, 'type', {\n          value: type\n        });\n        return type;\n      }\n    });\n  }\n\n  return validatedFactory;\n}\nfunction cloneElementWithValidation(element, props, children) {\n  var newElement = cloneElement.apply(this, arguments);\n\n  for (var i = 2; i < arguments.length; i++) {\n    validateChildKeys(arguments[i], newElement.type);\n  }\n\n  validatePropTypes(newElement);\n  return newElement;\n}\n\nfunction startTransition(scope, options) {\n  var prevTransition = ReactCurrentBatchConfig.transition;\n  ReactCurrentBatchConfig.transition = {};\n  var currentTransition = ReactCurrentBatchConfig.transition;\n\n  {\n    ReactCurrentBatchConfig.transition._updatedFibers = new Set();\n  }\n\n  try {\n    scope();\n  } finally {\n    ReactCurrentBatchConfig.transition = prevTransition;\n\n    {\n      if (prevTransition === null && currentTransition._updatedFibers) {\n        var updatedFibersCount = currentTransition._updatedFibers.size;\n\n        if (updatedFibersCount > 10) {\n          warn('Detected a large number of updates inside startTransition. ' + 'If this is due to a subscription please re-write it to use React provided hooks. ' + 'Otherwise concurrent mode guarantees are off the table.');\n        }\n\n        currentTransition._updatedFibers.clear();\n      }\n    }\n  }\n}\n\nvar didWarnAboutMessageChannel = false;\nvar enqueueTaskImpl = null;\nfunction enqueueTask(task) {\n  if (enqueueTaskImpl === null) {\n    try {\n      // read require off the module object to get around the bundlers.\n      // we don't want them to detect a require and bundle a Node polyfill.\n      var requireString = ('require' + Math.random()).slice(0, 7);\n      var nodeRequire = module && module[requireString]; // assuming we're in node, let's try to get node's\n      // version of setImmediate, bypassing fake timers if any.\n\n      enqueueTaskImpl = nodeRequire.call(module, 'timers').setImmediate;\n    } catch (_err) {\n      // we're in a browser\n      // we can't use regular timers because they may still be faked\n      // so we try MessageChannel+postMessage instead\n      enqueueTaskImpl = function (callback) {\n        {\n          if (didWarnAboutMessageChannel === false) {\n            didWarnAboutMessageChannel = true;\n\n            if (typeof MessageChannel === 'undefined') {\n              error('This browser does not have a MessageChannel implementation, ' + 'so enqueuing tasks via await act(async () => ...) will fail. ' + 'Please file an issue at https://github.com/facebook/react/issues ' + 'if you encounter this warning.');\n            }\n          }\n        }\n\n        var channel = new MessageChannel();\n        channel.port1.onmessage = callback;\n        channel.port2.postMessage(undefined);\n      };\n    }\n  }\n\n  return enqueueTaskImpl(task);\n}\n\nvar actScopeDepth = 0;\nvar didWarnNoAwaitAct = false;\nfunction act(callback) {\n  {\n    // `act` calls can be nested, so we track the depth. This represents the\n    // number of `act` scopes on the stack.\n    var prevActScopeDepth = actScopeDepth;\n    actScopeDepth++;\n\n    if (ReactCurrentActQueue.current === null) {\n      // This is the outermost `act` scope. Initialize the queue. The reconciler\n      // will detect the queue and use it instead of Scheduler.\n      ReactCurrentActQueue.current = [];\n    }\n\n    var prevIsBatchingLegacy = ReactCurrentActQueue.isBatchingLegacy;\n    var result;\n\n    try {\n      // Used to reproduce behavior of `batchedUpdates` in legacy mode. Only\n      // set to `true` while the given callback is executed, not for updates\n      // triggered during an async event, because this is how the legacy\n      // implementation of `act` behaved.\n      ReactCurrentActQueue.isBatchingLegacy = true;\n      result = callback(); // Replicate behavior of original `act` implementation in legacy mode,\n      // which flushed updates immediately after the scope function exits, even\n      // if it's an async function.\n\n      if (!prevIsBatchingLegacy && ReactCurrentActQueue.didScheduleLegacyUpdate) {\n        var queue = ReactCurrentActQueue.current;\n\n        if (queue !== null) {\n          ReactCurrentActQueue.didScheduleLegacyUpdate = false;\n          flushActQueue(queue);\n        }\n      }\n    } catch (error) {\n      popActScope(prevActScopeDepth);\n      throw error;\n    } finally {\n      ReactCurrentActQueue.isBatchingLegacy = prevIsBatchingLegacy;\n    }\n\n    if (result !== null && typeof result === 'object' && typeof result.then === 'function') {\n      var thenableResult = result; // The callback is an async function (i.e. returned a promise). Wait\n      // for it to resolve before exiting the current scope.\n\n      var wasAwaited = false;\n      var thenable = {\n        then: function (resolve, reject) {\n          wasAwaited = true;\n          thenableResult.then(function (returnValue) {\n            popActScope(prevActScopeDepth);\n\n            if (actScopeDepth === 0) {\n              // We've exited the outermost act scope. Recursively flush the\n              // queue until there's no remaining work.\n              recursivelyFlushAsyncActWork(returnValue, resolve, reject);\n            } else {\n              resolve(returnValue);\n            }\n          }, function (error) {\n            // The callback threw an error.\n            popActScope(prevActScopeDepth);\n            reject(error);\n          });\n        }\n      };\n\n      {\n        if (!didWarnNoAwaitAct && typeof Promise !== 'undefined') {\n          // eslint-disable-next-line no-undef\n          Promise.resolve().then(function () {}).then(function () {\n            if (!wasAwaited) {\n              didWarnNoAwaitAct = true;\n\n              error('You called act(async () => ...) without await. ' + 'This could lead to unexpected testing behaviour, ' + 'interleaving multiple act calls and mixing their ' + 'scopes. ' + 'You should - await act(async () => ...);');\n            }\n          });\n        }\n      }\n\n      return thenable;\n    } else {\n      var returnValue = result; // The callback is not an async function. Exit the current scope\n      // immediately, without awaiting.\n\n      popActScope(prevActScopeDepth);\n\n      if (actScopeDepth === 0) {\n        // Exiting the outermost act scope. Flush the queue.\n        var _queue = ReactCurrentActQueue.current;\n\n        if (_queue !== null) {\n          flushActQueue(_queue);\n          ReactCurrentActQueue.current = null;\n        } // Return a thenable. If the user awaits it, we'll flush again in\n        // case additional work was scheduled by a microtask.\n\n\n        var _thenable = {\n          then: function (resolve, reject) {\n            // Confirm we haven't re-entered another `act` scope, in case\n            // the user does something weird like await the thenable\n            // multiple times.\n            if (ReactCurrentActQueue.current === null) {\n              // Recursively flush the queue until there's no remaining work.\n              ReactCurrentActQueue.current = [];\n              recursivelyFlushAsyncActWork(returnValue, resolve, reject);\n            } else {\n              resolve(returnValue);\n            }\n          }\n        };\n        return _thenable;\n      } else {\n        // Since we're inside a nested `act` scope, the returned thenable\n        // immediately resolves. The outer scope will flush the queue.\n        var _thenable2 = {\n          then: function (resolve, reject) {\n            resolve(returnValue);\n          }\n        };\n        return _thenable2;\n      }\n    }\n  }\n}\n\nfunction popActScope(prevActScopeDepth) {\n  {\n    if (prevActScopeDepth !== actScopeDepth - 1) {\n      error('You seem to have overlapping act() calls, this is not supported. ' + 'Be sure to await previous act() calls before making a new one. ');\n    }\n\n    actScopeDepth = prevActScopeDepth;\n  }\n}\n\nfunction recursivelyFlushAsyncActWork(returnValue, resolve, reject) {\n  {\n    var queue = ReactCurrentActQueue.current;\n\n    if (queue !== null) {\n      try {\n        flushActQueue(queue);\n        enqueueTask(function () {\n          if (queue.length === 0) {\n            // No additional work was scheduled. Finish.\n            ReactCurrentActQueue.current = null;\n            resolve(returnValue);\n          } else {\n            // Keep flushing work until there's none left.\n            recursivelyFlushAsyncActWork(returnValue, resolve, reject);\n          }\n        });\n      } catch (error) {\n        reject(error);\n      }\n    } else {\n      resolve(returnValue);\n    }\n  }\n}\n\nvar isFlushing = false;\n\nfunction flushActQueue(queue) {\n  {\n    if (!isFlushing) {\n      // Prevent re-entrance.\n      isFlushing = true;\n      var i = 0;\n\n      try {\n        for (; i < queue.length; i++) {\n          var callback = queue[i];\n\n          do {\n            callback = callback(true);\n          } while (callback !== null);\n        }\n\n        queue.length = 0;\n      } catch (error) {\n        // If something throws, leave the remaining callbacks on the queue.\n        queue = queue.slice(i + 1);\n        throw error;\n      } finally {\n        isFlushing = false;\n      }\n    }\n  }\n}\n\nvar createElement$1 =  createElementWithValidation ;\nvar cloneElement$1 =  cloneElementWithValidation ;\nvar createFactory =  createFactoryWithValidation ;\nvar Children = {\n  map: mapChildren,\n  forEach: forEachChildren,\n  count: countChildren,\n  toArray: toArray,\n  only: onlyChild\n};\n\nexports.Children = Children;\nexports.Component = Component;\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.Profiler = REACT_PROFILER_TYPE;\nexports.PureComponent = PureComponent;\nexports.StrictMode = REACT_STRICT_MODE_TYPE;\nexports.Suspense = REACT_SUSPENSE_TYPE;\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;\nexports.cloneElement = cloneElement$1;\nexports.createContext = createContext;\nexports.createElement = createElement$1;\nexports.createFactory = createFactory;\nexports.createRef = createRef;\nexports.forwardRef = forwardRef;\nexports.isValidElement = isValidElement;\nexports.lazy = lazy;\nexports.memo = memo;\nexports.startTransition = startTransition;\nexports.unstable_act = act;\nexports.useCallback = useCallback;\nexports.useContext = useContext;\nexports.useDebugValue = useDebugValue;\nexports.useDeferredValue = useDeferredValue;\nexports.useEffect = useEffect;\nexports.useId = useId;\nexports.useImperativeHandle = useImperativeHandle;\nexports.useInsertionEffect = useInsertionEffect;\nexports.useLayoutEffect = useLayoutEffect;\nexports.useMemo = useMemo;\nexports.useReducer = useReducer;\nexports.useRef = useRef;\nexports.useState = useState;\nexports.useSyncExternalStore = useSyncExternalStore;\nexports.useTransition = useTransition;\nexports.version = ReactVersion;\n          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n}\n        \n  })();\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","/**\n * @license React\n * use-sync-external-store-shim.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var e=require(\"react\");function h(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var k=\"function\"===typeof Object.is?Object.is:h,l=e.useState,m=e.useEffect,n=e.useLayoutEffect,p=e.useDebugValue;function q(a,b){var d=b(),f=l({inst:{value:d,getSnapshot:b}}),c=f[0].inst,g=f[1];n(function(){c.value=d;c.getSnapshot=b;r(c)&&g({inst:c})},[a,d,b]);m(function(){r(c)&&g({inst:c});return a(function(){r(c)&&g({inst:c})})},[a]);p(d);return d}\nfunction r(a){var b=a.getSnapshot;a=a.value;try{var d=b();return!k(a,d)}catch(f){return!0}}function t(a,b){return b()}var u=\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement?t:q;exports.useSyncExternalStore=void 0!==e.useSyncExternalStore?e.useSyncExternalStore:u;\n","/**\n * @license React\n * use-sync-external-store-shim.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n\n          'use strict';\n\n/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n}\n          var React = require('react');\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare\n  ;\n}\n\nvar objectIs = typeof Object.is === 'function' ? Object.is : is;\n\n// dispatch for CommonJS interop named imports.\n\nvar useState = React.useState,\n    useEffect = React.useEffect,\n    useLayoutEffect = React.useLayoutEffect,\n    useDebugValue = React.useDebugValue;\nvar didWarnOld18Alpha = false;\nvar didWarnUncachedGetSnapshot = false; // Disclaimer: This shim breaks many of the rules of React, and only works\n// because of a very particular set of implementation details and assumptions\n// -- change any one of them and it will break. The most important assumption\n// is that updates are always synchronous, because concurrent rendering is\n// only available in versions of React that also have a built-in\n// useSyncExternalStore API. And we only use this shim when the built-in API\n// does not exist.\n//\n// Do not assume that the clever hacks used by this hook also work in general.\n// The point of this shim is to replace the need for hacks by other libraries.\n\nfunction useSyncExternalStore(subscribe, getSnapshot, // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n// React do not expose a way to check if we're hydrating. So users of the shim\n// will need to track that themselves and return the correct value\n// from `getSnapshot`.\ngetServerSnapshot) {\n  {\n    if (!didWarnOld18Alpha) {\n      if (React.startTransition !== undefined) {\n        didWarnOld18Alpha = true;\n\n        error('You are using an outdated, pre-release alpha of React 18 that ' + 'does not support useSyncExternalStore. The ' + 'use-sync-external-store shim will not work correctly. Upgrade ' + 'to a newer pre-release.');\n      }\n    }\n  } // Read the current snapshot from the store on every render. Again, this\n  // breaks the rules of React, and only works here because of specific\n  // implementation details, most importantly that updates are\n  // always synchronous.\n\n\n  var value = getSnapshot();\n\n  {\n    if (!didWarnUncachedGetSnapshot) {\n      var cachedValue = getSnapshot();\n\n      if (!objectIs(value, cachedValue)) {\n        error('The result of getSnapshot should be cached to avoid an infinite loop');\n\n        didWarnUncachedGetSnapshot = true;\n      }\n    }\n  } // Because updates are synchronous, we don't queue them. Instead we force a\n  // re-render whenever the subscribed state changes by updating an some\n  // arbitrary useState hook. Then, during render, we call getSnapshot to read\n  // the current value.\n  //\n  // Because we don't actually use the state returned by the useState hook, we\n  // can save a bit of memory by storing other stuff in that slot.\n  //\n  // To implement the early bailout, we need to track some things on a mutable\n  // object. Usually, we would put that in a useRef hook, but we can stash it in\n  // our useState hook instead.\n  //\n  // To force a re-render, we call forceUpdate({inst}). That works because the\n  // new object always fails an equality check.\n\n\n  var _useState = useState({\n    inst: {\n      value: value,\n      getSnapshot: getSnapshot\n    }\n  }),\n      inst = _useState[0].inst,\n      forceUpdate = _useState[1]; // Track the latest getSnapshot function with a ref. This needs to be updated\n  // in the layout phase so we can access it during the tearing check that\n  // happens on subscribe.\n\n\n  useLayoutEffect(function () {\n    inst.value = value;\n    inst.getSnapshot = getSnapshot; // Whenever getSnapshot or subscribe changes, we need to check in the\n    // commit phase if there was an interleaved mutation. In concurrent mode\n    // this can happen all the time, but even in synchronous mode, an earlier\n    // effect may have mutated the store.\n\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({\n        inst: inst\n      });\n    }\n  }, [subscribe, value, getSnapshot]);\n  useEffect(function () {\n    // Check for changes right before subscribing. Subsequent changes will be\n    // detected in the subscription handler.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({\n        inst: inst\n      });\n    }\n\n    var handleStoreChange = function () {\n      // TODO: Because there is no cross-renderer API for batching updates, it's\n      // up to the consumer of this library to wrap their subscription event\n      // with unstable_batchedUpdates. Should we try to detect when this isn't\n      // the case and print a warning in development?\n      // The store changed. Check if the snapshot changed since the last time we\n      // read from the store.\n      if (checkIfSnapshotChanged(inst)) {\n        // Force a re-render.\n        forceUpdate({\n          inst: inst\n        });\n      }\n    }; // Subscribe to the store and return a clean-up function.\n\n\n    return subscribe(handleStoreChange);\n  }, [subscribe]);\n  useDebugValue(value);\n  return value;\n}\n\nfunction checkIfSnapshotChanged(inst) {\n  var latestGetSnapshot = inst.getSnapshot;\n  var prevValue = inst.value;\n\n  try {\n    var nextValue = latestGetSnapshot();\n    return !objectIs(prevValue, nextValue);\n  } catch (error) {\n    return true;\n  }\n}\n\nfunction useSyncExternalStore$1(subscribe, getSnapshot, getServerSnapshot) {\n  // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n  // React do not expose a way to check if we're hydrating. So users of the shim\n  // will need to track that themselves and return the correct value\n  // from `getSnapshot`.\n  return getSnapshot();\n}\n\nvar canUseDOM = !!(typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined');\n\nvar isServerEnvironment = !canUseDOM;\n\nvar shim = isServerEnvironment ? useSyncExternalStore$1 : useSyncExternalStore;\nvar useSyncExternalStore$2 = React.useSyncExternalStore !== undefined ? React.useSyncExternalStore : shim;\n\nexports.useSyncExternalStore = useSyncExternalStore$2;\n          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n}\n        \n  })();\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim.production.min.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim.development.js');\n}\n","export class ConnectorAlreadyConnectedError extends Error {\n  public name: string = 'ConnectorAlreadyConnectedError';\n  public message: string = 'Connector already connected';\n}\n","export class ClientNotFoundError extends Error {\n  public name: string = 'ClientNotFoundError';\n  public message: string = 'Client not found';\n}\n","const createStoreImpl = (createState) => {\n  let state;\n  const listeners = /* @__PURE__ */ new Set();\n  const setState = (partial, replace) => {\n    const nextState = typeof partial === \"function\" ? partial(state) : partial;\n    if (!Object.is(nextState, state)) {\n      const previousState = state;\n      state = (replace != null ? replace : typeof nextState !== \"object\") ? nextState : Object.assign({}, state, nextState);\n      listeners.forEach((listener) => listener(state, previousState));\n    }\n  };\n  const getState = () => state;\n  const subscribe = (listener) => {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  };\n  const destroy = () => {\n    if ((import.meta.env && import.meta.env.MODE) !== \"production\") {\n      console.warn(\n        \"[DEPRECATED] The destroy method will be unsupported in the future version. You should use unsubscribe function returned by subscribe. Everything will be garbage collected if store is garbage collected.\"\n      );\n    }\n    listeners.clear();\n  };\n  const api = { setState, getState, subscribe, destroy };\n  state = createState(setState, getState, api);\n  return api;\n};\nconst createStore = (createState) => createState ? createStoreImpl(createState) : createStoreImpl;\nvar vanilla = (createState) => {\n  if ((import.meta.env && import.meta.env.MODE) !== \"production\") {\n    console.warn(\n      \"[DEPRECATED] default export is deprecated, instead import { createStore } ...\"\n    );\n  }\n  return createStore(createState);\n};\n\nexport { createStore, vanilla as default };\n","const reduxImpl = (reducer, initial) => (set, _get, api) => {\n  api.dispatch = (action) => {\n    set((state) => reducer(state, action), false, action);\n    return action;\n  };\n  api.dispatchFromDevtools = true;\n  return { dispatch: (...a) => api.dispatch(...a), ...initial };\n};\nconst redux = reduxImpl;\n\nconst trackedConnections = /* @__PURE__ */ new Map();\nconst getTrackedConnectionState = (name) => {\n  const api = trackedConnections.get(name);\n  if (!api)\n    return {};\n  return Object.fromEntries(\n    Object.entries(api.stores).map(([key, api2]) => [key, api2.getState()])\n  );\n};\nconst extractConnectionInformation = (store, extensionConnector, options) => {\n  if (store === void 0) {\n    return {\n      type: \"untracked\",\n      connection: extensionConnector.connect(options)\n    };\n  }\n  const existingConnection = trackedConnections.get(options.name);\n  if (existingConnection) {\n    return { type: \"tracked\", store, ...existingConnection };\n  }\n  const newConnection = {\n    connection: extensionConnector.connect(options),\n    stores: {}\n  };\n  trackedConnections.set(options.name, newConnection);\n  return { type: \"tracked\", store, ...newConnection };\n};\nconst devtoolsImpl = (fn, devtoolsOptions = {}) => (set, get, api) => {\n  const { enabled, anonymousActionType, store, ...options } = devtoolsOptions;\n  let extensionConnector;\n  try {\n    extensionConnector = (enabled != null ? enabled : (import.meta.env && import.meta.env.MODE) !== \"production\") && window.__REDUX_DEVTOOLS_EXTENSION__;\n  } catch (e) {\n  }\n  if (!extensionConnector) {\n    if ((import.meta.env && import.meta.env.MODE) !== \"production\" && enabled) {\n      console.warn(\n        \"[zustand devtools middleware] Please install/enable Redux devtools extension\"\n      );\n    }\n    return fn(set, get, api);\n  }\n  const { connection, ...connectionInformation } = extractConnectionInformation(store, extensionConnector, options);\n  let isRecording = true;\n  api.setState = (state, replace, nameOrAction) => {\n    const r = set(state, replace);\n    if (!isRecording)\n      return r;\n    const action = nameOrAction === void 0 ? { type: anonymousActionType || \"anonymous\" } : typeof nameOrAction === \"string\" ? { type: nameOrAction } : nameOrAction;\n    if (store === void 0) {\n      connection == null ? void 0 : connection.send(action, get());\n      return r;\n    }\n    connection == null ? void 0 : connection.send(\n      {\n        ...action,\n        type: `${store}/${action.type}`\n      },\n      {\n        ...getTrackedConnectionState(options.name),\n        [store]: api.getState()\n      }\n    );\n    return r;\n  };\n  const setStateFromDevtools = (...a) => {\n    const originalIsRecording = isRecording;\n    isRecording = false;\n    set(...a);\n    isRecording = originalIsRecording;\n  };\n  const initialState = fn(api.setState, get, api);\n  if (connectionInformation.type === \"untracked\") {\n    connection == null ? void 0 : connection.init(initialState);\n  } else {\n    connectionInformation.stores[connectionInformation.store] = api;\n    connection == null ? void 0 : connection.init(\n      Object.fromEntries(\n        Object.entries(connectionInformation.stores).map(([key, store2]) => [\n          key,\n          key === connectionInformation.store ? initialState : store2.getState()\n        ])\n      )\n    );\n  }\n  if (api.dispatchFromDevtools && typeof api.dispatch === \"function\") {\n    let didWarnAboutReservedActionType = false;\n    const originalDispatch = api.dispatch;\n    api.dispatch = (...a) => {\n      if ((import.meta.env && import.meta.env.MODE) !== \"production\" && a[0].type === \"__setState\" && !didWarnAboutReservedActionType) {\n        console.warn(\n          '[zustand devtools middleware] \"__setState\" action type is reserved to set state from the devtools. Avoid using it.'\n        );\n        didWarnAboutReservedActionType = true;\n      }\n      originalDispatch(...a);\n    };\n  }\n  connection.subscribe((message) => {\n    var _a;\n    switch (message.type) {\n      case \"ACTION\":\n        if (typeof message.payload !== \"string\") {\n          console.error(\n            \"[zustand devtools middleware] Unsupported action format\"\n          );\n          return;\n        }\n        return parseJsonThen(\n          message.payload,\n          (action) => {\n            if (action.type === \"__setState\") {\n              if (store === void 0) {\n                setStateFromDevtools(action.state);\n                return;\n              }\n              if (Object.keys(action.state).length !== 1) {\n                console.error(\n                  `\n                    [zustand devtools middleware] Unsupported __setState action format. \n                    When using 'store' option in devtools(), the 'state' should have only one key, which is a value of 'store' that was passed in devtools(),\n                    and value of this only key should be a state object. Example: { \"type\": \"__setState\", \"state\": { \"abc123Store\": { \"foo\": \"bar\" } } }\n                    `\n                );\n              }\n              const stateFromDevtools = action.state[store];\n              if (stateFromDevtools === void 0 || stateFromDevtools === null) {\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(stateFromDevtools)) {\n                setStateFromDevtools(stateFromDevtools);\n              }\n              return;\n            }\n            if (!api.dispatchFromDevtools)\n              return;\n            if (typeof api.dispatch !== \"function\")\n              return;\n            api.dispatch(action);\n          }\n        );\n      case \"DISPATCH\":\n        switch (message.payload.type) {\n          case \"RESET\":\n            setStateFromDevtools(initialState);\n            if (store === void 0) {\n              return connection == null ? void 0 : connection.init(api.getState());\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"COMMIT\":\n            if (store === void 0) {\n              connection == null ? void 0 : connection.init(api.getState());\n              return;\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"ROLLBACK\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                connection == null ? void 0 : connection.init(api.getState());\n                return;\n              }\n              setStateFromDevtools(state[store]);\n              connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n            });\n          case \"JUMP_TO_STATE\":\n          case \"JUMP_TO_ACTION\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(state[store])) {\n                setStateFromDevtools(state[store]);\n              }\n            });\n          case \"IMPORT_STATE\": {\n            const { nextLiftedState } = message.payload;\n            const lastComputedState = (_a = nextLiftedState.computedStates.slice(-1)[0]) == null ? void 0 : _a.state;\n            if (!lastComputedState)\n              return;\n            if (store === void 0) {\n              setStateFromDevtools(lastComputedState);\n            } else {\n              setStateFromDevtools(lastComputedState[store]);\n            }\n            connection == null ? void 0 : connection.send(\n              null,\n              // FIXME no-any\n              nextLiftedState\n            );\n            return;\n          }\n          case \"PAUSE_RECORDING\":\n            return isRecording = !isRecording;\n        }\n        return;\n    }\n  });\n  return initialState;\n};\nconst devtools = devtoolsImpl;\nconst parseJsonThen = (stringified, f) => {\n  let parsed;\n  try {\n    parsed = JSON.parse(stringified);\n  } catch (e) {\n    console.error(\n      \"[zustand devtools middleware] Could not parse the received json\",\n      e\n    );\n  }\n  if (parsed !== void 0)\n    f(parsed);\n};\n\nconst subscribeWithSelectorImpl = (fn) => (set, get, api) => {\n  const origSubscribe = api.subscribe;\n  api.subscribe = (selector, optListener, options) => {\n    let listener = selector;\n    if (optListener) {\n      const equalityFn = (options == null ? void 0 : options.equalityFn) || Object.is;\n      let currentSlice = selector(api.getState());\n      listener = (state) => {\n        const nextSlice = selector(state);\n        if (!equalityFn(currentSlice, nextSlice)) {\n          const previousSlice = currentSlice;\n          optListener(currentSlice = nextSlice, previousSlice);\n        }\n      };\n      if (options == null ? void 0 : options.fireImmediately) {\n        optListener(currentSlice, currentSlice);\n      }\n    }\n    return origSubscribe(listener);\n  };\n  const initialState = fn(set, get, api);\n  return initialState;\n};\nconst subscribeWithSelector = subscribeWithSelectorImpl;\n\nconst combine = (initialState, create) => (...a) => Object.assign({}, initialState, create(...a));\n\nfunction createJSONStorage(getStorage) {\n  let storage;\n  try {\n    storage = getStorage();\n  } catch (e) {\n    return;\n  }\n  const persistStorage = {\n    getItem: (name) => {\n      var _a;\n      const parse = (str2) => {\n        if (str2 === null) {\n          return null;\n        }\n        return JSON.parse(str2);\n      };\n      const str = (_a = storage.getItem(name)) != null ? _a : null;\n      if (str instanceof Promise) {\n        return str.then(parse);\n      }\n      return parse(str);\n    },\n    setItem: (name, newValue) => storage.setItem(name, JSON.stringify(newValue)),\n    removeItem: (name) => storage.removeItem(name)\n  };\n  return persistStorage;\n}\nconst toThenable = (fn) => (input) => {\n  try {\n    const result = fn(input);\n    if (result instanceof Promise) {\n      return result;\n    }\n    return {\n      then(onFulfilled) {\n        return toThenable(onFulfilled)(result);\n      },\n      catch(_onRejected) {\n        return this;\n      }\n    };\n  } catch (e) {\n    return {\n      then(_onFulfilled) {\n        return this;\n      },\n      catch(onRejected) {\n        return toThenable(onRejected)(e);\n      }\n    };\n  }\n};\nconst oldImpl = (config, baseOptions) => (set, get, api) => {\n  let options = {\n    getStorage: () => localStorage,\n    serialize: JSON.stringify,\n    deserialize: JSON.parse,\n    partialize: (state) => state,\n    version: 0,\n    merge: (persistedState, currentState) => ({\n      ...currentState,\n      ...persistedState\n    }),\n    ...baseOptions\n  };\n  let hasHydrated = false;\n  const hydrationListeners = /* @__PURE__ */ new Set();\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\n  let storage;\n  try {\n    storage = options.getStorage();\n  } catch (e) {\n  }\n  if (!storage) {\n    return config(\n      (...args) => {\n        console.warn(\n          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`\n        );\n        set(...args);\n      },\n      get,\n      api\n    );\n  }\n  const thenableSerialize = toThenable(options.serialize);\n  const setItem = () => {\n    const state = options.partialize({ ...get() });\n    let errorInSync;\n    const thenable = thenableSerialize({ state, version: options.version }).then(\n      (serializedValue) => storage.setItem(options.name, serializedValue)\n    ).catch((e) => {\n      errorInSync = e;\n    });\n    if (errorInSync) {\n      throw errorInSync;\n    }\n    return thenable;\n  };\n  const savedSetState = api.setState;\n  api.setState = (state, replace) => {\n    savedSetState(state, replace);\n    void setItem();\n  };\n  const configResult = config(\n    (...args) => {\n      set(...args);\n      void setItem();\n    },\n    get,\n    api\n  );\n  let stateFromStorage;\n  const hydrate = () => {\n    var _a;\n    if (!storage)\n      return;\n    hasHydrated = false;\n    hydrationListeners.forEach((cb) => cb(get()));\n    const postRehydrationCallback = ((_a = options.onRehydrateStorage) == null ? void 0 : _a.call(options, get())) || void 0;\n    return toThenable(storage.getItem.bind(storage))(options.name).then((storageValue) => {\n      if (storageValue) {\n        return options.deserialize(storageValue);\n      }\n    }).then((deserializedStorageValue) => {\n      if (deserializedStorageValue) {\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n          if (options.migrate) {\n            return options.migrate(\n              deserializedStorageValue.state,\n              deserializedStorageValue.version\n            );\n          }\n          console.error(\n            `State loaded from storage couldn't be migrated since no migrate function was provided`\n          );\n        } else {\n          return deserializedStorageValue.state;\n        }\n      }\n    }).then((migratedState) => {\n      var _a2;\n      stateFromStorage = options.merge(\n        migratedState,\n        (_a2 = get()) != null ? _a2 : configResult\n      );\n      set(stateFromStorage, true);\n      return setItem();\n    }).then(() => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\n      hasHydrated = true;\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\n    }).catch((e) => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\n    });\n  };\n  api.persist = {\n    setOptions: (newOptions) => {\n      options = {\n        ...options,\n        ...newOptions\n      };\n      if (newOptions.getStorage) {\n        storage = newOptions.getStorage();\n      }\n    },\n    clearStorage: () => {\n      storage == null ? void 0 : storage.removeItem(options.name);\n    },\n    getOptions: () => options,\n    rehydrate: () => hydrate(),\n    hasHydrated: () => hasHydrated,\n    onHydrate: (cb) => {\n      hydrationListeners.add(cb);\n      return () => {\n        hydrationListeners.delete(cb);\n      };\n    },\n    onFinishHydration: (cb) => {\n      finishHydrationListeners.add(cb);\n      return () => {\n        finishHydrationListeners.delete(cb);\n      };\n    }\n  };\n  hydrate();\n  return stateFromStorage || configResult;\n};\nconst newImpl = (config, baseOptions) => (set, get, api) => {\n  let options = {\n    storage: createJSONStorage(() => localStorage),\n    partialize: (state) => state,\n    version: 0,\n    merge: (persistedState, currentState) => ({\n      ...currentState,\n      ...persistedState\n    }),\n    ...baseOptions\n  };\n  let hasHydrated = false;\n  const hydrationListeners = /* @__PURE__ */ new Set();\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\n  let storage = options.storage;\n  if (!storage) {\n    return config(\n      (...args) => {\n        console.warn(\n          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`\n        );\n        set(...args);\n      },\n      get,\n      api\n    );\n  }\n  const setItem = () => {\n    const state = options.partialize({ ...get() });\n    return storage.setItem(options.name, {\n      state,\n      version: options.version\n    });\n  };\n  const savedSetState = api.setState;\n  api.setState = (state, replace) => {\n    savedSetState(state, replace);\n    void setItem();\n  };\n  const configResult = config(\n    (...args) => {\n      set(...args);\n      void setItem();\n    },\n    get,\n    api\n  );\n  let stateFromStorage;\n  const hydrate = () => {\n    var _a;\n    if (!storage)\n      return;\n    hasHydrated = false;\n    hydrationListeners.forEach((cb) => cb(get()));\n    const postRehydrationCallback = ((_a = options.onRehydrateStorage) == null ? void 0 : _a.call(options, get())) || void 0;\n    return toThenable(storage.getItem.bind(storage))(options.name).then((deserializedStorageValue) => {\n      if (deserializedStorageValue) {\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n          if (options.migrate) {\n            return options.migrate(\n              deserializedStorageValue.state,\n              deserializedStorageValue.version\n            );\n          }\n          console.error(\n            `State loaded from storage couldn't be migrated since no migrate function was provided`\n          );\n        } else {\n          return deserializedStorageValue.state;\n        }\n      }\n    }).then((migratedState) => {\n      var _a2;\n      stateFromStorage = options.merge(\n        migratedState,\n        (_a2 = get()) != null ? _a2 : configResult\n      );\n      set(stateFromStorage, true);\n      return setItem();\n    }).then(() => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\n      hasHydrated = true;\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\n    }).catch((e) => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\n    });\n  };\n  api.persist = {\n    setOptions: (newOptions) => {\n      options = {\n        ...options,\n        ...newOptions\n      };\n      if (newOptions.storage) {\n        storage = newOptions.storage;\n      }\n    },\n    clearStorage: () => {\n      storage == null ? void 0 : storage.removeItem(options.name);\n    },\n    getOptions: () => options,\n    rehydrate: () => hydrate(),\n    hasHydrated: () => hasHydrated,\n    onHydrate: (cb) => {\n      hydrationListeners.add(cb);\n      return () => {\n        hydrationListeners.delete(cb);\n      };\n    },\n    onFinishHydration: (cb) => {\n      finishHydrationListeners.add(cb);\n      return () => {\n        finishHydrationListeners.delete(cb);\n      };\n    }\n  };\n  hydrate();\n  return stateFromStorage || configResult;\n};\nconst persistImpl = (config, baseOptions) => {\n  if (\"getStorage\" in baseOptions || \"serialize\" in baseOptions || \"deserialize\" in baseOptions) {\n    if ((import.meta.env && import.meta.env.MODE) !== \"production\") {\n      console.warn(\n        \"[DEPRECATED] `getStorage`, `serialize` and `deserialize` options are deprecated. Please use `storage` option instead.\"\n      );\n    }\n    return oldImpl(config, baseOptions);\n  }\n  return newImpl(config, baseOptions);\n};\nconst persist = persistImpl;\n\nexport { combine, createJSONStorage, devtools, persist, redux, subscribeWithSelector };\n","import { createStore, Mutate, StoreApi } from 'zustand/vanilla';\nimport { subscribeWithSelector } from 'zustand/middleware';\n\nimport { Connector, ConnectorData } from '../connectors/base';\nimport { ClientNotFoundError } from '../errors';\nimport { StatusEnum } from '../enums';\n\nexport type StateParams = {\n  connectors: Connector[];\n  connector?: Connector;\n  data?: ConnectorData;\n  status?: StatusEnum;\n};\n\n\nexport type ClientConfig = StateParams;\n\nexport class Client {\n  private store: Mutate<\n  StoreApi<StateParams>,\n  [\n    ['zustand/subscribeWithSelector', never],\n  ]\n  >;\n\n  constructor({\n    connectors,\n  }: ClientConfig) {\n    this.store = createStore(subscribeWithSelector(() => ({\n      connectors: connectors,\n      status: StatusEnum.DISCONNECTED,\n    })));\n\n    this.triggerEvent();\n  }\n\n  public get connector(): Connector | undefined {\n    return this.store.getState().connector;\n  }\n\n  public get subscribe() {\n    return this.store.subscribe;\n  }\n\n  public get data() {\n    return this.store.getState().data;\n  }\n\n  public get status() {\n    return this.store.getState().status;\n  }\n\n  public clearState() {\n    this.setState((x: StateParams) => ({\n      ...x,\n      connector: undefined,\n      data: undefined,\n    }));\n  }\n\n  public setState(\n    updater:\n    | Partial<StateParams>\n    | ((\n      state: StateParams,\n    ) => StateParams),\n  ) {\n    const newState =\n      typeof updater === 'function' ? updater(this.store.getState()) : updater;\n    this.store.setState(newState, true);\n  }\n\n  private triggerEvent(): void {\n    const onChange = (data: ConnectorData) => {\n      console.log('onChange', data);\n      this.setState((x: StateParams) => ({\n        ...x,\n        data: { ...x.data, ...data },\n      }));\n    };\n\n    const onDisconnect = () => {\n      console.log('onDisconnect');\n      this.clearState();\n    };\n\n    const onConnect = (data: ConnectorData) => {\n      console.log('onConnect', data);\n      this.setState((x: StateParams) => ({\n        ...x,\n        data: { ...x.data, ...data },\n        status: StatusEnum.CONNECTED,\n      }));\n    };\n\n    this.store.subscribe(\n      ({ connector }: StateParams) => connector!,\n      (connector: Connector) => {\n        // prevConnector?.off?.('change', onChange);\n        // prevConnector?.off?.('disconnect', onDisconnect);\n        // prevConnector?.off?.('connect', onConnect);\n\n        if (!connector) return;\n        // console.log('connector');\n\n        // connector.on?.('change', onChange);\n        // connector.on?.('disconnect', onDisconnect);\n        // connector.on?.('connect', onDisconnect);\n\n        window?.addEventListener('casper:change',\n          (event: CustomEventInit<{ activeKey: string; isConnected: boolean }>) => onChange(event.detail!));\n        window?.addEventListener('casper:disconnect', () => onDisconnect());\n        window?.addEventListener('casper:connect',\n          (event: CustomEventInit<{ activeKey: string; isConnected: boolean }>) => onConnect(event.detail!));\n      },\n    );\n  }\n}\n\nexport let client: Client;\n\nexport const createClient = (clientConfig: ClientConfig): Client => {\n  client = new Client(clientConfig);\n\n  return client;\n};\n\nexport const getClient = (): Client => {\n  if (!client) {\n    throw new ClientNotFoundError();\n  }\n\n  return client;\n};\n","import { Connector } from '@usedapp/core/connectors/base';\nimport { StatusEnum } from '@usedapp/core/enums';\nimport { ConnectorAlreadyConnectedError } from '@usedapp/core/errors';\nimport { getClient, StateParams } from '@usedapp/core/utils/client';\n\nexport type ConnectParams = {\n  connector: Connector;\n};\n\nexport type ConnectResult = {\n  connector: Connector;\n};\n\nexport const connect = async ({ connector }: ConnectParams): Promise<ConnectResult> => {\n  const client = getClient();\n  const activeConnector = client?.connector;\n\n  if (activeConnector && activeConnector.id !== connector.id) {\n    throw new ConnectorAlreadyConnectedError();\n  }\n\n  try {\n    client.setState((x: StateParams) => ({ ...x, status: StatusEnum.CONNECTING }));\n    await connector.connect();\n    let customData = {};\n    let isConnected = false;\n\n    try {\n      const activeKey = await connector.getActivePublicKey();\n      customData = {\n        activeKey: activeKey,\n      };\n      isConnected = !!activeKey;\n    } catch (err) {\n      console.error(err);\n    }\n\n    client.setState((oldState: StateParams) => ({\n      ...oldState,\n      connector,\n      status: isConnected ? StatusEnum.CONNECTED : StatusEnum.CONNECTING,\n      data: {\n        ...oldState.data,\n        ...customData,\n      },\n    }));\n\n    return {\n      connector,\n    };\n  } catch (error) {\n    console.error(error);\n\n    throw error;\n  }\n};\n","import { getClient } from '@usedapp/core/utils/client';\n\nexport const disconnect = async (): Promise<void> => {\n  const connector = getClient()?.connector;\n\n  try {\n    await connector?.disconnect();\n  } catch (error) {\n    console.error(error);\n  }\n};\n","import { getClient } from '@usedapp/core/utils/client';\n\nexport const getActivePublicKey = async (): Promise<string | undefined> => {\n  const connector = getClient()?.connector;\n\n  try {\n    const activeKey = await connector?.getActivePublicKey();\n\n    return activeKey;\n  } catch (error) {\n    console.error(error);\n  }\n};\n","function shallow(objA, objB) {\n  if (Object.is(objA, objB)) {\n    return true;\n  }\n  if (typeof objA !== \"object\" || objA === null || typeof objB !== \"object\" || objB === null) {\n    return false;\n  }\n  if (objA instanceof Map && objB instanceof Map) {\n    if (objA.size !== objB.size)\n      return false;\n    for (const [key, value] of objA) {\n      if (!Object.is(value, objB.get(key))) {\n        return false;\n      }\n    }\n    return true;\n  }\n  if (objA instanceof Set && objB instanceof Set) {\n    if (objA.size !== objB.size)\n      return false;\n    for (const value of objA) {\n      if (!objB.has(value)) {\n        return false;\n      }\n    }\n    return true;\n  }\n  const keysA = Object.keys(objA);\n  if (keysA.length !== Object.keys(objB).length) {\n    return false;\n  }\n  for (let i = 0; i < keysA.length; i++) {\n    if (!Object.prototype.hasOwnProperty.call(objB, keysA[i]) || !Object.is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n  return true;\n}\nvar shallow$1 = (objA, objB) => {\n  if ((import.meta.env && import.meta.env.MODE) !== \"production\") {\n    console.warn(\n      \"[DEPRECATED] default export is deprecated, instead import { shallow } from'zustand/shallow'\"\n    );\n  }\n  return shallow(objA, objB);\n};\n\nexport { shallow$1 as default, shallow };\n","import { Connector } from '@usedapp/core/connectors';\nimport { StatusEnum } from '@usedapp/core/enums';\nimport { getClient } from '@usedapp/core/utils';\n\nexport type Account = {\n  publicKey?: string;\n  status?: StatusEnum;\n  connector?: Connector;\n};\n\nexport const getAccount = (): Account | null => {\n  try {\n    const client = getClient();\n    const { data, status, connector } = client;\n\n    return {\n      publicKey: data?.activeKey,\n      status,\n      connector,\n    };\n  } catch (error) {\n    console.error(error);\n\n    return null;\n  }\n};\n","import { shallow } from 'zustand/shallow';\nimport { Connector } from '@usedapp/core/connectors/base';\nimport { StatusEnum } from '@usedapp/core/enums';\nimport { getClient, StateParams } from '@usedapp/core/utils/client';\n\nimport { Account, getAccount } from './getAccount';\n\nexport type Acount = {\n  publicKey: string;\n};\n\nexport type WatchAccountSelectorParams = {\n  publicKey?: string;\n  connector?: Connector;\n  status?: StatusEnum;\n};\n\nexport type WatchAccountOptions = {\n  selector?: ({\n    publicKey,\n    connector,\n    status,\n  }: WatchAccountSelectorParams) => any;\n};\n\nexport const watchAccount = (\n  callback: (account: Account | null) => void,\n  { selector = (params: WatchAccountSelectorParams) => params } : WatchAccountOptions = {}): any => {\n  const client = getClient();\n\n  const handleOnChange = () => callback(getAccount());\n  const unsubscribe = client.subscribe(\n    ({ data, connector, status }: StateParams) => {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n      return selector?.({\n        publicKey: data?.activeKey,\n        status,\n        connector,\n      });\n    },\n    handleOnChange,\n    {\n      equalityFn: shallow,\n    },\n  );\n\n  return unsubscribe;\n};\n","import { getClient } from '@usedapp/core/utils/client';\nimport { JsonTypes } from 'typedjson';\n\nexport type SignParams = {\n  deploy: unknown;\n  signingPublicKey: string;\n  targetPublicKeyHex: string;\n};\n\nexport type SignResult = { deploy: JsonTypes } | undefined;\n\nexport const sign = async ({ deploy, signingPublicKey, targetPublicKeyHex }: SignParams): Promise<SignResult> => {\n  const connector = getClient()?.connector;\n\n  try {\n    return await connector?.sign(deploy, signingPublicKey, targetPublicKeyHex);\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import { getClient } from '@usedapp/core/utils/client';\n\nexport type SignMessageParams = {\n  message: string;\n  signingPublicKey: string;\n};\n\nexport type SignMessageResult = string | undefined;\n\nexport const signMessage = async ({ message, signingPublicKey }: SignMessageParams): Promise<SignMessageResult> => {\n  const connector = getClient()?.connector;\n\n  try {\n    return await connector?.signMessage(message, signingPublicKey);\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import { default as EventEmitter } from 'eventemitter3';\nimport { JsonTypes } from 'typedjson';\n\nexport type ConnectorData<Provider = unknown> = {\n  activeKey?: string;\n  isConnected?: boolean;\n  provider?: Provider;\n};\n\nexport interface ConnectorEvents {\n  change(data: ConnectorData): void;\n  connect(data: ConnectorData): void;\n  message({ type, data }: { type: string; data?: unknown }): void;\n  disconnect(): void;\n  error(error: Error): void;\n}\n\nexport abstract class Connector<Provider = unknown, EventProvider = unknown, Options = unknown> extends EventEmitter<ConnectorEvents> {\n  protected readonly options: Options;\n  public abstract readonly id: string;\n\n  constructor({\n    options,\n  }: {\n    options: Options;\n  }) {\n    super();\n    this.options = options;\n  }\n\n  public abstract getProvider(): Promise<Provider>;\n  public abstract getEventProvider(): Promise<EventProvider>;\n\n  public abstract isConnected(): Promise<boolean>;\n  public abstract disconnect(): Promise<void>;\n  public abstract connect(): Promise<void>;\n  public abstract getActivePublicKey(): Promise<string>;\n  public abstract signMessage(message:string, signingPublicKey: string): Promise<string>;\n  public abstract sign(deploy: unknown, signingPublicKeyHex: string, targetPublicKeyHex: string): Promise<{ deploy: JsonTypes }>;\n\n  public abstract onConnected(event: CustomEventInit): void;\n  public abstract onDisconnected(): void;\n  public abstract onActiveKeyChanged(event: CustomEventInit): void;\n}\n","import {\n  Account,\n  watchAccount,\n  StatusEnum,\n  getActivePublicKey,\n} from '@usedapp/core';\nimport { useEffect, useState } from 'react';\n\nexport const useAccount = () => {\n  const [publicKey, setPublicKey] = useState<string | null>(null);\n  const [status, setStatus] = useState<StatusEnum>(StatusEnum.DISCONNECTED);\n\n  useEffect(() => {\n    const initAccount = async (): Promise<void> => {\n      const fetchedPublicKey = await getActivePublicKey();\n\n      if (fetchedPublicKey) {\n        setPublicKey(fetchedPublicKey);\n      }\n    };\n\n    void initAccount();\n\n    watchAccount((account: Account | null) => {\n      if (!account) {\n        return;\n      }\n\n      setPublicKey(account.publicKey ? account.publicKey : null);\n      setStatus(account.status ? account.status : StatusEnum.DISCONNECTED);\n    });\n  }, []);\n\n  return {\n    status,\n    publicKey,\n  };\n};\n","import { useCallback } from 'react';\nimport { useMutation, UseMutationOptions } from '@tanstack/react-query';\nimport { connect as connectDapp, ConnectParams, ConnectResult } from '@usedapp/core';\nimport { MutationKeysEnum } from '@usedapp/react';\n\nexport type UseConnectParams = Partial<ConnectParams>;\n\nexport type UseConnectConfig = Partial<UseMutationOptions<ConnectResult, unknown, UseConnectParams>>;\n\nexport type UseConnectProps = UseConnectParams & UseConnectConfig;\n\nconst mutationFn = async (args: UseConnectParams) => {\n  const { connector } = args;\n  if (!connector) {\n    throw new Error('connector is required');\n  }\n\n  return connectDapp({ connector });\n};\n\nexport const useConnect = ({\n  connector,\n  onError,\n  onMutate,\n  onSettled,\n  onSuccess,\n}: UseConnectProps) => {\n  const {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    reset,\n    status,\n    variables,\n    mutate,\n    mutateAsync,\n  } = useMutation([MutationKeysEnum.CONNECT], mutationFn, {\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess,\n  });\n\n  const connect = useCallback(() => {\n    return mutate({\n      connector,\n    });\n  }, [connector]);\n\n  const connectAsync = useCallback(async () => {\n    return mutateAsync({\n      connector,\n    });\n  }, [connector]);\n\n  return {\n    connect,\n    connectAsync,\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    reset,\n    status,\n    variables,\n  };\n};\n","type Listener = () => void\n\nexport class Subscribable<TListener extends Function = Listener> {\n  protected listeners: TListener[]\n\n  constructor() {\n    this.listeners = []\n    this.subscribe = this.subscribe.bind(this)\n  }\n\n  subscribe(listener: TListener): () => void {\n    this.listeners.push(listener as TListener)\n\n    this.onSubscribe()\n\n    return () => {\n      this.listeners = this.listeners.filter((x) => x !== listener)\n      this.onUnsubscribe()\n    }\n  }\n\n  hasListeners(): boolean {\n    return this.listeners.length > 0\n  }\n\n  protected onSubscribe(): void {\n    // Do nothing\n  }\n\n  protected onUnsubscribe(): void {\n    // Do nothing\n  }\n}\n","import type { Mutation } from './mutation'\nimport type { Query } from './query'\nimport type {\n  FetchStatus,\n  MutationFunction,\n  MutationKey,\n  MutationOptions,\n  QueryFunction,\n  QueryKey,\n  QueryOptions,\n} from './types'\n\n// TYPES\n\nexport interface QueryFilters {\n  /**\n   * Filter to active queries, inactive queries or all queries\n   */\n  type?: QueryTypeFilter\n  /**\n   * Match query key exactly\n   */\n  exact?: boolean\n  /**\n   * Include queries matching this predicate function\n   */\n  predicate?: (query: Query) => boolean\n  /**\n   * Include queries matching this query key\n   */\n  queryKey?: QueryKey\n  /**\n   * Include or exclude stale queries\n   */\n  stale?: boolean\n  /**\n   * Include queries matching their fetchStatus\n   */\n  fetchStatus?: FetchStatus\n}\n\nexport interface MutationFilters {\n  /**\n   * Match mutation key exactly\n   */\n  exact?: boolean\n  /**\n   * Include mutations matching this predicate function\n   */\n  predicate?: (mutation: Mutation<any, any, any>) => boolean\n  /**\n   * Include mutations matching this mutation key\n   */\n  mutationKey?: MutationKey\n  /**\n   * Include or exclude fetching mutations\n   */\n  fetching?: boolean\n}\n\nexport type DataUpdateFunction<TInput, TOutput> = (input: TInput) => TOutput\n\nexport type Updater<TInput, TOutput> =\n  | TOutput\n  | DataUpdateFunction<TInput, TOutput>\n\nexport type QueryTypeFilter = 'all' | 'active' | 'inactive'\n\n// UTILS\n\nexport const isServer = typeof window === 'undefined' || 'Deno' in window\n\nexport function noop(): undefined {\n  return undefined\n}\n\nexport function functionalUpdate<TInput, TOutput>(\n  updater: Updater<TInput, TOutput>,\n  input: TInput,\n): TOutput {\n  return typeof updater === 'function'\n    ? (updater as DataUpdateFunction<TInput, TOutput>)(input)\n    : updater\n}\n\nexport function isValidTimeout(value: unknown): value is number {\n  return typeof value === 'number' && value >= 0 && value !== Infinity\n}\n\nexport function difference<T>(array1: T[], array2: T[]): T[] {\n  return array1.filter((x) => array2.indexOf(x) === -1)\n}\n\nexport function replaceAt<T>(array: T[], index: number, value: T): T[] {\n  const copy = array.slice(0)\n  copy[index] = value\n  return copy\n}\n\nexport function timeUntilStale(updatedAt: number, staleTime?: number): number {\n  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0)\n}\n\nexport function parseQueryArgs<\n  TOptions extends QueryOptions<any, any, any, TQueryKey>,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  arg1: TQueryKey | TOptions,\n  arg2?: QueryFunction<any, TQueryKey> | TOptions,\n  arg3?: TOptions,\n): TOptions {\n  if (!isQueryKey(arg1)) {\n    return arg1 as TOptions\n  }\n\n  if (typeof arg2 === 'function') {\n    return { ...arg3, queryKey: arg1, queryFn: arg2 } as TOptions\n  }\n\n  return { ...arg2, queryKey: arg1 } as TOptions\n}\n\nexport function parseMutationArgs<\n  TOptions extends MutationOptions<any, any, any, any>,\n>(\n  arg1: MutationKey | MutationFunction<any, any> | TOptions,\n  arg2?: MutationFunction<any, any> | TOptions,\n  arg3?: TOptions,\n): TOptions {\n  if (isQueryKey(arg1)) {\n    if (typeof arg2 === 'function') {\n      return { ...arg3, mutationKey: arg1, mutationFn: arg2 } as TOptions\n    }\n    return { ...arg2, mutationKey: arg1 } as TOptions\n  }\n\n  if (typeof arg1 === 'function') {\n    return { ...arg2, mutationFn: arg1 } as TOptions\n  }\n\n  return { ...arg1 } as TOptions\n}\n\nexport function parseFilterArgs<\n  TFilters extends QueryFilters,\n  TOptions = unknown,\n>(\n  arg1?: QueryKey | TFilters,\n  arg2?: TFilters | TOptions,\n  arg3?: TOptions,\n): [TFilters, TOptions | undefined] {\n  return (\n    isQueryKey(arg1) ? [{ ...arg2, queryKey: arg1 }, arg3] : [arg1 || {}, arg2]\n  ) as [TFilters, TOptions]\n}\n\nexport function parseMutationFilterArgs<\n  TFilters extends MutationFilters,\n  TOptions = unknown,\n>(\n  arg1?: QueryKey | TFilters,\n  arg2?: TFilters | TOptions,\n  arg3?: TOptions,\n): [TFilters, TOptions | undefined] {\n  return (\n    isQueryKey(arg1)\n      ? [{ ...arg2, mutationKey: arg1 }, arg3]\n      : [arg1 || {}, arg2]\n  ) as [TFilters, TOptions]\n}\n\nexport function matchQuery(\n  filters: QueryFilters,\n  query: Query<any, any, any, any>,\n): boolean {\n  const {\n    type = 'all',\n    exact,\n    fetchStatus,\n    predicate,\n    queryKey,\n    stale,\n  } = filters\n\n  if (isQueryKey(queryKey)) {\n    if (exact) {\n      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n        return false\n      }\n    } else if (!partialMatchKey(query.queryKey, queryKey)) {\n      return false\n    }\n  }\n\n  if (type !== 'all') {\n    const isActive = query.isActive()\n    if (type === 'active' && !isActive) {\n      return false\n    }\n    if (type === 'inactive' && isActive) {\n      return false\n    }\n  }\n\n  if (typeof stale === 'boolean' && query.isStale() !== stale) {\n    return false\n  }\n\n  if (\n    typeof fetchStatus !== 'undefined' &&\n    fetchStatus !== query.state.fetchStatus\n  ) {\n    return false\n  }\n\n  if (predicate && !predicate(query)) {\n    return false\n  }\n\n  return true\n}\n\nexport function matchMutation(\n  filters: MutationFilters,\n  mutation: Mutation<any, any>,\n): boolean {\n  const { exact, fetching, predicate, mutationKey } = filters\n  if (isQueryKey(mutationKey)) {\n    if (!mutation.options.mutationKey) {\n      return false\n    }\n    if (exact) {\n      if (\n        hashQueryKey(mutation.options.mutationKey) !== hashQueryKey(mutationKey)\n      ) {\n        return false\n      }\n    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n      return false\n    }\n  }\n\n  if (\n    typeof fetching === 'boolean' &&\n    (mutation.state.status === 'loading') !== fetching\n  ) {\n    return false\n  }\n\n  if (predicate && !predicate(mutation)) {\n    return false\n  }\n\n  return true\n}\n\nexport function hashQueryKeyByOptions<TQueryKey extends QueryKey = QueryKey>(\n  queryKey: TQueryKey,\n  options?: QueryOptions<any, any, any, TQueryKey>,\n): string {\n  const hashFn = options?.queryKeyHashFn || hashQueryKey\n  return hashFn(queryKey)\n}\n\n/**\n * Default query keys hash function.\n * Hashes the value into a stable hash.\n */\nexport function hashQueryKey(queryKey: QueryKey): string {\n  return JSON.stringify(queryKey, (_, val) =>\n    isPlainObject(val)\n      ? Object.keys(val)\n          .sort()\n          .reduce((result, key) => {\n            result[key] = val[key]\n            return result\n          }, {} as any)\n      : val,\n  )\n}\n\n/**\n * Checks if key `b` partially matches with key `a`.\n */\nexport function partialMatchKey(a: QueryKey, b: QueryKey): boolean {\n  return partialDeepEqual(a, b)\n}\n\n/**\n * Checks if `b` partially matches with `a`.\n */\nexport function partialDeepEqual(a: any, b: any): boolean {\n  if (a === b) {\n    return true\n  }\n\n  if (typeof a !== typeof b) {\n    return false\n  }\n\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    return !Object.keys(b).some((key) => !partialDeepEqual(a[key], b[key]))\n  }\n\n  return false\n}\n\n/**\n * This function returns `a` if `b` is deeply equal.\n * If not, it will replace any deeply equal children of `b` with those of `a`.\n * This can be used for structural sharing between JSON values for example.\n */\nexport function replaceEqualDeep<T>(a: unknown, b: T): T\nexport function replaceEqualDeep(a: any, b: any): any {\n  if (a === b) {\n    return a\n  }\n\n  const array = isPlainArray(a) && isPlainArray(b)\n\n  if (array || (isPlainObject(a) && isPlainObject(b))) {\n    const aSize = array ? a.length : Object.keys(a).length\n    const bItems = array ? b : Object.keys(b)\n    const bSize = bItems.length\n    const copy: any = array ? [] : {}\n\n    let equalItems = 0\n\n    for (let i = 0; i < bSize; i++) {\n      const key = array ? i : bItems[i]\n      copy[key] = replaceEqualDeep(a[key], b[key])\n      if (copy[key] === a[key]) {\n        equalItems++\n      }\n    }\n\n    return aSize === bSize && equalItems === aSize ? a : copy\n  }\n\n  return b\n}\n\n/**\n * Shallow compare objects. Only works with objects that always have the same properties.\n */\nexport function shallowEqualObjects<T>(a: T, b: T): boolean {\n  if ((a && !b) || (b && !a)) {\n    return false\n  }\n\n  for (const key in a) {\n    if (a[key] !== b[key]) {\n      return false\n    }\n  }\n\n  return true\n}\n\nexport function isPlainArray(value: unknown) {\n  return Array.isArray(value) && value.length === Object.keys(value).length\n}\n\n// Copied from: https://github.com/jonschlinkert/is-plain-object\nexport function isPlainObject(o: any): o is Object {\n  if (!hasObjectPrototype(o)) {\n    return false\n  }\n\n  // If has modified constructor\n  const ctor = o.constructor\n  if (typeof ctor === 'undefined') {\n    return true\n  }\n\n  // If has modified prototype\n  const prot = ctor.prototype\n  if (!hasObjectPrototype(prot)) {\n    return false\n  }\n\n  // If constructor does not have an Object-specific method\n  if (!prot.hasOwnProperty('isPrototypeOf')) {\n    return false\n  }\n\n  // Most likely a plain Object\n  return true\n}\n\nfunction hasObjectPrototype(o: any): boolean {\n  return Object.prototype.toString.call(o) === '[object Object]'\n}\n\nexport function isQueryKey(value: unknown): value is QueryKey {\n  return Array.isArray(value)\n}\n\nexport function isError(value: any): value is Error {\n  return value instanceof Error\n}\n\nexport function sleep(timeout: number): Promise<void> {\n  return new Promise((resolve) => {\n    setTimeout(resolve, timeout)\n  })\n}\n\n/**\n * Schedules a microtask.\n * This can be useful to schedule state updates after rendering.\n */\nexport function scheduleMicrotask(callback: () => void) {\n  sleep(0).then(callback)\n}\n\nexport function getAbortController(): AbortController | undefined {\n  if (typeof AbortController === 'function') {\n    return new AbortController()\n  }\n  return\n}\n\nexport function replaceData<\n  TData,\n  TOptions extends QueryOptions<any, any, any, any>,\n>(prevData: TData | undefined, data: TData, options: TOptions): TData {\n  // Use prev data if an isDataEqual function is defined and returns `true`\n  if (options.isDataEqual?.(prevData, data)) {\n    return prevData as TData\n  } else if (typeof options.structuralSharing === 'function') {\n    return options.structuralSharing(prevData, data)\n  } else if (options.structuralSharing !== false) {\n    // Structurally share data between prev and new data if needed\n    return replaceEqualDeep(prevData, data)\n  }\n  return data\n}\n","import { Subscribable } from './subscribable'\nimport { isServer } from './utils'\n\ntype SetupFn = (\n  setFocused: (focused?: boolean) => void,\n) => (() => void) | undefined\n\nexport class FocusManager extends Subscribable {\n  private focused?: boolean\n  private cleanup?: () => void\n\n  private setup: SetupFn\n\n  constructor() {\n    super()\n    this.setup = (onFocus) => {\n      // addEventListener does not exist in React Native, but window does\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (!isServer && window.addEventListener) {\n        const listener = () => onFocus()\n        // Listen to visibillitychange and focus\n        window.addEventListener('visibilitychange', listener, false)\n        window.addEventListener('focus', listener, false)\n\n        return () => {\n          // Be sure to unsubscribe if a new handler is set\n          window.removeEventListener('visibilitychange', listener)\n          window.removeEventListener('focus', listener)\n        }\n      }\n      return\n    }\n  }\n\n  protected onSubscribe(): void {\n    if (!this.cleanup) {\n      this.setEventListener(this.setup)\n    }\n  }\n\n  protected onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.cleanup?.()\n      this.cleanup = undefined\n    }\n  }\n\n  setEventListener(setup: SetupFn): void {\n    this.setup = setup\n    this.cleanup?.()\n    this.cleanup = setup((focused) => {\n      if (typeof focused === 'boolean') {\n        this.setFocused(focused)\n      } else {\n        this.onFocus()\n      }\n    })\n  }\n\n  setFocused(focused?: boolean): void {\n    this.focused = focused\n\n    if (focused) {\n      this.onFocus()\n    }\n  }\n\n  onFocus(): void {\n    this.listeners.forEach((listener) => {\n      listener()\n    })\n  }\n\n  isFocused(): boolean {\n    if (typeof this.focused === 'boolean') {\n      return this.focused\n    }\n\n    // document global can be unavailable in react native\n    if (typeof document === 'undefined') {\n      return true\n    }\n\n    return [undefined, 'visible', 'prerender'].includes(\n      document.visibilityState,\n    )\n  }\n}\n\nexport const focusManager = new FocusManager()\n","import { Subscribable } from './subscribable'\nimport { isServer } from './utils'\n\ntype SetupFn = (\n  setOnline: (online?: boolean) => void,\n) => (() => void) | undefined\n\nexport class OnlineManager extends Subscribable {\n  private online?: boolean\n  private cleanup?: () => void\n\n  private setup: SetupFn\n\n  constructor() {\n    super()\n    this.setup = (onOnline) => {\n      // addEventListener does not exist in React Native, but window does\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (!isServer && window.addEventListener) {\n        const listener = () => onOnline()\n        // Listen to online\n        window.addEventListener('online', listener, false)\n        window.addEventListener('offline', listener, false)\n\n        return () => {\n          // Be sure to unsubscribe if a new handler is set\n          window.removeEventListener('online', listener)\n          window.removeEventListener('offline', listener)\n        }\n      }\n\n      return\n    }\n  }\n\n  protected onSubscribe(): void {\n    if (!this.cleanup) {\n      this.setEventListener(this.setup)\n    }\n  }\n\n  protected onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.cleanup?.()\n      this.cleanup = undefined\n    }\n  }\n\n  setEventListener(setup: SetupFn): void {\n    this.setup = setup\n    this.cleanup?.()\n    this.cleanup = setup((online?: boolean) => {\n      if (typeof online === 'boolean') {\n        this.setOnline(online)\n      } else {\n        this.onOnline()\n      }\n    })\n  }\n\n  setOnline(online?: boolean): void {\n    this.online = online\n\n    if (online) {\n      this.onOnline()\n    }\n  }\n\n  onOnline(): void {\n    this.listeners.forEach((listener) => {\n      listener()\n    })\n  }\n\n  isOnline(): boolean {\n    if (typeof this.online === 'boolean') {\n      return this.online\n    }\n\n    if (\n      typeof navigator === 'undefined' ||\n      typeof navigator.onLine === 'undefined'\n    ) {\n      return true\n    }\n\n    return navigator.onLine\n  }\n}\n\nexport const onlineManager = new OnlineManager()\n","import { focusManager } from './focusManager'\nimport { onlineManager } from './onlineManager'\nimport { sleep } from './utils'\nimport type { CancelOptions, NetworkMode } from './types'\n\n// TYPES\n\ninterface RetryerConfig<TData = unknown, TError = unknown> {\n  fn: () => TData | Promise<TData>\n  abort?: () => void\n  onError?: (error: TError) => void\n  onSuccess?: (data: TData) => void\n  onFail?: (failureCount: number, error: TError) => void\n  onPause?: () => void\n  onContinue?: () => void\n  retry?: RetryValue<TError>\n  retryDelay?: RetryDelayValue<TError>\n  networkMode: NetworkMode | undefined\n}\n\nexport interface Retryer<TData = unknown> {\n  promise: Promise<TData>\n  cancel: (cancelOptions?: CancelOptions) => void\n  continue: () => void\n  cancelRetry: () => void\n  continueRetry: () => void\n}\n\nexport type RetryValue<TError> = boolean | number | ShouldRetryFunction<TError>\n\ntype ShouldRetryFunction<TError> = (\n  failureCount: number,\n  error: TError,\n) => boolean\n\nexport type RetryDelayValue<TError> = number | RetryDelayFunction<TError>\n\ntype RetryDelayFunction<TError = unknown> = (\n  failureCount: number,\n  error: TError,\n) => number\n\nfunction defaultRetryDelay(failureCount: number) {\n  return Math.min(1000 * 2 ** failureCount, 30000)\n}\n\nexport function canFetch(networkMode: NetworkMode | undefined): boolean {\n  return (networkMode ?? 'online') === 'online'\n    ? onlineManager.isOnline()\n    : true\n}\n\nexport class CancelledError {\n  revert?: boolean\n  silent?: boolean\n  constructor(options?: CancelOptions) {\n    this.revert = options?.revert\n    this.silent = options?.silent\n  }\n}\n\nexport function isCancelledError(value: any): value is CancelledError {\n  return value instanceof CancelledError\n}\n\nexport function createRetryer<TData = unknown, TError = unknown>(\n  config: RetryerConfig<TData, TError>,\n): Retryer<TData> {\n  let isRetryCancelled = false\n  let failureCount = 0\n  let isResolved = false\n  let continueFn: ((value?: unknown) => void) | undefined\n  let promiseResolve: (data: TData) => void\n  let promiseReject: (error: TError) => void\n\n  const promise = new Promise<TData>((outerResolve, outerReject) => {\n    promiseResolve = outerResolve\n    promiseReject = outerReject\n  })\n\n  const cancel = (cancelOptions?: CancelOptions): void => {\n    if (!isResolved) {\n      reject(new CancelledError(cancelOptions))\n\n      config.abort?.()\n    }\n  }\n  const cancelRetry = () => {\n    isRetryCancelled = true\n  }\n\n  const continueRetry = () => {\n    isRetryCancelled = false\n  }\n\n  const shouldPause = () =>\n    !focusManager.isFocused() ||\n    (config.networkMode !== 'always' && !onlineManager.isOnline())\n\n  const resolve = (value: any) => {\n    if (!isResolved) {\n      isResolved = true\n      config.onSuccess?.(value)\n      continueFn?.()\n      promiseResolve(value)\n    }\n  }\n\n  const reject = (value: any) => {\n    if (!isResolved) {\n      isResolved = true\n      config.onError?.(value)\n      continueFn?.()\n      promiseReject(value)\n    }\n  }\n\n  const pause = () => {\n    return new Promise((continueResolve) => {\n      continueFn = (value) => {\n        if (isResolved || !shouldPause()) {\n          return continueResolve(value)\n        }\n      }\n      config.onPause?.()\n    }).then(() => {\n      continueFn = undefined\n      if (!isResolved) {\n        config.onContinue?.()\n      }\n    })\n  }\n\n  // Create loop function\n  const run = () => {\n    // Do nothing if already resolved\n    if (isResolved) {\n      return\n    }\n\n    let promiseOrValue: any\n\n    // Execute query\n    try {\n      promiseOrValue = config.fn()\n    } catch (error) {\n      promiseOrValue = Promise.reject(error)\n    }\n\n    Promise.resolve(promiseOrValue)\n      .then(resolve)\n      .catch((error) => {\n        // Stop if the fetch is already resolved\n        if (isResolved) {\n          return\n        }\n\n        // Do we need to retry the request?\n        const retry = config.retry ?? 3\n        const retryDelay = config.retryDelay ?? defaultRetryDelay\n        const delay =\n          typeof retryDelay === 'function'\n            ? retryDelay(failureCount, error)\n            : retryDelay\n        const shouldRetry =\n          retry === true ||\n          (typeof retry === 'number' && failureCount < retry) ||\n          (typeof retry === 'function' && retry(failureCount, error))\n\n        if (isRetryCancelled || !shouldRetry) {\n          // We are done if the query does not need to be retried\n          reject(error)\n          return\n        }\n\n        failureCount++\n\n        // Notify on fail\n        config.onFail?.(failureCount, error)\n\n        // Delay\n        sleep(delay)\n          // Pause if the document is not visible or when the device is offline\n          .then(() => {\n            if (shouldPause()) {\n              return pause()\n            }\n            return\n          })\n          .then(() => {\n            if (isRetryCancelled) {\n              reject(error)\n            } else {\n              run()\n            }\n          })\n      })\n  }\n\n  // Start loop\n  if (canFetch(config.networkMode)) {\n    run()\n  } else {\n    pause().then(run)\n  }\n\n  return {\n    promise,\n    cancel,\n    continue: () => {\n      continueFn?.()\n    },\n    cancelRetry,\n    continueRetry,\n  }\n}\n","export interface Logger {\n  log: LogFunction\n  warn: LogFunction\n  error: LogFunction\n}\n\ntype LogFunction = (...args: any[]) => void\n\nexport const defaultLogger: Logger = console\n","import { scheduleMicrotask } from './utils'\n\n// TYPES\n\ntype NotifyCallback = () => void\n\ntype NotifyFunction = (callback: () => void) => void\n\ntype BatchNotifyFunction = (callback: () => void) => void\n\nexport function createNotifyManager() {\n  let queue: NotifyCallback[] = []\n  let transactions = 0\n  let notifyFn: NotifyFunction = (callback) => {\n    callback()\n  }\n  let batchNotifyFn: BatchNotifyFunction = (callback: () => void) => {\n    callback()\n  }\n\n  const batch = <T>(callback: () => T): T => {\n    let result\n    transactions++\n    try {\n      result = callback()\n    } finally {\n      transactions--\n      if (!transactions) {\n        flush()\n      }\n    }\n    return result\n  }\n\n  const schedule = (callback: NotifyCallback): void => {\n    if (transactions) {\n      queue.push(callback)\n    } else {\n      scheduleMicrotask(() => {\n        notifyFn(callback)\n      })\n    }\n  }\n\n  /**\n   * All calls to the wrapped function will be batched.\n   */\n  const batchCalls = <T extends Function>(callback: T): T => {\n    return ((...args: any[]) => {\n      schedule(() => {\n        callback(...args)\n      })\n    }) as any\n  }\n\n  const flush = (): void => {\n    const originalQueue = queue\n    queue = []\n    if (originalQueue.length) {\n      scheduleMicrotask(() => {\n        batchNotifyFn(() => {\n          originalQueue.forEach((callback) => {\n            notifyFn(callback)\n          })\n        })\n      })\n    }\n  }\n\n  /**\n   * Use this method to set a custom notify function.\n   * This can be used to for example wrap notifications with `React.act` while running tests.\n   */\n  const setNotifyFunction = (fn: NotifyFunction) => {\n    notifyFn = fn\n  }\n\n  /**\n   * Use this method to set a custom function to batch notifications together into a single tick.\n   * By default React Query will use the batch function provided by ReactDOM or React Native.\n   */\n  const setBatchNotifyFunction = (fn: BatchNotifyFunction) => {\n    batchNotifyFn = fn\n  }\n\n  return {\n    batch,\n    batchCalls,\n    schedule,\n    setNotifyFunction,\n    setBatchNotifyFunction,\n  } as const\n}\n\n// SINGLETON\nexport const notifyManager = createNotifyManager()\n","import { isServer, isValidTimeout } from './utils'\n\nexport abstract class Removable {\n  cacheTime!: number\n  private gcTimeout?: ReturnType<typeof setTimeout>\n\n  destroy(): void {\n    this.clearGcTimeout()\n  }\n\n  protected scheduleGc(): void {\n    this.clearGcTimeout()\n\n    if (isValidTimeout(this.cacheTime)) {\n      this.gcTimeout = setTimeout(() => {\n        this.optionalRemove()\n      }, this.cacheTime)\n    }\n  }\n\n  protected updateCacheTime(newCacheTime: number | undefined): void {\n    // Default to 5 minutes (Infinity for server-side) if no cache time is set\n    this.cacheTime = Math.max(\n      this.cacheTime || 0,\n      newCacheTime ?? (isServer ? Infinity : 5 * 60 * 1000),\n    )\n  }\n\n  protected clearGcTimeout() {\n    if (this.gcTimeout) {\n      clearTimeout(this.gcTimeout)\n      this.gcTimeout = undefined\n    }\n  }\n\n  protected abstract optionalRemove(): void\n}\n","import { getAbortController, noop, replaceData, timeUntilStale } from './utils'\nimport type {\n  InitialDataFunction,\n  QueryKey,\n  QueryOptions,\n  QueryStatus,\n  QueryFunctionContext,\n  QueryMeta,\n  CancelOptions,\n  SetDataOptions,\n  FetchStatus,\n} from './types'\nimport type { QueryCache } from './queryCache'\nimport type { QueryObserver } from './queryObserver'\nimport type { Logger } from './logger'\nimport { defaultLogger } from './logger'\nimport { notifyManager } from './notifyManager'\nimport type { Retryer } from './retryer'\nimport { isCancelledError, canFetch, createRetryer } from './retryer'\nimport { Removable } from './removable'\n\n// TYPES\n\ninterface QueryConfig<\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryKey extends QueryKey = QueryKey,\n> {\n  cache: QueryCache\n  queryKey: TQueryKey\n  queryHash: string\n  logger?: Logger\n  options?: QueryOptions<TQueryFnData, TError, TData, TQueryKey>\n  defaultOptions?: QueryOptions<TQueryFnData, TError, TData, TQueryKey>\n  state?: QueryState<TData, TError>\n}\n\nexport interface QueryState<TData = unknown, TError = unknown> {\n  data: TData | undefined\n  dataUpdateCount: number\n  dataUpdatedAt: number\n  error: TError | null\n  errorUpdateCount: number\n  errorUpdatedAt: number\n  fetchFailureCount: number\n  fetchFailureReason: TError | null\n  fetchMeta: any\n  isInvalidated: boolean\n  status: QueryStatus\n  fetchStatus: FetchStatus\n}\n\nexport interface FetchContext<\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryKey extends QueryKey = QueryKey,\n> {\n  fetchFn: () => unknown | Promise<unknown>\n  fetchOptions?: FetchOptions\n  signal?: AbortSignal\n  options: QueryOptions<TQueryFnData, TError, TData, any>\n  queryKey: TQueryKey\n  state: QueryState<TData, TError>\n}\n\nexport interface QueryBehavior<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n> {\n  onFetch: (\n    context: FetchContext<TQueryFnData, TError, TData, TQueryKey>,\n  ) => void\n}\n\nexport interface FetchOptions {\n  cancelRefetch?: boolean\n  meta?: any\n}\n\ninterface FailedAction<TError> {\n  type: 'failed'\n  failureCount: number\n  error: TError\n}\n\ninterface FetchAction {\n  type: 'fetch'\n  meta?: any\n}\n\ninterface SuccessAction<TData> {\n  data: TData | undefined\n  type: 'success'\n  dataUpdatedAt?: number\n  manual?: boolean\n}\n\ninterface ErrorAction<TError> {\n  type: 'error'\n  error: TError\n}\n\ninterface InvalidateAction {\n  type: 'invalidate'\n}\n\ninterface PauseAction {\n  type: 'pause'\n}\n\ninterface ContinueAction {\n  type: 'continue'\n}\n\ninterface SetStateAction<TData, TError> {\n  type: 'setState'\n  state: QueryState<TData, TError>\n  setStateOptions?: SetStateOptions\n}\n\nexport type Action<TData, TError> =\n  | ContinueAction\n  | ErrorAction<TError>\n  | FailedAction<TError>\n  | FetchAction\n  | InvalidateAction\n  | PauseAction\n  | SetStateAction<TData, TError>\n  | SuccessAction<TData>\n\nexport interface SetStateOptions {\n  meta?: any\n}\n\n// CLASS\n\nexport class Query<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n> extends Removable {\n  queryKey: TQueryKey\n  queryHash: string\n  options!: QueryOptions<TQueryFnData, TError, TData, TQueryKey>\n  initialState: QueryState<TData, TError>\n  revertState?: QueryState<TData, TError>\n  state: QueryState<TData, TError>\n  isFetchingOptimistic?: boolean\n\n  private cache: QueryCache\n  private logger: Logger\n  private promise?: Promise<TData>\n  private retryer?: Retryer<TData>\n  private observers: QueryObserver<any, any, any, any, any>[]\n  private defaultOptions?: QueryOptions<TQueryFnData, TError, TData, TQueryKey>\n  private abortSignalConsumed: boolean\n\n  constructor(config: QueryConfig<TQueryFnData, TError, TData, TQueryKey>) {\n    super()\n\n    this.abortSignalConsumed = false\n    this.defaultOptions = config.defaultOptions\n    this.setOptions(config.options)\n    this.observers = []\n    this.cache = config.cache\n    this.logger = config.logger || defaultLogger\n    this.queryKey = config.queryKey\n    this.queryHash = config.queryHash\n    this.initialState = config.state || getDefaultState(this.options)\n    this.state = this.initialState\n  }\n\n  get meta(): QueryMeta | undefined {\n    return this.options.meta\n  }\n\n  private setOptions(\n    options?: QueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): void {\n    this.options = { ...this.defaultOptions, ...options }\n\n    this.updateCacheTime(this.options.cacheTime)\n  }\n\n  protected optionalRemove() {\n    if (!this.observers.length && this.state.fetchStatus === 'idle') {\n      this.cache.remove(this)\n    }\n  }\n\n  setData(\n    newData: TData,\n    options?: SetDataOptions & { manual: boolean },\n  ): TData {\n    const data = replaceData(this.state.data, newData, this.options)\n\n    // Set data and mark it as cached\n    this.dispatch({\n      data,\n      type: 'success',\n      dataUpdatedAt: options?.updatedAt,\n      manual: options?.manual,\n    })\n\n    return data\n  }\n\n  setState(\n    state: QueryState<TData, TError>,\n    setStateOptions?: SetStateOptions,\n  ): void {\n    this.dispatch({ type: 'setState', state, setStateOptions })\n  }\n\n  cancel(options?: CancelOptions): Promise<void> {\n    const promise = this.promise\n    this.retryer?.cancel(options)\n    return promise ? promise.then(noop).catch(noop) : Promise.resolve()\n  }\n\n  destroy(): void {\n    super.destroy()\n\n    this.cancel({ silent: true })\n  }\n\n  reset(): void {\n    this.destroy()\n    this.setState(this.initialState)\n  }\n\n  isActive(): boolean {\n    return this.observers.some((observer) => observer.options.enabled !== false)\n  }\n\n  isDisabled(): boolean {\n    return this.getObserversCount() > 0 && !this.isActive()\n  }\n\n  isStale(): boolean {\n    return (\n      this.state.isInvalidated ||\n      !this.state.dataUpdatedAt ||\n      this.observers.some((observer) => observer.getCurrentResult().isStale)\n    )\n  }\n\n  isStaleByTime(staleTime = 0): boolean {\n    return (\n      this.state.isInvalidated ||\n      !this.state.dataUpdatedAt ||\n      !timeUntilStale(this.state.dataUpdatedAt, staleTime)\n    )\n  }\n\n  onFocus(): void {\n    const observer = this.observers.find((x) => x.shouldFetchOnWindowFocus())\n\n    if (observer) {\n      observer.refetch({ cancelRefetch: false })\n    }\n\n    // Continue fetch if currently paused\n    this.retryer?.continue()\n  }\n\n  onOnline(): void {\n    const observer = this.observers.find((x) => x.shouldFetchOnReconnect())\n\n    if (observer) {\n      observer.refetch({ cancelRefetch: false })\n    }\n\n    // Continue fetch if currently paused\n    this.retryer?.continue()\n  }\n\n  addObserver(observer: QueryObserver<any, any, any, any, any>): void {\n    if (this.observers.indexOf(observer) === -1) {\n      this.observers.push(observer)\n\n      // Stop the query from being garbage collected\n      this.clearGcTimeout()\n\n      this.cache.notify({ type: 'observerAdded', query: this, observer })\n    }\n  }\n\n  removeObserver(observer: QueryObserver<any, any, any, any, any>): void {\n    if (this.observers.indexOf(observer) !== -1) {\n      this.observers = this.observers.filter((x) => x !== observer)\n\n      if (!this.observers.length) {\n        // If the transport layer does not support cancellation\n        // we'll let the query continue so the result can be cached\n        if (this.retryer) {\n          if (this.abortSignalConsumed) {\n            this.retryer.cancel({ revert: true })\n          } else {\n            this.retryer.cancelRetry()\n          }\n        }\n\n        this.scheduleGc()\n      }\n\n      this.cache.notify({ type: 'observerRemoved', query: this, observer })\n    }\n  }\n\n  getObserversCount(): number {\n    return this.observers.length\n  }\n\n  invalidate(): void {\n    if (!this.state.isInvalidated) {\n      this.dispatch({ type: 'invalidate' })\n    }\n  }\n\n  fetch(\n    options?: QueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    fetchOptions?: FetchOptions,\n  ): Promise<TData> {\n    if (this.state.fetchStatus !== 'idle') {\n      if (this.state.dataUpdatedAt && fetchOptions?.cancelRefetch) {\n        // Silently cancel current fetch if the user wants to cancel refetches\n        this.cancel({ silent: true })\n      } else if (this.promise) {\n        // make sure that retries that were potentially cancelled due to unmounts can continue\n        this.retryer?.continueRetry()\n        // Return current promise if we are already fetching\n        return this.promise\n      }\n    }\n\n    // Update config if passed, otherwise the config from the last execution is used\n    if (options) {\n      this.setOptions(options)\n    }\n\n    // Use the options from the first observer with a query function if no function is found.\n    // This can happen when the query is hydrated or created with setQueryData.\n    if (!this.options.queryFn) {\n      const observer = this.observers.find((x) => x.options.queryFn)\n      if (observer) {\n        this.setOptions(observer.options)\n      }\n    }\n\n    if (!Array.isArray(this.options.queryKey)) {\n      if (process.env.NODE_ENV !== 'production') {\n        this.logger.error(\n          `As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']`,\n        )\n      }\n    }\n\n    const abortController = getAbortController()\n\n    // Create query function context\n    const queryFnContext: QueryFunctionContext<TQueryKey> = {\n      queryKey: this.queryKey,\n      pageParam: undefined,\n      meta: this.meta,\n    }\n\n    // Adds an enumerable signal property to the object that\n    // which sets abortSignalConsumed to true when the signal\n    // is read.\n    const addSignalProperty = (object: unknown) => {\n      Object.defineProperty(object, 'signal', {\n        enumerable: true,\n        get: () => {\n          if (abortController) {\n            this.abortSignalConsumed = true\n            return abortController.signal\n          }\n          return undefined\n        },\n      })\n    }\n\n    addSignalProperty(queryFnContext)\n\n    // Create fetch function\n    const fetchFn = () => {\n      if (!this.options.queryFn) {\n        return Promise.reject('Missing queryFn')\n      }\n      this.abortSignalConsumed = false\n      return this.options.queryFn(queryFnContext)\n    }\n\n    // Trigger behavior hook\n    const context: FetchContext<TQueryFnData, TError, TData, TQueryKey> = {\n      fetchOptions,\n      options: this.options,\n      queryKey: this.queryKey,\n      state: this.state,\n      fetchFn,\n    }\n\n    addSignalProperty(context)\n\n    this.options.behavior?.onFetch(context)\n\n    // Store state in case the current fetch needs to be reverted\n    this.revertState = this.state\n\n    // Set to fetching state if not already in it\n    if (\n      this.state.fetchStatus === 'idle' ||\n      this.state.fetchMeta !== context.fetchOptions?.meta\n    ) {\n      this.dispatch({ type: 'fetch', meta: context.fetchOptions?.meta })\n    }\n\n    const onError = (error: TError | { silent?: boolean }) => {\n      // Optimistically update state if needed\n      if (!(isCancelledError(error) && error.silent)) {\n        this.dispatch({\n          type: 'error',\n          error: error as TError,\n        })\n      }\n\n      if (!isCancelledError(error)) {\n        // Notify cache callback\n        this.cache.config.onError?.(error, this as Query<any, any, any, any>)\n\n        if (process.env.NODE_ENV !== 'production') {\n          this.logger.error(error)\n        }\n      }\n\n      if (!this.isFetchingOptimistic) {\n        // Schedule query gc after fetching\n        this.scheduleGc()\n      }\n      this.isFetchingOptimistic = false\n    }\n\n    // Try to fetch the data\n    this.retryer = createRetryer({\n      fn: context.fetchFn as () => TData,\n      abort: abortController?.abort.bind(abortController),\n      onSuccess: (data) => {\n        if (typeof data === 'undefined') {\n          if (process.env.NODE_ENV !== 'production') {\n            this.logger.error(\n              `Query data cannot be undefined. Please make sure to return a value other than undefined from your query function. Affected query key: ${this.queryHash}`,\n            )\n          }\n          onError(new Error('undefined') as any)\n          return\n        }\n\n        this.setData(data as TData)\n\n        // Notify cache callback\n        this.cache.config.onSuccess?.(data, this as Query<any, any, any, any>)\n\n        if (!this.isFetchingOptimistic) {\n          // Schedule query gc after fetching\n          this.scheduleGc()\n        }\n        this.isFetchingOptimistic = false\n      },\n      onError,\n      onFail: (failureCount, error) => {\n        this.dispatch({ type: 'failed', failureCount, error })\n      },\n      onPause: () => {\n        this.dispatch({ type: 'pause' })\n      },\n      onContinue: () => {\n        this.dispatch({ type: 'continue' })\n      },\n      retry: context.options.retry,\n      retryDelay: context.options.retryDelay,\n      networkMode: context.options.networkMode,\n    })\n\n    this.promise = this.retryer.promise\n\n    return this.promise\n  }\n\n  private dispatch(action: Action<TData, TError>): void {\n    const reducer = (\n      state: QueryState<TData, TError>,\n    ): QueryState<TData, TError> => {\n      switch (action.type) {\n        case 'failed':\n          return {\n            ...state,\n            fetchFailureCount: action.failureCount,\n            fetchFailureReason: action.error,\n          }\n        case 'pause':\n          return {\n            ...state,\n            fetchStatus: 'paused',\n          }\n        case 'continue':\n          return {\n            ...state,\n            fetchStatus: 'fetching',\n          }\n        case 'fetch':\n          return {\n            ...state,\n            fetchFailureCount: 0,\n            fetchFailureReason: null,\n            fetchMeta: action.meta ?? null,\n            fetchStatus: canFetch(this.options.networkMode)\n              ? 'fetching'\n              : 'paused',\n            ...(!state.dataUpdatedAt && {\n              error: null,\n              status: 'loading',\n            }),\n          }\n        case 'success':\n          return {\n            ...state,\n            data: action.data,\n            dataUpdateCount: state.dataUpdateCount + 1,\n            dataUpdatedAt: action.dataUpdatedAt ?? Date.now(),\n            error: null,\n            isInvalidated: false,\n            status: 'success',\n            ...(!action.manual && {\n              fetchStatus: 'idle',\n              fetchFailureCount: 0,\n              fetchFailureReason: null,\n            }),\n          }\n        case 'error':\n          const error = action.error as unknown\n\n          if (isCancelledError(error) && error.revert && this.revertState) {\n            return { ...this.revertState }\n          }\n\n          return {\n            ...state,\n            error: error as TError,\n            errorUpdateCount: state.errorUpdateCount + 1,\n            errorUpdatedAt: Date.now(),\n            fetchFailureCount: state.fetchFailureCount + 1,\n            fetchFailureReason: error as TError,\n            fetchStatus: 'idle',\n            status: 'error',\n          }\n        case 'invalidate':\n          return {\n            ...state,\n            isInvalidated: true,\n          }\n        case 'setState':\n          return {\n            ...state,\n            ...action.state,\n          }\n      }\n    }\n\n    this.state = reducer(this.state)\n\n    notifyManager.batch(() => {\n      this.observers.forEach((observer) => {\n        observer.onQueryUpdate(action)\n      })\n\n      this.cache.notify({ query: this, type: 'updated', action })\n    })\n  }\n}\n\nfunction getDefaultState<\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryKey extends QueryKey,\n>(\n  options: QueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n): QueryState<TData, TError> {\n  const data =\n    typeof options.initialData === 'function'\n      ? (options.initialData as InitialDataFunction<TData>)()\n      : options.initialData\n\n  const hasData = typeof data !== 'undefined'\n\n  const initialDataUpdatedAt = hasData\n    ? typeof options.initialDataUpdatedAt === 'function'\n      ? (options.initialDataUpdatedAt as () => number | undefined)()\n      : options.initialDataUpdatedAt\n    : 0\n\n  return {\n    data,\n    dataUpdateCount: 0,\n    dataUpdatedAt: hasData ? initialDataUpdatedAt ?? Date.now() : 0,\n    error: null,\n    errorUpdateCount: 0,\n    errorUpdatedAt: 0,\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchMeta: null,\n    isInvalidated: false,\n    status: hasData ? 'success' : 'loading',\n    fetchStatus: 'idle',\n  }\n}\n","import type { QueryFilters } from './utils'\nimport { hashQueryKeyByOptions, matchQuery, parseFilterArgs } from './utils'\nimport type { Action, QueryState } from './query'\nimport { Query } from './query'\nimport type { QueryKey, QueryOptions } from './types'\nimport { notifyManager } from './notifyManager'\nimport type { QueryClient } from './queryClient'\nimport { Subscribable } from './subscribable'\nimport type { QueryObserver } from './queryObserver'\n\n// TYPES\n\ninterface QueryCacheConfig {\n  onError?: (error: unknown, query: Query<unknown, unknown, unknown>) => void\n  onSuccess?: (data: unknown, query: Query<unknown, unknown, unknown>) => void\n}\n\ninterface QueryHashMap {\n  [hash: string]: Query<any, any, any, any>\n}\n\ninterface NotifyEventQueryAdded {\n  type: 'added'\n  query: Query<any, any, any, any>\n}\n\ninterface NotifyEventQueryRemoved {\n  type: 'removed'\n  query: Query<any, any, any, any>\n}\n\ninterface NotifyEventQueryUpdated {\n  type: 'updated'\n  query: Query<any, any, any, any>\n  action: Action<any, any>\n}\n\ninterface NotifyEventQueryObserverAdded {\n  type: 'observerAdded'\n  query: Query<any, any, any, any>\n  observer: QueryObserver<any, any, any, any, any>\n}\n\ninterface NotifyEventQueryObserverRemoved {\n  type: 'observerRemoved'\n  query: Query<any, any, any, any>\n  observer: QueryObserver<any, any, any, any, any>\n}\n\ninterface NotifyEventQueryObserverResultsUpdated {\n  type: 'observerResultsUpdated'\n  query: Query<any, any, any, any>\n}\n\ninterface NotifyEventQueryObserverOptionsUpdated {\n  type: 'observerOptionsUpdated'\n  query: Query<any, any, any, any>\n  observer: QueryObserver<any, any, any, any, any>\n}\n\ntype QueryCacheNotifyEvent =\n  | NotifyEventQueryAdded\n  | NotifyEventQueryRemoved\n  | NotifyEventQueryUpdated\n  | NotifyEventQueryObserverAdded\n  | NotifyEventQueryObserverRemoved\n  | NotifyEventQueryObserverResultsUpdated\n  | NotifyEventQueryObserverOptionsUpdated\n\ntype QueryCacheListener = (event: QueryCacheNotifyEvent) => void\n\n// CLASS\n\nexport class QueryCache extends Subscribable<QueryCacheListener> {\n  config: QueryCacheConfig\n\n  private queries: Query<any, any, any, any>[]\n  private queriesMap: QueryHashMap\n\n  constructor(config?: QueryCacheConfig) {\n    super()\n    this.config = config || {}\n    this.queries = []\n    this.queriesMap = {}\n  }\n\n  build<TQueryFnData, TError, TData, TQueryKey extends QueryKey>(\n    client: QueryClient,\n    options: QueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    state?: QueryState<TData, TError>,\n  ): Query<TQueryFnData, TError, TData, TQueryKey> {\n    const queryKey = options.queryKey!\n    const queryHash =\n      options.queryHash ?? hashQueryKeyByOptions(queryKey, options)\n    let query = this.get<TQueryFnData, TError, TData, TQueryKey>(queryHash)\n\n    if (!query) {\n      query = new Query({\n        cache: this,\n        logger: client.getLogger(),\n        queryKey,\n        queryHash,\n        options: client.defaultQueryOptions(options),\n        state,\n        defaultOptions: client.getQueryDefaults(queryKey),\n      })\n      this.add(query)\n    }\n\n    return query\n  }\n\n  add(query: Query<any, any, any, any>): void {\n    if (!this.queriesMap[query.queryHash]) {\n      this.queriesMap[query.queryHash] = query\n      this.queries.push(query)\n      this.notify({\n        type: 'added',\n        query,\n      })\n    }\n  }\n\n  remove(query: Query<any, any, any, any>): void {\n    const queryInMap = this.queriesMap[query.queryHash]\n\n    if (queryInMap) {\n      query.destroy()\n\n      this.queries = this.queries.filter((x) => x !== query)\n\n      if (queryInMap === query) {\n        delete this.queriesMap[query.queryHash]\n      }\n\n      this.notify({ type: 'removed', query })\n    }\n  }\n\n  clear(): void {\n    notifyManager.batch(() => {\n      this.queries.forEach((query) => {\n        this.remove(query)\n      })\n    })\n  }\n\n  get<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueyKey extends QueryKey = QueryKey,\n  >(\n    queryHash: string,\n  ): Query<TQueryFnData, TError, TData, TQueyKey> | undefined {\n    return this.queriesMap[queryHash]\n  }\n\n  getAll(): Query[] {\n    return this.queries\n  }\n\n  find<TQueryFnData = unknown, TError = unknown, TData = TQueryFnData>(\n    arg1: QueryKey,\n    arg2?: QueryFilters,\n  ): Query<TQueryFnData, TError, TData> | undefined {\n    const [filters] = parseFilterArgs(arg1, arg2)\n\n    if (typeof filters.exact === 'undefined') {\n      filters.exact = true\n    }\n\n    return this.queries.find((query) => matchQuery(filters, query))\n  }\n\n  findAll(queryKey?: QueryKey, filters?: QueryFilters): Query[]\n  findAll(filters?: QueryFilters): Query[]\n  findAll(arg1?: QueryKey | QueryFilters, arg2?: QueryFilters): Query[]\n  findAll(arg1?: QueryKey | QueryFilters, arg2?: QueryFilters): Query[] {\n    const [filters] = parseFilterArgs(arg1, arg2)\n    return Object.keys(filters).length > 0\n      ? this.queries.filter((query) => matchQuery(filters, query))\n      : this.queries\n  }\n\n  notify(event: QueryCacheNotifyEvent) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event)\n      })\n    })\n  }\n\n  onFocus(): void {\n    notifyManager.batch(() => {\n      this.queries.forEach((query) => {\n        query.onFocus()\n      })\n    })\n  }\n\n  onOnline(): void {\n    notifyManager.batch(() => {\n      this.queries.forEach((query) => {\n        query.onOnline()\n      })\n    })\n  }\n}\n","import type { MutationOptions, MutationStatus, MutationMeta } from './types'\nimport type { MutationCache } from './mutationCache'\nimport type { MutationObserver } from './mutationObserver'\nimport type { Logger } from './logger'\nimport { defaultLogger } from './logger'\nimport { notifyManager } from './notifyManager'\nimport { Removable } from './removable'\nimport type { Retryer } from './retryer'\nimport { canFetch, createRetryer } from './retryer'\n\n// TYPES\n\ninterface MutationConfig<TData, TError, TVariables, TContext> {\n  mutationId: number\n  mutationCache: MutationCache\n  options: MutationOptions<TData, TError, TVariables, TContext>\n  logger?: Logger\n  defaultOptions?: MutationOptions<TData, TError, TVariables, TContext>\n  state?: MutationState<TData, TError, TVariables, TContext>\n  meta?: MutationMeta\n}\n\nexport interface MutationState<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n> {\n  context: TContext | undefined\n  data: TData | undefined\n  error: TError | null\n  failureCount: number\n  failureReason: TError | null\n  isPaused: boolean\n  status: MutationStatus\n  variables: TVariables | undefined\n}\n\ninterface FailedAction<TError> {\n  type: 'failed'\n  failureCount: number\n  error: TError | null\n}\n\ninterface LoadingAction<TVariables, TContext> {\n  type: 'loading'\n  variables?: TVariables\n  context?: TContext\n}\n\ninterface SuccessAction<TData> {\n  type: 'success'\n  data: TData\n}\n\ninterface ErrorAction<TError> {\n  type: 'error'\n  error: TError\n}\n\ninterface PauseAction {\n  type: 'pause'\n}\n\ninterface ContinueAction {\n  type: 'continue'\n}\n\ninterface SetStateAction<TData, TError, TVariables, TContext> {\n  type: 'setState'\n  state: MutationState<TData, TError, TVariables, TContext>\n}\n\nexport type Action<TData, TError, TVariables, TContext> =\n  | ContinueAction\n  | ErrorAction<TError>\n  | FailedAction<TError>\n  | LoadingAction<TVariables, TContext>\n  | PauseAction\n  | SetStateAction<TData, TError, TVariables, TContext>\n  | SuccessAction<TData>\n\n// CLASS\n\nexport class Mutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n> extends Removable {\n  state: MutationState<TData, TError, TVariables, TContext>\n  options: MutationOptions<TData, TError, TVariables, TContext>\n  mutationId: number\n\n  private observers: MutationObserver<TData, TError, TVariables, TContext>[]\n  private mutationCache: MutationCache\n  private logger: Logger\n  private retryer?: Retryer<TData>\n\n  constructor(config: MutationConfig<TData, TError, TVariables, TContext>) {\n    super()\n\n    this.options = {\n      ...config.defaultOptions,\n      ...config.options,\n    }\n    this.mutationId = config.mutationId\n    this.mutationCache = config.mutationCache\n    this.logger = config.logger || defaultLogger\n    this.observers = []\n    this.state = config.state || getDefaultState()\n\n    this.updateCacheTime(this.options.cacheTime)\n    this.scheduleGc()\n  }\n\n  get meta(): MutationMeta | undefined {\n    return this.options.meta\n  }\n\n  setState(state: MutationState<TData, TError, TVariables, TContext>): void {\n    this.dispatch({ type: 'setState', state })\n  }\n\n  addObserver(observer: MutationObserver<any, any, any, any>): void {\n    if (this.observers.indexOf(observer) === -1) {\n      this.observers.push(observer)\n\n      // Stop the mutation from being garbage collected\n      this.clearGcTimeout()\n\n      this.mutationCache.notify({\n        type: 'observerAdded',\n        mutation: this,\n        observer,\n      })\n    }\n  }\n\n  removeObserver(observer: MutationObserver<any, any, any, any>): void {\n    this.observers = this.observers.filter((x) => x !== observer)\n\n    this.scheduleGc()\n\n    this.mutationCache.notify({\n      type: 'observerRemoved',\n      mutation: this,\n      observer,\n    })\n  }\n\n  protected optionalRemove() {\n    if (!this.observers.length) {\n      if (this.state.status === 'loading') {\n        this.scheduleGc()\n      } else {\n        this.mutationCache.remove(this)\n      }\n    }\n  }\n\n  continue(): Promise<TData> {\n    if (this.retryer) {\n      this.retryer.continue()\n      return this.retryer.promise\n    }\n    return this.execute()\n  }\n\n  async execute(): Promise<TData> {\n    const executeMutation = () => {\n      this.retryer = createRetryer({\n        fn: () => {\n          if (!this.options.mutationFn) {\n            return Promise.reject('No mutationFn found')\n          }\n          return this.options.mutationFn(this.state.variables!)\n        },\n        onFail: (failureCount, error) => {\n          this.dispatch({ type: 'failed', failureCount, error })\n        },\n        onPause: () => {\n          this.dispatch({ type: 'pause' })\n        },\n        onContinue: () => {\n          this.dispatch({ type: 'continue' })\n        },\n        retry: this.options.retry ?? 0,\n        retryDelay: this.options.retryDelay,\n        networkMode: this.options.networkMode,\n      })\n\n      return this.retryer.promise\n    }\n\n    const restored = this.state.status === 'loading'\n    try {\n      if (!restored) {\n        this.dispatch({ type: 'loading', variables: this.options.variables! })\n        // Notify cache callback\n        await this.mutationCache.config.onMutate?.(\n          this.state.variables,\n          this as Mutation<unknown, unknown, unknown, unknown>,\n        )\n        const context = await this.options.onMutate?.(this.state.variables!)\n        if (context !== this.state.context) {\n          this.dispatch({\n            type: 'loading',\n            context,\n            variables: this.state.variables,\n          })\n        }\n      }\n      const data = await executeMutation()\n\n      // Notify cache callback\n      await this.mutationCache.config.onSuccess?.(\n        data,\n        this.state.variables,\n        this.state.context,\n        this as Mutation<unknown, unknown, unknown, unknown>,\n      )\n\n      await this.options.onSuccess?.(\n        data,\n        this.state.variables!,\n        this.state.context!,\n      )\n\n      await this.options.onSettled?.(\n        data,\n        null,\n        this.state.variables!,\n        this.state.context,\n      )\n\n      this.dispatch({ type: 'success', data })\n      return data\n    } catch (error) {\n      try {\n        // Notify cache callback\n        await this.mutationCache.config.onError?.(\n          error,\n          this.state.variables,\n          this.state.context,\n          this as Mutation<unknown, unknown, unknown, unknown>,\n        )\n\n        if (process.env.NODE_ENV !== 'production') {\n          this.logger.error(error)\n        }\n\n        await this.options.onError?.(\n          error as TError,\n          this.state.variables!,\n          this.state.context,\n        )\n\n        await this.options.onSettled?.(\n          undefined,\n          error as TError,\n          this.state.variables!,\n          this.state.context,\n        )\n        throw error\n      } finally {\n        this.dispatch({ type: 'error', error: error as TError })\n      }\n    }\n  }\n\n  private dispatch(action: Action<TData, TError, TVariables, TContext>): void {\n    const reducer = (\n      state: MutationState<TData, TError, TVariables, TContext>,\n    ): MutationState<TData, TError, TVariables, TContext> => {\n      switch (action.type) {\n        case 'failed':\n          return {\n            ...state,\n            failureCount: action.failureCount,\n            failureReason: action.error,\n          }\n        case 'pause':\n          return {\n            ...state,\n            isPaused: true,\n          }\n        case 'continue':\n          return {\n            ...state,\n            isPaused: false,\n          }\n        case 'loading':\n          return {\n            ...state,\n            context: action.context,\n            data: undefined,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            isPaused: !canFetch(this.options.networkMode),\n            status: 'loading',\n            variables: action.variables,\n          }\n        case 'success':\n          return {\n            ...state,\n            data: action.data,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            status: 'success',\n            isPaused: false,\n          }\n        case 'error':\n          return {\n            ...state,\n            data: undefined,\n            error: action.error,\n            failureCount: state.failureCount + 1,\n            failureReason: action.error,\n            isPaused: false,\n            status: 'error',\n          }\n        case 'setState':\n          return {\n            ...state,\n            ...action.state,\n          }\n      }\n    }\n    this.state = reducer(this.state)\n\n    notifyManager.batch(() => {\n      this.observers.forEach((observer) => {\n        observer.onMutationUpdate(action)\n      })\n      this.mutationCache.notify({\n        mutation: this,\n        type: 'updated',\n        action,\n      })\n    })\n  }\n}\n\nexport function getDefaultState<\n  TData,\n  TError,\n  TVariables,\n  TContext,\n>(): MutationState<TData, TError, TVariables, TContext> {\n  return {\n    context: undefined,\n    data: undefined,\n    error: null,\n    failureCount: 0,\n    failureReason: null,\n    isPaused: false,\n    status: 'idle',\n    variables: undefined,\n  }\n}\n","import type { MutationObserver } from './mutationObserver'\nimport type { MutationOptions } from './types'\nimport type { QueryClient } from './queryClient'\nimport { notifyManager } from './notifyManager'\nimport type { Action, MutationState } from './mutation'\nimport { Mutation } from './mutation'\nimport type { MutationFilters } from './utils'\nimport { matchMutation, noop } from './utils'\nimport { Subscribable } from './subscribable'\n\n// TYPES\n\ninterface MutationCacheConfig {\n  onError?: (\n    error: unknown,\n    variables: unknown,\n    context: unknown,\n    mutation: Mutation<unknown, unknown, unknown>,\n  ) => Promise<unknown> | unknown\n  onSuccess?: (\n    data: unknown,\n    variables: unknown,\n    context: unknown,\n    mutation: Mutation<unknown, unknown, unknown>,\n  ) => Promise<unknown> | unknown\n  onMutate?: (\n    variables: unknown,\n    mutation: Mutation<unknown, unknown, unknown, unknown>,\n  ) => Promise<unknown> | unknown\n}\n\ninterface NotifyEventMutationAdded {\n  type: 'added'\n  mutation: Mutation<any, any, any, any>\n}\ninterface NotifyEventMutationRemoved {\n  type: 'removed'\n  mutation: Mutation<any, any, any, any>\n}\n\ninterface NotifyEventMutationObserverAdded {\n  type: 'observerAdded'\n  mutation: Mutation<any, any, any, any>\n  observer: MutationObserver<any, any, any>\n}\n\ninterface NotifyEventMutationObserverRemoved {\n  type: 'observerRemoved'\n  mutation: Mutation<any, any, any, any>\n  observer: MutationObserver<any, any, any>\n}\n\ninterface NotifyEventMutationObserverOptionsUpdated {\n  type: 'observerOptionsUpdated'\n  mutation?: Mutation<any, any, any, any>\n  observer: MutationObserver<any, any, any, any>\n}\n\ninterface NotifyEventMutationUpdated {\n  type: 'updated'\n  mutation: Mutation<any, any, any, any>\n  action: Action<any, any, any, any>\n}\n\ntype MutationCacheNotifyEvent =\n  | NotifyEventMutationAdded\n  | NotifyEventMutationRemoved\n  | NotifyEventMutationObserverAdded\n  | NotifyEventMutationObserverRemoved\n  | NotifyEventMutationObserverOptionsUpdated\n  | NotifyEventMutationUpdated\n\ntype MutationCacheListener = (event: MutationCacheNotifyEvent) => void\n\n// CLASS\n\nexport class MutationCache extends Subscribable<MutationCacheListener> {\n  config: MutationCacheConfig\n\n  private mutations: Mutation<any, any, any, any>[]\n  private mutationId: number\n\n  constructor(config?: MutationCacheConfig) {\n    super()\n    this.config = config || {}\n    this.mutations = []\n    this.mutationId = 0\n  }\n\n  build<TData, TError, TVariables, TContext>(\n    client: QueryClient,\n    options: MutationOptions<TData, TError, TVariables, TContext>,\n    state?: MutationState<TData, TError, TVariables, TContext>,\n  ): Mutation<TData, TError, TVariables, TContext> {\n    const mutation = new Mutation({\n      mutationCache: this,\n      logger: client.getLogger(),\n      mutationId: ++this.mutationId,\n      options: client.defaultMutationOptions(options),\n      state,\n      defaultOptions: options.mutationKey\n        ? client.getMutationDefaults(options.mutationKey)\n        : undefined,\n    })\n\n    this.add(mutation)\n\n    return mutation\n  }\n\n  add(mutation: Mutation<any, any, any, any>): void {\n    this.mutations.push(mutation)\n    this.notify({ type: 'added', mutation })\n  }\n\n  remove(mutation: Mutation<any, any, any, any>): void {\n    this.mutations = this.mutations.filter((x) => x !== mutation)\n    this.notify({ type: 'removed', mutation })\n  }\n\n  clear(): void {\n    notifyManager.batch(() => {\n      this.mutations.forEach((mutation) => {\n        this.remove(mutation)\n      })\n    })\n  }\n\n  getAll(): Mutation[] {\n    return this.mutations\n  }\n\n  find<TData = unknown, TError = unknown, TVariables = any, TContext = unknown>(\n    filters: MutationFilters,\n  ): Mutation<TData, TError, TVariables, TContext> | undefined {\n    if (typeof filters.exact === 'undefined') {\n      filters.exact = true\n    }\n\n    return this.mutations.find((mutation) => matchMutation(filters, mutation))\n  }\n\n  findAll(filters: MutationFilters): Mutation[] {\n    return this.mutations.filter((mutation) => matchMutation(filters, mutation))\n  }\n\n  notify(event: MutationCacheNotifyEvent) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event)\n      })\n    })\n  }\n\n  resumePausedMutations(): Promise<void> {\n    const pausedMutations = this.mutations.filter((x) => x.state.isPaused)\n    return notifyManager.batch(() =>\n      pausedMutations.reduce(\n        (promise, mutation) =>\n          promise.then(() => mutation.continue().catch(noop)),\n        Promise.resolve(),\n      ),\n    )\n  }\n}\n","import type { QueryBehavior } from './query'\n\nimport type {\n  InfiniteData,\n  QueryFunctionContext,\n  QueryOptions,\n  RefetchQueryFilters,\n} from './types'\n\nexport function infiniteQueryBehavior<\n  TQueryFnData,\n  TError,\n  TData,\n>(): QueryBehavior<TQueryFnData, TError, InfiniteData<TData>> {\n  return {\n    onFetch: (context) => {\n      context.fetchFn = () => {\n        const refetchPage: RefetchQueryFilters['refetchPage'] | undefined =\n          context.fetchOptions?.meta?.refetchPage\n        const fetchMore = context.fetchOptions?.meta?.fetchMore\n        const pageParam = fetchMore?.pageParam\n        const isFetchingNextPage = fetchMore?.direction === 'forward'\n        const isFetchingPreviousPage = fetchMore?.direction === 'backward'\n        const oldPages = context.state.data?.pages || []\n        const oldPageParams = context.state.data?.pageParams || []\n        let newPageParams = oldPageParams\n        let cancelled = false\n\n        const addSignalProperty = (object: unknown) => {\n          Object.defineProperty(object, 'signal', {\n            enumerable: true,\n            get: () => {\n              if (context.signal?.aborted) {\n                cancelled = true\n              } else {\n                context.signal?.addEventListener('abort', () => {\n                  cancelled = true\n                })\n              }\n              return context.signal\n            },\n          })\n        }\n\n        // Get query function\n        const queryFn =\n          context.options.queryFn || (() => Promise.reject('Missing queryFn'))\n\n        const buildNewPages = (\n          pages: unknown[],\n          param: unknown,\n          page: unknown,\n          previous?: boolean,\n        ) => {\n          newPageParams = previous\n            ? [param, ...newPageParams]\n            : [...newPageParams, param]\n          return previous ? [page, ...pages] : [...pages, page]\n        }\n\n        // Create function to fetch a page\n        const fetchPage = (\n          pages: unknown[],\n          manual?: boolean,\n          param?: unknown,\n          previous?: boolean,\n        ): Promise<unknown[]> => {\n          if (cancelled) {\n            return Promise.reject('Cancelled')\n          }\n\n          if (typeof param === 'undefined' && !manual && pages.length) {\n            return Promise.resolve(pages)\n          }\n\n          const queryFnContext: QueryFunctionContext = {\n            queryKey: context.queryKey,\n            pageParam: param,\n            meta: context.options.meta,\n          }\n\n          addSignalProperty(queryFnContext)\n\n          const queryFnResult = queryFn(queryFnContext)\n\n          const promise = Promise.resolve(queryFnResult).then((page) =>\n            buildNewPages(pages, param, page, previous),\n          )\n\n          return promise\n        }\n\n        let promise: Promise<unknown[]>\n\n        // Fetch first page?\n        if (!oldPages.length) {\n          promise = fetchPage([])\n        }\n\n        // Fetch next page?\n        else if (isFetchingNextPage) {\n          const manual = typeof pageParam !== 'undefined'\n          const param = manual\n            ? pageParam\n            : getNextPageParam(context.options, oldPages)\n          promise = fetchPage(oldPages, manual, param)\n        }\n\n        // Fetch previous page?\n        else if (isFetchingPreviousPage) {\n          const manual = typeof pageParam !== 'undefined'\n          const param = manual\n            ? pageParam\n            : getPreviousPageParam(context.options, oldPages)\n          promise = fetchPage(oldPages, manual, param, true)\n        }\n\n        // Refetch pages\n        else {\n          newPageParams = []\n\n          const manual = typeof context.options.getNextPageParam === 'undefined'\n\n          const shouldFetchFirstPage =\n            refetchPage && oldPages[0]\n              ? refetchPage(oldPages[0], 0, oldPages)\n              : true\n\n          // Fetch first page\n          promise = shouldFetchFirstPage\n            ? fetchPage([], manual, oldPageParams[0])\n            : Promise.resolve(buildNewPages([], oldPageParams[0], oldPages[0]))\n\n          // Fetch remaining pages\n          for (let i = 1; i < oldPages.length; i++) {\n            promise = promise.then((pages) => {\n              const shouldFetchNextPage =\n                refetchPage && oldPages[i]\n                  ? refetchPage(oldPages[i], i, oldPages)\n                  : true\n\n              if (shouldFetchNextPage) {\n                const param = manual\n                  ? oldPageParams[i]\n                  : getNextPageParam(context.options, pages)\n                return fetchPage(pages, manual, param)\n              }\n              return Promise.resolve(\n                buildNewPages(pages, oldPageParams[i], oldPages[i]),\n              )\n            })\n          }\n        }\n\n        const finalPromise = promise.then((pages) => ({\n          pages,\n          pageParams: newPageParams,\n        }))\n\n        return finalPromise\n      }\n    },\n  }\n}\n\nexport function getNextPageParam(\n  options: QueryOptions<any, any>,\n  pages: unknown[],\n): unknown | undefined {\n  return options.getNextPageParam?.(pages[pages.length - 1], pages)\n}\n\nexport function getPreviousPageParam(\n  options: QueryOptions<any, any>,\n  pages: unknown[],\n): unknown | undefined {\n  return options.getPreviousPageParam?.(pages[0], pages)\n}\n\n/**\n * Checks if there is a next page.\n * Returns `undefined` if it cannot be determined.\n */\nexport function hasNextPage(\n  options: QueryOptions<any, any, any, any>,\n  pages?: unknown,\n): boolean | undefined {\n  if (options.getNextPageParam && Array.isArray(pages)) {\n    const nextPageParam = getNextPageParam(options, pages)\n    return (\n      typeof nextPageParam !== 'undefined' &&\n      nextPageParam !== null &&\n      nextPageParam !== false\n    )\n  }\n  return\n}\n\n/**\n * Checks if there is a previous page.\n * Returns `undefined` if it cannot be determined.\n */\nexport function hasPreviousPage(\n  options: QueryOptions<any, any, any, any>,\n  pages?: unknown,\n): boolean | undefined {\n  if (options.getPreviousPageParam && Array.isArray(pages)) {\n    const previousPageParam = getPreviousPageParam(options, pages)\n    return (\n      typeof previousPageParam !== 'undefined' &&\n      previousPageParam !== null &&\n      previousPageParam !== false\n    )\n  }\n  return\n}\n","import type { QueryFilters, Updater, MutationFilters } from './utils'\nimport {\n  hashQueryKey,\n  noop,\n  parseFilterArgs,\n  parseQueryArgs,\n  partialMatchKey,\n  hashQueryKeyByOptions,\n  functionalUpdate,\n} from './utils'\nimport type {\n  QueryClientConfig,\n  DefaultOptions,\n  FetchInfiniteQueryOptions,\n  FetchQueryOptions,\n  InfiniteData,\n  InvalidateOptions,\n  InvalidateQueryFilters,\n  MutationKey,\n  MutationObserverOptions,\n  MutationOptions,\n  QueryFunction,\n  QueryKey,\n  QueryObserverOptions,\n  QueryOptions,\n  RefetchOptions,\n  RefetchQueryFilters,\n  ResetOptions,\n  ResetQueryFilters,\n  SetDataOptions,\n  WithRequired,\n} from './types'\nimport type { QueryState } from './query'\nimport { QueryCache } from './queryCache'\nimport { MutationCache } from './mutationCache'\nimport { focusManager } from './focusManager'\nimport { onlineManager } from './onlineManager'\nimport { notifyManager } from './notifyManager'\nimport { infiniteQueryBehavior } from './infiniteQueryBehavior'\nimport type { CancelOptions, DefaultedQueryObserverOptions } from './types'\nimport type { Logger } from './logger'\nimport { defaultLogger } from './logger'\n\n// TYPES\n\ninterface QueryDefaults {\n  queryKey: QueryKey\n  defaultOptions: QueryOptions<any, any, any>\n}\n\ninterface MutationDefaults {\n  mutationKey: MutationKey\n  defaultOptions: MutationOptions<any, any, any, any>\n}\n\n// CLASS\n\nexport class QueryClient {\n  private queryCache: QueryCache\n  private mutationCache: MutationCache\n  private logger: Logger\n  private defaultOptions: DefaultOptions\n  private queryDefaults: QueryDefaults[]\n  private mutationDefaults: MutationDefaults[]\n  private mountCount: number\n  private unsubscribeFocus?: () => void\n  private unsubscribeOnline?: () => void\n\n  constructor(config: QueryClientConfig = {}) {\n    this.queryCache = config.queryCache || new QueryCache()\n    this.mutationCache = config.mutationCache || new MutationCache()\n    this.logger = config.logger || defaultLogger\n    this.defaultOptions = config.defaultOptions || {}\n    this.queryDefaults = []\n    this.mutationDefaults = []\n    this.mountCount = 0\n\n    if (process.env.NODE_ENV !== 'production' && config.logger) {\n      this.logger.error(\n        `Passing a custom logger has been deprecated and will be removed in the next major version.`,\n      )\n    }\n  }\n\n  mount(): void {\n    this.mountCount++\n    if (this.mountCount !== 1) return\n\n    this.unsubscribeFocus = focusManager.subscribe(() => {\n      if (focusManager.isFocused()) {\n        this.resumePausedMutations()\n        this.queryCache.onFocus()\n      }\n    })\n    this.unsubscribeOnline = onlineManager.subscribe(() => {\n      if (onlineManager.isOnline()) {\n        this.resumePausedMutations()\n        this.queryCache.onOnline()\n      }\n    })\n  }\n\n  unmount(): void {\n    this.mountCount--\n    if (this.mountCount !== 0) return\n\n    this.unsubscribeFocus?.()\n    this.unsubscribeFocus = undefined\n\n    this.unsubscribeOnline?.()\n    this.unsubscribeOnline = undefined\n  }\n\n  isFetching(filters?: QueryFilters): number\n  isFetching(queryKey?: QueryKey, filters?: QueryFilters): number\n  isFetching(arg1?: QueryKey | QueryFilters, arg2?: QueryFilters): number {\n    const [filters] = parseFilterArgs(arg1, arg2)\n    filters.fetchStatus = 'fetching'\n    return this.queryCache.findAll(filters).length\n  }\n\n  isMutating(filters?: MutationFilters): number {\n    return this.mutationCache.findAll({ ...filters, fetching: true }).length\n  }\n\n  getQueryData<TQueryFnData = unknown>(\n    queryKey: QueryKey,\n    filters?: QueryFilters,\n  ): TQueryFnData | undefined {\n    return this.queryCache.find<TQueryFnData>(queryKey, filters)?.state.data\n  }\n\n  ensureQueryData<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    options: WithRequired<\n      FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n      'queryKey'\n    >,\n  ): Promise<TData>\n  ensureQueryData<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    queryKey: TQueryKey,\n    options?: Omit<\n      FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n      'queryKey'\n    >,\n  ): Promise<TData>\n  ensureQueryData<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    queryKey: TQueryKey,\n    queryFn: QueryFunction<TQueryFnData, TQueryKey>,\n    options?: Omit<\n      FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n      'queryKey' | 'queryFn'\n    >,\n  ): Promise<TData>\n  ensureQueryData<\n    TQueryFnData,\n    TError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    arg1:\n      | TQueryKey\n      | WithRequired<\n          FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n          'queryKey'\n        >,\n    arg2?:\n      | QueryFunction<TQueryFnData, TQueryKey>\n      | FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    arg3?: FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<TData> {\n    const parsedOptions = parseQueryArgs(arg1, arg2, arg3)\n    const cachedData = this.getQueryData<TData>(parsedOptions.queryKey!)\n\n    return cachedData\n      ? Promise.resolve(cachedData)\n      : this.fetchQuery(parsedOptions)\n  }\n\n  getQueriesData<TQueryFnData = unknown>(\n    queryKey: QueryKey,\n  ): [QueryKey, TQueryFnData | undefined][]\n  getQueriesData<TQueryFnData = unknown>(\n    filters: QueryFilters,\n  ): [QueryKey, TQueryFnData | undefined][]\n  getQueriesData<TQueryFnData = unknown>(\n    queryKeyOrFilters: QueryKey | QueryFilters,\n  ): [QueryKey, TQueryFnData | undefined][] {\n    return this.getQueryCache()\n      .findAll(queryKeyOrFilters)\n      .map(({ queryKey, state }) => {\n        const data = state.data as TQueryFnData | undefined\n        return [queryKey, data]\n      })\n  }\n\n  setQueryData<TQueryFnData>(\n    queryKey: QueryKey,\n    updater: Updater<TQueryFnData | undefined, TQueryFnData | undefined>,\n    options?: SetDataOptions,\n  ): TQueryFnData | undefined {\n    const query = this.queryCache.find<TQueryFnData>(queryKey)\n    const prevData = query?.state.data\n    const data = functionalUpdate(updater, prevData)\n\n    if (typeof data === 'undefined') {\n      return undefined\n    }\n\n    const parsedOptions = parseQueryArgs(queryKey)\n    const defaultedOptions = this.defaultQueryOptions(parsedOptions)\n    return this.queryCache\n      .build(this, defaultedOptions)\n      .setData(data, { ...options, manual: true })\n  }\n\n  setQueriesData<TQueryFnData>(\n    queryKey: QueryKey,\n    updater: Updater<TQueryFnData | undefined, TQueryFnData | undefined>,\n    options?: SetDataOptions,\n  ): [QueryKey, TQueryFnData | undefined][]\n\n  setQueriesData<TQueryFnData>(\n    filters: QueryFilters,\n    updater: Updater<TQueryFnData | undefined, TQueryFnData | undefined>,\n    options?: SetDataOptions,\n  ): [QueryKey, TQueryFnData | undefined][]\n\n  setQueriesData<TQueryFnData>(\n    queryKeyOrFilters: QueryKey | QueryFilters,\n    updater: Updater<TQueryFnData | undefined, TQueryFnData | undefined>,\n    options?: SetDataOptions,\n  ): [QueryKey, TQueryFnData | undefined][] {\n    return notifyManager.batch(() =>\n      this.getQueryCache()\n        .findAll(queryKeyOrFilters)\n        .map(({ queryKey }) => [\n          queryKey,\n          this.setQueryData<TQueryFnData>(queryKey, updater, options),\n        ]),\n    )\n  }\n\n  getQueryState<TQueryFnData = unknown, TError = undefined>(\n    queryKey: QueryKey,\n    filters?: QueryFilters,\n  ): QueryState<TQueryFnData, TError> | undefined {\n    return this.queryCache.find<TQueryFnData, TError>(queryKey, filters)?.state\n  }\n\n  removeQueries(filters?: QueryFilters): void\n  removeQueries(queryKey?: QueryKey, filters?: QueryFilters): void\n  removeQueries(arg1?: QueryKey | QueryFilters, arg2?: QueryFilters): void {\n    const [filters] = parseFilterArgs(arg1, arg2)\n    const queryCache = this.queryCache\n    notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        queryCache.remove(query)\n      })\n    })\n  }\n\n  resetQueries<TPageData = unknown>(\n    filters?: ResetQueryFilters<TPageData>,\n    options?: ResetOptions,\n  ): Promise<void>\n  resetQueries<TPageData = unknown>(\n    queryKey?: QueryKey,\n    filters?: ResetQueryFilters<TPageData>,\n    options?: ResetOptions,\n  ): Promise<void>\n  resetQueries(\n    arg1?: QueryKey | ResetQueryFilters,\n    arg2?: ResetQueryFilters | ResetOptions,\n    arg3?: ResetOptions,\n  ): Promise<void> {\n    const [filters, options] = parseFilterArgs(arg1, arg2, arg3)\n    const queryCache = this.queryCache\n\n    const refetchFilters: RefetchQueryFilters = {\n      type: 'active',\n      ...filters,\n    }\n\n    return notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        query.reset()\n      })\n      return this.refetchQueries(refetchFilters, options)\n    })\n  }\n\n  cancelQueries(filters?: QueryFilters, options?: CancelOptions): Promise<void>\n  cancelQueries(\n    queryKey?: QueryKey,\n    filters?: QueryFilters,\n    options?: CancelOptions,\n  ): Promise<void>\n  cancelQueries(\n    arg1?: QueryKey | QueryFilters,\n    arg2?: QueryFilters | CancelOptions,\n    arg3?: CancelOptions,\n  ): Promise<void> {\n    const [filters, cancelOptions = {}] = parseFilterArgs(arg1, arg2, arg3)\n\n    if (typeof cancelOptions.revert === 'undefined') {\n      cancelOptions.revert = true\n    }\n\n    const promises = notifyManager.batch(() =>\n      this.queryCache\n        .findAll(filters)\n        .map((query) => query.cancel(cancelOptions)),\n    )\n\n    return Promise.all(promises).then(noop).catch(noop)\n  }\n\n  invalidateQueries<TPageData = unknown>(\n    filters?: InvalidateQueryFilters<TPageData>,\n    options?: InvalidateOptions,\n  ): Promise<void>\n  invalidateQueries<TPageData = unknown>(\n    queryKey?: QueryKey,\n    filters?: InvalidateQueryFilters<TPageData>,\n    options?: InvalidateOptions,\n  ): Promise<void>\n  invalidateQueries(\n    arg1?: QueryKey | InvalidateQueryFilters,\n    arg2?: InvalidateQueryFilters | InvalidateOptions,\n    arg3?: InvalidateOptions,\n  ): Promise<void> {\n    const [filters, options] = parseFilterArgs(arg1, arg2, arg3)\n\n    return notifyManager.batch(() => {\n      this.queryCache.findAll(filters).forEach((query) => {\n        query.invalidate()\n      })\n\n      if (filters.refetchType === 'none') {\n        return Promise.resolve()\n      }\n      const refetchFilters: RefetchQueryFilters = {\n        ...filters,\n        type: filters.refetchType ?? filters.type ?? 'active',\n      }\n      return this.refetchQueries(refetchFilters, options)\n    })\n  }\n\n  refetchQueries<TPageData = unknown>(\n    filters?: RefetchQueryFilters<TPageData>,\n    options?: RefetchOptions,\n  ): Promise<void>\n  refetchQueries<TPageData = unknown>(\n    queryKey?: QueryKey,\n    filters?: RefetchQueryFilters<TPageData>,\n    options?: RefetchOptions,\n  ): Promise<void>\n  refetchQueries(\n    arg1?: QueryKey | RefetchQueryFilters,\n    arg2?: RefetchQueryFilters | RefetchOptions,\n    arg3?: RefetchOptions,\n  ): Promise<void> {\n    const [filters, options] = parseFilterArgs(arg1, arg2, arg3)\n\n    const promises = notifyManager.batch(() =>\n      this.queryCache\n        .findAll(filters)\n        .filter((query) => !query.isDisabled())\n        .map((query) =>\n          query.fetch(undefined, {\n            ...options,\n            cancelRefetch: options?.cancelRefetch ?? true,\n            meta: { refetchPage: filters.refetchPage },\n          }),\n        ),\n    )\n\n    let promise = Promise.all(promises).then(noop)\n\n    if (!options?.throwOnError) {\n      promise = promise.catch(noop)\n    }\n\n    return promise\n  }\n\n  fetchQuery<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    options: FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<TData>\n  fetchQuery<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    queryKey: TQueryKey,\n    options?: FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<TData>\n  fetchQuery<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    queryKey: TQueryKey,\n    queryFn: QueryFunction<TQueryFnData, TQueryKey>,\n    options?: FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<TData>\n  fetchQuery<\n    TQueryFnData,\n    TError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    arg1: TQueryKey | FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    arg2?:\n      | QueryFunction<TQueryFnData, TQueryKey>\n      | FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    arg3?: FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<TData> {\n    const parsedOptions = parseQueryArgs(arg1, arg2, arg3)\n    const defaultedOptions = this.defaultQueryOptions(parsedOptions)\n\n    // https://github.com/tannerlinsley/react-query/issues/652\n    if (typeof defaultedOptions.retry === 'undefined') {\n      defaultedOptions.retry = false\n    }\n\n    const query = this.queryCache.build(this, defaultedOptions)\n\n    return query.isStaleByTime(defaultedOptions.staleTime)\n      ? query.fetch(defaultedOptions)\n      : Promise.resolve(query.state.data as TData)\n  }\n\n  prefetchQuery<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    options: FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<void>\n  prefetchQuery<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    queryKey: TQueryKey,\n    options?: FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<void>\n  prefetchQuery<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    queryKey: TQueryKey,\n    queryFn: QueryFunction<TQueryFnData, TQueryKey>,\n    options?: FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<void>\n  prefetchQuery<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    arg1: TQueryKey | FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    arg2?:\n      | QueryFunction<TQueryFnData, TQueryKey>\n      | FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    arg3?: FetchQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<void> {\n    return this.fetchQuery(arg1 as any, arg2 as any, arg3)\n      .then(noop)\n      .catch(noop)\n  }\n\n  fetchInfiniteQuery<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    options: FetchInfiniteQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<InfiniteData<TData>>\n  fetchInfiniteQuery<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    queryKey: TQueryKey,\n    options?: FetchInfiniteQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<InfiniteData<TData>>\n  fetchInfiniteQuery<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    queryKey: TQueryKey,\n    queryFn: QueryFunction<TQueryFnData, TQueryKey>,\n    options?: FetchInfiniteQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<InfiniteData<TData>>\n  fetchInfiniteQuery<\n    TQueryFnData,\n    TError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    arg1:\n      | TQueryKey\n      | FetchInfiniteQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    arg2?:\n      | QueryFunction<TQueryFnData, TQueryKey>\n      | FetchInfiniteQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    arg3?: FetchInfiniteQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<InfiniteData<TData>> {\n    const parsedOptions = parseQueryArgs(arg1, arg2, arg3)\n    parsedOptions.behavior = infiniteQueryBehavior<\n      TQueryFnData,\n      TError,\n      TData\n    >()\n    return this.fetchQuery(parsedOptions)\n  }\n\n  prefetchInfiniteQuery<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    options: FetchInfiniteQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<void>\n  prefetchInfiniteQuery<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    queryKey: TQueryKey,\n    options?: FetchInfiniteQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<void>\n  prefetchInfiniteQuery<\n    TQueryFnData = unknown,\n    TError = unknown,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    queryKey: TQueryKey,\n    queryFn: QueryFunction<TQueryFnData, TQueryKey>,\n    options?: FetchInfiniteQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<void>\n  prefetchInfiniteQuery<\n    TQueryFnData,\n    TError,\n    TData = TQueryFnData,\n    TQueryKey extends QueryKey = QueryKey,\n  >(\n    arg1:\n      | TQueryKey\n      | FetchInfiniteQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    arg2?:\n      | QueryFunction<TQueryFnData, TQueryKey>\n      | FetchInfiniteQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    arg3?: FetchInfiniteQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  ): Promise<void> {\n    return this.fetchInfiniteQuery(arg1 as any, arg2 as any, arg3)\n      .then(noop)\n      .catch(noop)\n  }\n\n  resumePausedMutations(): Promise<void> {\n    return this.mutationCache.resumePausedMutations()\n  }\n\n  getQueryCache(): QueryCache {\n    return this.queryCache\n  }\n\n  getMutationCache(): MutationCache {\n    return this.mutationCache\n  }\n\n  getLogger(): Logger {\n    return this.logger\n  }\n\n  getDefaultOptions(): DefaultOptions {\n    return this.defaultOptions\n  }\n\n  setDefaultOptions(options: DefaultOptions): void {\n    this.defaultOptions = options\n  }\n\n  setQueryDefaults(\n    queryKey: QueryKey,\n    options: QueryObserverOptions<unknown, any, any, any>,\n  ): void {\n    const result = this.queryDefaults.find(\n      (x) => hashQueryKey(queryKey) === hashQueryKey(x.queryKey),\n    )\n    if (result) {\n      result.defaultOptions = options\n    } else {\n      this.queryDefaults.push({ queryKey, defaultOptions: options })\n    }\n  }\n\n  getQueryDefaults(\n    queryKey?: QueryKey,\n  ): QueryObserverOptions<any, any, any, any, any> | undefined {\n    if (!queryKey) {\n      return undefined\n    }\n\n    // Get the first matching defaults\n    const firstMatchingDefaults = this.queryDefaults.find((x) =>\n      partialMatchKey(queryKey, x.queryKey),\n    )\n\n    // Additional checks and error in dev mode\n    if (process.env.NODE_ENV !== 'production') {\n      // Retrieve all matching defaults for the given key\n      const matchingDefaults = this.queryDefaults.filter((x) =>\n        partialMatchKey(queryKey, x.queryKey),\n      )\n      // It is ok not having defaults, but it is error prone to have more than 1 default for a given key\n      if (matchingDefaults.length > 1) {\n        this.logger.error(\n          `[QueryClient] Several query defaults match with key '${JSON.stringify(\n            queryKey,\n          )}'. The first matching query defaults are used. Please check how query defaults are registered. Order does matter here. cf. https://react-query.tanstack.com/reference/QueryClient#queryclientsetquerydefaults.`,\n        )\n      }\n    }\n\n    return firstMatchingDefaults?.defaultOptions\n  }\n\n  setMutationDefaults(\n    mutationKey: MutationKey,\n    options: MutationObserverOptions<any, any, any, any>,\n  ): void {\n    const result = this.mutationDefaults.find(\n      (x) => hashQueryKey(mutationKey) === hashQueryKey(x.mutationKey),\n    )\n    if (result) {\n      result.defaultOptions = options\n    } else {\n      this.mutationDefaults.push({ mutationKey, defaultOptions: options })\n    }\n  }\n\n  getMutationDefaults(\n    mutationKey?: MutationKey,\n  ): MutationObserverOptions<any, any, any, any> | undefined {\n    if (!mutationKey) {\n      return undefined\n    }\n\n    // Get the first matching defaults\n    const firstMatchingDefaults = this.mutationDefaults.find((x) =>\n      partialMatchKey(mutationKey, x.mutationKey),\n    )\n\n    // Additional checks and error in dev mode\n    if (process.env.NODE_ENV !== 'production') {\n      // Retrieve all matching defaults for the given key\n      const matchingDefaults = this.mutationDefaults.filter((x) =>\n        partialMatchKey(mutationKey, x.mutationKey),\n      )\n      // It is ok not having defaults, but it is error prone to have more than 1 default for a given key\n      if (matchingDefaults.length > 1) {\n        this.logger.error(\n          `[QueryClient] Several mutation defaults match with key '${JSON.stringify(\n            mutationKey,\n          )}'. The first matching mutation defaults are used. Please check how mutation defaults are registered. Order does matter here. cf. https://react-query.tanstack.com/reference/QueryClient#queryclientsetmutationdefaults.`,\n        )\n      }\n    }\n\n    return firstMatchingDefaults?.defaultOptions\n  }\n\n  defaultQueryOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey extends QueryKey,\n  >(\n    options?:\n      | QueryObserverOptions<TQueryFnData, TError, TData, TQueryData, TQueryKey>\n      | DefaultedQueryObserverOptions<\n          TQueryFnData,\n          TError,\n          TData,\n          TQueryData,\n          TQueryKey\n        >,\n  ): DefaultedQueryObserverOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey\n  > {\n    if (options?._defaulted) {\n      return options as DefaultedQueryObserverOptions<\n        TQueryFnData,\n        TError,\n        TData,\n        TQueryData,\n        TQueryKey\n      >\n    }\n\n    const defaultedOptions = {\n      ...this.defaultOptions.queries,\n      ...this.getQueryDefaults(options?.queryKey),\n      ...options,\n      _defaulted: true,\n    }\n\n    if (!defaultedOptions.queryHash && defaultedOptions.queryKey) {\n      defaultedOptions.queryHash = hashQueryKeyByOptions(\n        defaultedOptions.queryKey,\n        defaultedOptions,\n      )\n    }\n\n    // dependent default values\n    if (typeof defaultedOptions.refetchOnReconnect === 'undefined') {\n      defaultedOptions.refetchOnReconnect =\n        defaultedOptions.networkMode !== 'always'\n    }\n    if (typeof defaultedOptions.useErrorBoundary === 'undefined') {\n      defaultedOptions.useErrorBoundary = !!defaultedOptions.suspense\n    }\n\n    return defaultedOptions as DefaultedQueryObserverOptions<\n      TQueryFnData,\n      TError,\n      TData,\n      TQueryData,\n      TQueryKey\n    >\n  }\n\n  defaultMutationOptions<T extends MutationOptions<any, any, any, any>>(\n    options?: T,\n  ): T {\n    if (options?._defaulted) {\n      return options\n    }\n    return {\n      ...this.defaultOptions.mutations,\n      ...this.getMutationDefaults(options?.mutationKey),\n      ...options,\n      _defaulted: true,\n    } as T\n  }\n\n  clear(): void {\n    this.queryCache.clear()\n    this.mutationCache.clear()\n  }\n}\n","import type { Action, Mutation } from './mutation'\nimport { getDefaultState } from './mutation'\nimport { notifyManager } from './notifyManager'\nimport type { QueryClient } from './queryClient'\nimport { Subscribable } from './subscribable'\nimport type {\n  MutateOptions,\n  MutationObserverBaseResult,\n  MutationObserverResult,\n  MutationObserverOptions,\n} from './types'\nimport { shallowEqualObjects } from './utils'\n\n// TYPES\n\ntype MutationObserverListener<TData, TError, TVariables, TContext> = (\n  result: MutationObserverResult<TData, TError, TVariables, TContext>,\n) => void\n\ninterface NotifyOptions {\n  listeners?: boolean\n  onError?: boolean\n  onSuccess?: boolean\n}\n\n// CLASS\n\nexport class MutationObserver<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n> extends Subscribable<\n  MutationObserverListener<TData, TError, TVariables, TContext>\n> {\n  options!: MutationObserverOptions<TData, TError, TVariables, TContext>\n\n  private client: QueryClient\n  private currentResult!: MutationObserverResult<\n    TData,\n    TError,\n    TVariables,\n    TContext\n  >\n  private currentMutation?: Mutation<TData, TError, TVariables, TContext>\n  private mutateOptions?: MutateOptions<TData, TError, TVariables, TContext>\n\n  constructor(\n    client: QueryClient,\n    options: MutationObserverOptions<TData, TError, TVariables, TContext>,\n  ) {\n    super()\n\n    this.client = client\n    this.setOptions(options)\n    this.bindMethods()\n    this.updateResult()\n  }\n\n  protected bindMethods(): void {\n    this.mutate = this.mutate.bind(this)\n    this.reset = this.reset.bind(this)\n  }\n\n  setOptions(\n    options?: MutationObserverOptions<TData, TError, TVariables, TContext>,\n  ) {\n    const prevOptions = this.options\n    this.options = this.client.defaultMutationOptions(options)\n    if (!shallowEqualObjects(prevOptions, this.options)) {\n      this.client.getMutationCache().notify({\n        type: 'observerOptionsUpdated',\n        mutation: this.currentMutation,\n        observer: this,\n      })\n    }\n  }\n\n  protected onUnsubscribe(): void {\n    if (!this.listeners.length) {\n      this.currentMutation?.removeObserver(this)\n    }\n  }\n\n  onMutationUpdate(action: Action<TData, TError, TVariables, TContext>): void {\n    this.updateResult()\n\n    // Determine which callbacks to trigger\n    const notifyOptions: NotifyOptions = {\n      listeners: true,\n    }\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = true\n    } else if (action.type === 'error') {\n      notifyOptions.onError = true\n    }\n\n    this.notify(notifyOptions)\n  }\n\n  getCurrentResult(): MutationObserverResult<\n    TData,\n    TError,\n    TVariables,\n    TContext\n  > {\n    return this.currentResult\n  }\n\n  reset(): void {\n    this.currentMutation = undefined\n    this.updateResult()\n    this.notify({ listeners: true })\n  }\n\n  mutate(\n    variables?: TVariables,\n    options?: MutateOptions<TData, TError, TVariables, TContext>,\n  ): Promise<TData> {\n    this.mutateOptions = options\n\n    if (this.currentMutation) {\n      this.currentMutation.removeObserver(this)\n    }\n\n    this.currentMutation = this.client.getMutationCache().build(this.client, {\n      ...this.options,\n      variables:\n        typeof variables !== 'undefined' ? variables : this.options.variables,\n    })\n\n    this.currentMutation.addObserver(this)\n\n    return this.currentMutation.execute()\n  }\n\n  private updateResult(): void {\n    const state = this.currentMutation\n      ? this.currentMutation.state\n      : getDefaultState<TData, TError, TVariables, TContext>()\n\n    const result: MutationObserverBaseResult<\n      TData,\n      TError,\n      TVariables,\n      TContext\n    > = {\n      ...state,\n      isLoading: state.status === 'loading',\n      isSuccess: state.status === 'success',\n      isError: state.status === 'error',\n      isIdle: state.status === 'idle',\n      mutate: this.mutate,\n      reset: this.reset,\n    }\n\n    this.currentResult = result as MutationObserverResult<\n      TData,\n      TError,\n      TVariables,\n      TContext\n    >\n  }\n\n  private notify(options: NotifyOptions) {\n    notifyManager.batch(() => {\n      // First trigger the mutate callbacks\n      if (this.mutateOptions) {\n        if (options.onSuccess) {\n          this.mutateOptions.onSuccess?.(\n            this.currentResult.data!,\n            this.currentResult.variables!,\n            this.currentResult.context!,\n          )\n          this.mutateOptions.onSettled?.(\n            this.currentResult.data!,\n            null,\n            this.currentResult.variables!,\n            this.currentResult.context,\n          )\n        } else if (options.onError) {\n          this.mutateOptions.onError?.(\n            this.currentResult.error!,\n            this.currentResult.variables!,\n            this.currentResult.context,\n          )\n          this.mutateOptions.onSettled?.(\n            undefined,\n            this.currentResult.error,\n            this.currentResult.variables!,\n            this.currentResult.context,\n          )\n        }\n      }\n\n      // Then trigger the listeners\n      if (options.listeners) {\n        this.listeners.forEach((listener) => {\n          listener(this.currentResult)\n        })\n      }\n    })\n  }\n}\n","// Temporary workaround due to an issue with react-native uSES - https://github.com/TanStack/query/pull/3601\nimport { useSyncExternalStore as uSES } from 'use-sync-external-store/shim/index.js'\n\nexport const useSyncExternalStore = uSES\n","import * as React from 'react'\n\nimport type { QueryClient } from '@tanstack/query-core'\nimport type { ContextOptions } from './types'\n\ndeclare global {\n  interface Window {\n    ReactQueryClientContext?: React.Context<QueryClient | undefined>\n  }\n}\n\nexport const defaultContext = React.createContext<QueryClient | undefined>(\n  undefined,\n)\nconst QueryClientSharingContext = React.createContext<boolean>(false)\n\n// If we are given a context, we will use it.\n// Otherwise, if contextSharing is on, we share the first and at least one\n// instance of the context across the window\n// to ensure that if React Query is used across\n// different bundles or microfrontends they will\n// all use the same **instance** of context, regardless\n// of module scoping.\nfunction getQueryClientContext(\n  context: React.Context<QueryClient | undefined> | undefined,\n  contextSharing: boolean,\n) {\n  if (context) {\n    return context\n  }\n  if (contextSharing && typeof window !== 'undefined') {\n    if (!window.ReactQueryClientContext) {\n      window.ReactQueryClientContext = defaultContext\n    }\n\n    return window.ReactQueryClientContext\n  }\n\n  return defaultContext\n}\n\nexport const useQueryClient = ({ context }: ContextOptions = {}) => {\n  const queryClient = React.useContext(\n    getQueryClientContext(context, React.useContext(QueryClientSharingContext)),\n  )\n\n  if (!queryClient) {\n    throw new Error('No QueryClient set, use QueryClientProvider to set one')\n  }\n\n  return queryClient\n}\n\ntype QueryClientProviderPropsBase = {\n  client: QueryClient\n  children?: React.ReactNode\n}\ntype QueryClientProviderPropsWithContext = ContextOptions & {\n  contextSharing?: never\n} & QueryClientProviderPropsBase\ntype QueryClientProviderPropsWithContextSharing = {\n  context?: never\n  contextSharing?: boolean\n} & QueryClientProviderPropsBase\n\nexport type QueryClientProviderProps =\n  | QueryClientProviderPropsWithContext\n  | QueryClientProviderPropsWithContextSharing\n\nexport const QueryClientProvider = ({\n  client,\n  children,\n  context,\n  contextSharing = false,\n}: QueryClientProviderProps): JSX.Element => {\n  React.useEffect(() => {\n    client.mount()\n    return () => {\n      client.unmount()\n    }\n  }, [client])\n\n  if (process.env.NODE_ENV !== 'production' && contextSharing) {\n    client\n      .getLogger()\n      .error(\n        `The contextSharing option has been deprecated and will be removed in the next major version`,\n      )\n  }\n\n  const Context = getQueryClientContext(context, contextSharing)\n\n  return (\n    <QueryClientSharingContext.Provider value={!context && contextSharing}>\n      <Context.Provider value={client}>{children}</Context.Provider>\n    </QueryClientSharingContext.Provider>\n  )\n}\n","export function shouldThrowError<T extends (...args: any[]) => boolean>(\n  _useErrorBoundary: boolean | T | undefined,\n  params: Parameters<T>,\n): boolean {\n  // Allow useErrorBoundary function to override throwing behavior on a per-error basis\n  if (typeof _useErrorBoundary === 'function') {\n    return _useErrorBoundary(...params)\n  }\n\n  return !!_useErrorBoundary\n}\n","import * as React from 'react'\nimport { useSyncExternalStore } from './useSyncExternalStore'\n\nimport type { MutationFunction, MutationKey } from '@tanstack/query-core'\nimport {\n  notifyManager,\n  parseMutationArgs,\n  MutationObserver,\n} from '@tanstack/query-core'\nimport { useQueryClient } from './QueryClientProvider'\nimport type {\n  UseMutateFunction,\n  UseMutationOptions,\n  UseMutationResult,\n} from './types'\nimport { shouldThrowError } from './utils'\n\n// HOOK\n\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  options: UseMutationOptions<TData, TError, TVariables, TContext>,\n): UseMutationResult<TData, TError, TVariables, TContext>\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  mutationFn: MutationFunction<TData, TVariables>,\n  options?: Omit<\n    UseMutationOptions<TData, TError, TVariables, TContext>,\n    'mutationFn'\n  >,\n): UseMutationResult<TData, TError, TVariables, TContext>\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  mutationKey: MutationKey,\n  options?: Omit<\n    UseMutationOptions<TData, TError, TVariables, TContext>,\n    'mutationKey'\n  >,\n): UseMutationResult<TData, TError, TVariables, TContext>\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  mutationKey: MutationKey,\n  mutationFn?: MutationFunction<TData, TVariables>,\n  options?: Omit<\n    UseMutationOptions<TData, TError, TVariables, TContext>,\n    'mutationKey' | 'mutationFn'\n  >,\n): UseMutationResult<TData, TError, TVariables, TContext>\nexport function useMutation<\n  TData = unknown,\n  TError = unknown,\n  TVariables = void,\n  TContext = unknown,\n>(\n  arg1:\n    | MutationKey\n    | MutationFunction<TData, TVariables>\n    | UseMutationOptions<TData, TError, TVariables, TContext>,\n  arg2?:\n    | MutationFunction<TData, TVariables>\n    | UseMutationOptions<TData, TError, TVariables, TContext>,\n  arg3?: UseMutationOptions<TData, TError, TVariables, TContext>,\n): UseMutationResult<TData, TError, TVariables, TContext> {\n  const options = parseMutationArgs(arg1, arg2, arg3)\n  const queryClient = useQueryClient({ context: options.context })\n\n  const [observer] = React.useState(\n    () =>\n      new MutationObserver<TData, TError, TVariables, TContext>(\n        queryClient,\n        options,\n      ),\n  )\n\n  React.useEffect(() => {\n    observer.setOptions(options)\n  }, [observer, options])\n\n  const result = useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) =>\n        observer.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [observer],\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult(),\n  )\n\n  const mutate = React.useCallback<\n    UseMutateFunction<TData, TError, TVariables, TContext>\n  >(\n    (variables, mutateOptions) => {\n      observer.mutate(variables, mutateOptions).catch(noop)\n    },\n    [observer],\n  )\n\n  if (\n    result.error &&\n    shouldThrowError(observer.options.useErrorBoundary, [result.error])\n  ) {\n    throw result.error\n  }\n\n  return { ...result, mutate, mutateAsync: result.mutate }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nfunction noop() {}\n","\nimport { useCallback } from 'react';\nimport { useMutation, UseMutationOptions } from '@tanstack/react-query';\nimport { disconnect as disconnectDapp } from '@usedapp/core';\nimport { MutationKeysEnum } from '@usedapp/react';\n\nexport type UseDisconnectConfig = Partial<UseMutationOptions>;\n\nexport type UseDisconnectProps = UseDisconnectConfig;\n\nconst mutationFn = async () => {\n  return disconnectDapp();\n};\n\nexport const useDisconnect = ({\n  onError,\n  onMutate,\n  onSettled,\n  onSuccess,\n}: UseDisconnectProps = {}) => {\n  const {\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    status,\n    reset,\n    mutate,\n    mutateAsync,\n  } = useMutation([MutationKeysEnum.DISCONNECT], mutationFn, {\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess,\n  });\n\n  const disconnect = useCallback(() => {\n    return mutate();\n  }, []);\n\n  const disconnectAsync = useCallback(async () => {\n    return mutateAsync();\n  }, []);\n\n  return {\n    disconnect,\n    disconnectAsync,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    status,\n    reset,\n  };\n};\n","import { useCallback } from 'react';\nimport { useMutation, UseMutationOptions } from '@tanstack/react-query';\nimport { sign as signDapp, SignParams, SignResult } from '@usedapp/core';\nimport { MutationKeysEnum } from '@usedapp/react';\n\nexport type UseSignParams = Partial<SignParams>;\n\nexport type UseSignConfig = Partial<\nUseMutationOptions<SignResult, unknown, UseSignParams>\n>;\n\nexport type UseSignProps = Partial<UseSignParams & UseSignConfig>;\n\nconst mutationFn = async ({ deploy, signingPublicKey, targetPublicKeyHex }: UseSignParams) => {\n  if (!deploy) {\n    throw new Error('Deploy must be a non-empty');\n  }\n  if (!signingPublicKey) {\n    throw new Error('signingPublicKey must be a non-empty string');\n  }\n  if (!targetPublicKeyHex) {\n    throw new Error('targetPublicKeyHex must be a non-empty string');\n  }\n\n  return signDapp({ deploy, signingPublicKey, targetPublicKeyHex });\n};\n\nexport const useSign = ({\n  deploy,\n  signingPublicKey,\n  targetPublicKeyHex,\n  onError,\n  onMutate,\n  onSettled,\n  onSuccess,\n}: UseSignProps = {}) => {\n  const {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    reset,\n    status,\n    variables,\n    mutate,\n    mutateAsync,\n  } = useMutation([MutationKeysEnum.SIGN], mutationFn, {\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess,\n  });\n\n  const sign = useCallback((params: UseSignParams) => {\n    return mutate(params || {\n      deploy,\n      signingPublicKey,\n      targetPublicKeyHex,\n    });\n  }, [deploy, signingPublicKey, targetPublicKeyHex, mutate]);\n\n  const signAsync = useCallback(async (params: UseSignParams) => {\n    return mutateAsync(params || {\n      deploy,\n      signingPublicKey,\n      targetPublicKeyHex,\n    });\n  }, [deploy, signingPublicKey, targetPublicKeyHex, mutateAsync]);\n\n  return {\n    sign,\n    signAsync,\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    reset,\n    status,\n    variables,\n  };\n};\n","import { useCallback } from 'react';\nimport { useMutation, UseMutationOptions } from '@tanstack/react-query';\nimport {\n  signMessage as signMessageDapp,\n  SignMessageParams,\n  SignMessageResult,\n} from '@usedapp/core';\nimport { MutationKeysEnum } from '@usedapp/react';\n\nexport type UseSignMessageParams = Partial<SignMessageParams>;\n\nexport type UseSignMessageConfig = Partial<\nUseMutationOptions<SignMessageResult, unknown, UseSignMessageParams>\n>;\n\nexport type UseSignMessageProps = Partial<UseSignMessageParams & UseSignMessageConfig>;\n\nconst mutationFn = async ({ message, signingPublicKey }: UseSignMessageParams) => {\n  if (!message) {\n    throw new Error('Message must be a non-empty string');\n  }\n  if (!signingPublicKey) {\n    throw new Error('signingPublicKey must be a non-empty string');\n  }\n\n  return signMessageDapp({ message, signingPublicKey });\n};\n\nexport const useSignMessage = ({\n  message,\n  signingPublicKey,\n  onError,\n  onMutate,\n  onSettled,\n  onSuccess,\n}: UseSignMessageProps = {}) => {\n  const {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    reset,\n    status,\n    variables,\n    mutate,\n    mutateAsync,\n  } = useMutation([MutationKeysEnum.SIGN_MESSAGE, signingPublicKey, message], mutationFn, {\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess,\n  });\n\n  const signMessage = useCallback((params: UseSignMessageParams) => {\n    return mutate(params || {\n      message,\n      signingPublicKey,\n    });\n  }, [message, signingPublicKey, mutate]);\n\n  const signMessageAsync = useCallback(async (params: UseSignMessageParams) => {\n    return mutateAsync(params || {\n      message,\n      signingPublicKey,\n    });\n  }, [message, signingPublicKey, mutateAsync]);\n\n  return {\n    signMessage,\n    signMessageAsync,\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    reset,\n    status,\n    variables,\n  };\n};\n","import * as React from 'react';\nimport type { QueryClient } from '@tanstack/react-query';\nimport { QueryClientProvider } from '@tanstack/react-query';\n\nimport type { Client } from './client';\n\ntype Props = {\n  children: React.ReactElement;\n  client: Client;\n};\n\nexport const Context = React.createContext<Client | undefined>(undefined);\n\nexport const queryClientContext = React.createContext<QueryClient | undefined>(\n  undefined,\n);\n\nexport const CasperProvider = ({ children, client }: Props): JSX.Element => {\n  return React.createElement(\n    Context.Provider,\n    {\n      children: React.createElement(\n        QueryClientProvider,\n        {\n          children,\n          client: client.queryClient,\n          // context: queryClientContext,\n        },\n      ),\n      value: client,\n    },\n  );\n};\n\nexport const useClient = () => {\n  const client = React.useContext(Context);\n  if (!client)\n    throw new Error(\n      [\n        '`useClient` must be used within `CasperProvider`.\\n',\n      ].join('\\n'),\n    );\n  return client;\n};\n","import { QueryClient } from '@tanstack/react-query';\nimport {\n  ClientConfig as CasperClientConfig,\n  createClient as createCasperClient,\n  Client as CasperClient,\n} from '@usedapp/core';\n\nexport type CreateClientConfig = CasperClientConfig & {\n  queryClient?: QueryClient;\n};\n\nexport const createClient = ({\n  queryClient = new QueryClient({\n    defaultOptions: {\n      queries: {\n        cacheTime: 1000 * 60 * 60 * 24,\n        networkMode: 'offlineFirst',\n        refetchOnWindowFocus: false,\n        retry: 0,\n      },\n      mutations: {\n        networkMode: 'offlineFirst',\n      },\n    },\n  }),\n  ...config\n}: CreateClientConfig): Client => {\n  const casperClient = createCasperClient(config);\n\n  return Object.assign(casperClient, {\n    queryClient,\n  });\n};\n\nexport type Client = CasperClient & { queryClient: QueryClient };\n","export enum QueryKeysEnum {\n  CONNECT = 'connect',\n}\n","export enum MutationKeysEnum {\n  CONNECT = 'connect',\n  DISCONNECT = 'disconnect',\n  SIGN = 'sign',\n  SIGN_MESSAGE = 'sign_message',\n}\n"],"mappings":"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","names":["EventEmitter","a","b","ReactDebugCurrentFrame","createElement","createContext","moduleObject","error","useContext","Context","useState","useEffect","useCallback","useSyncExternalStore","Component","returnValue","React","useState","useEffect","useSyncExternalStore","error","useSyncExternalStore$1","client","client","client","import_react","Subscribable","constructor","listeners","subscribe","bind","listener","push","onSubscribe","filter","x","onUnsubscribe","hasListeners","length","isServer","window","noop","undefined","functionalUpdate","updater","input","isValidTimeout","value","Infinity","timeUntilStale","updatedAt","staleTime","Math","max","Date","now","parseQueryArgs","arg1","arg2","arg3","isQueryKey","queryKey","queryFn","parseMutationArgs","mutationKey","mutationFn","parseFilterArgs","matchQuery","filters","query","type","exact","fetchStatus","predicate","queryKey","stale","isQueryKey","queryHash","hashQueryKeyByOptions","options","partialMatchKey","isActive","isStale","state","matchMutation","mutation","fetching","mutationKey","hashQueryKey","status","hashFn","queryKeyHashFn","JSON","stringify","_","val","isPlainObject","Object","keys","sort","reduce","result","key","a","b","partialDeepEqual","some","replaceEqualDeep","array","isPlainArray","aSize","length","bItems","bSize","copy","equalItems","i","shallowEqualObjects","value","Array","isArray","o","hasObjectPrototype","ctor","constructor","prot","prototype","hasOwnProperty","toString","call","sleep","timeout","Promise","resolve","setTimeout","scheduleMicrotask","callback","then","getAbortController","AbortController","replaceData","prevData","data","options","isDataEqual","structuralSharing","replaceEqualDeep","FocusManager","Subscribable","constructor","setup","onFocus","isServer","window","addEventListener","listener","removeEventListener","onSubscribe","cleanup","setEventListener","onUnsubscribe","hasListeners","undefined","focused","setFocused","listeners","forEach","isFocused","document","includes","visibilityState","focusManager","OnlineManager","Subscribable","constructor","setup","onOnline","isServer","window","addEventListener","listener","removeEventListener","onSubscribe","cleanup","setEventListener","onUnsubscribe","hasListeners","undefined","online","setOnline","listeners","forEach","isOnline","navigator","onLine","onlineManager","defaultRetryDelay","failureCount","Math","min","canFetch","networkMode","onlineManager","isOnline","CancelledError","constructor","options","revert","silent","isCancelledError","value","createRetryer","config","isRetryCancelled","isResolved","continueFn","promiseResolve","promiseReject","promise","Promise","outerResolve","outerReject","cancel","cancelOptions","reject","abort","cancelRetry","continueRetry","shouldPause","focusManager","isFocused","resolve","onSuccess","onError","pause","continueResolve","onPause","then","undefined","onContinue","run","promiseOrValue","fn","error","catch","retry","retryDelay","delay","shouldRetry","onFail","sleep","continue","defaultLogger","console","createNotifyManager","queue","transactions","notifyFn","callback","batchNotifyFn","batch","result","flush","schedule","push","scheduleMicrotask","batchCalls","args","originalQueue","length","forEach","setNotifyFunction","fn","setBatchNotifyFunction","notifyManager","Removable","destroy","clearGcTimeout","scheduleGc","isValidTimeout","cacheTime","gcTimeout","setTimeout","optionalRemove","updateCacheTime","newCacheTime","Math","max","isServer","Infinity","clearTimeout","undefined","Query","Removable","constructor","config","abortSignalConsumed","defaultOptions","setOptions","options","observers","cache","logger","defaultLogger","queryKey","queryHash","initialState","state","getDefaultState","meta","updateCacheTime","cacheTime","optionalRemove","length","fetchStatus","remove","setData","newData","data","replaceData","dispatch","type","dataUpdatedAt","updatedAt","manual","setState","setStateOptions","cancel","promise","retryer","then","noop","catch","Promise","resolve","destroy","silent","reset","isActive","some","observer","enabled","isDisabled","getObserversCount","isStale","isInvalidated","getCurrentResult","isStaleByTime","staleTime","timeUntilStale","onFocus","find","x","shouldFetchOnWindowFocus","refetch","cancelRefetch","continue","onOnline","shouldFetchOnReconnect","addObserver","indexOf","push","clearGcTimeout","notify","query","removeObserver","filter","revert","cancelRetry","scheduleGc","invalidate","fetch","fetchOptions","continueRetry","queryFn","Array","isArray","process","env","NODE_ENV","error","abortController","getAbortController","queryFnContext","pageParam","undefined","addSignalProperty","object","Object","defineProperty","enumerable","get","signal","fetchFn","reject","context","behavior","onFetch","revertState","fetchMeta","onError","isCancelledError","isFetchingOptimistic","createRetryer","fn","abort","bind","onSuccess","Error","onFail","failureCount","onPause","onContinue","retry","retryDelay","networkMode","action","reducer","fetchFailureCount","fetchFailureReason","canFetch","status","dataUpdateCount","Date","now","errorUpdateCount","errorUpdatedAt","notifyManager","batch","forEach","onQueryUpdate","initialData","hasData","initialDataUpdatedAt","QueryCache","Subscribable","constructor","config","queries","queriesMap","build","client","options","state","queryKey","queryHash","hashQueryKeyByOptions","query","get","Query","cache","logger","getLogger","defaultQueryOptions","defaultOptions","getQueryDefaults","add","push","notify","type","remove","queryInMap","destroy","filter","x","clear","notifyManager","batch","forEach","getAll","find","arg1","arg2","filters","parseFilterArgs","exact","matchQuery","findAll","Object","keys","length","event","listeners","listener","onFocus","onOnline","Mutation","Removable","constructor","config","options","defaultOptions","mutationId","mutationCache","logger","defaultLogger","observers","state","getDefaultState","updateCacheTime","cacheTime","scheduleGc","meta","setState","dispatch","type","addObserver","observer","indexOf","push","clearGcTimeout","notify","mutation","removeObserver","filter","x","optionalRemove","length","status","remove","continue","retryer","promise","execute","executeMutation","createRetryer","fn","mutationFn","Promise","reject","variables","onFail","failureCount","error","onPause","onContinue","retry","retryDelay","networkMode","restored","onMutate","context","data","onSuccess","onSettled","onError","process","env","NODE_ENV","undefined","action","reducer","failureReason","isPaused","canFetch","notifyManager","batch","forEach","onMutationUpdate","MutationCache","Subscribable","constructor","config","mutations","mutationId","build","client","options","state","mutation","Mutation","mutationCache","logger","getLogger","defaultMutationOptions","defaultOptions","mutationKey","getMutationDefaults","undefined","add","push","notify","type","remove","filter","x","clear","notifyManager","batch","forEach","getAll","find","filters","exact","matchMutation","findAll","event","listeners","listener","resumePausedMutations","pausedMutations","isPaused","reduce","promise","then","continue","catch","noop","Promise","resolve","infiniteQueryBehavior","onFetch","context","fetchFn","refetchPage","fetchOptions","meta","fetchMore","pageParam","isFetchingNextPage","direction","isFetchingPreviousPage","oldPages","state","data","pages","oldPageParams","pageParams","newPageParams","cancelled","addSignalProperty","object","Object","defineProperty","enumerable","get","signal","aborted","addEventListener","queryFn","options","Promise","reject","buildNewPages","param","page","previous","fetchPage","manual","length","resolve","queryFnContext","queryKey","queryFnResult","promise","then","getNextPageParam","getPreviousPageParam","shouldFetchFirstPage","i","shouldFetchNextPage","finalPromise","QueryClient","constructor","config","queryCache","QueryCache","mutationCache","MutationCache","logger","defaultLogger","defaultOptions","queryDefaults","mutationDefaults","mountCount","process","env","NODE_ENV","error","mount","unsubscribeFocus","focusManager","subscribe","isFocused","resumePausedMutations","onFocus","unsubscribeOnline","onlineManager","isOnline","onOnline","unmount","undefined","isFetching","arg1","arg2","filters","parseFilterArgs","fetchStatus","findAll","length","isMutating","fetching","getQueryData","queryKey","find","state","data","ensureQueryData","arg3","parsedOptions","parseQueryArgs","cachedData","Promise","resolve","fetchQuery","getQueriesData","queryKeyOrFilters","getQueryCache","map","setQueryData","updater","options","query","prevData","functionalUpdate","defaultedOptions","defaultQueryOptions","build","setData","manual","setQueriesData","notifyManager","batch","getQueryState","removeQueries","forEach","remove","resetQueries","refetchFilters","type","reset","refetchQueries","cancelQueries","cancelOptions","revert","promises","cancel","all","then","noop","catch","invalidateQueries","invalidate","refetchType","filter","isDisabled","fetch","cancelRefetch","meta","refetchPage","promise","throwOnError","retry","isStaleByTime","staleTime","prefetchQuery","fetchInfiniteQuery","behavior","infiniteQueryBehavior","prefetchInfiniteQuery","getMutationCache","getLogger","getDefaultOptions","setDefaultOptions","setQueryDefaults","result","x","hashQueryKey","push","getQueryDefaults","firstMatchingDefaults","partialMatchKey","matchingDefaults","JSON","stringify","setMutationDefaults","mutationKey","getMutationDefaults","_defaulted","queries","queryHash","hashQueryKeyByOptions","refetchOnReconnect","networkMode","useErrorBoundary","suspense","defaultMutationOptions","mutations","clear","MutationObserver","Subscribable","constructor","client","options","setOptions","bindMethods","updateResult","mutate","bind","reset","prevOptions","defaultMutationOptions","shallowEqualObjects","getMutationCache","notify","type","mutation","currentMutation","observer","onUnsubscribe","listeners","length","removeObserver","onMutationUpdate","action","notifyOptions","onSuccess","onError","getCurrentResult","currentResult","undefined","variables","mutateOptions","build","addObserver","execute","state","getDefaultState","result","isLoading","status","isSuccess","isError","isIdle","notifyManager","batch","data","context","onSettled","error","forEach","listener","useSyncExternalStore","uSES","defaultContext","React","createContext","undefined","QueryClientSharingContext","getQueryClientContext","context","contextSharing","window","ReactQueryClientContext","useQueryClient","queryClient","useContext","Error","QueryClientProvider","client","children","useEffect","mount","unmount","process","env","NODE_ENV","getLogger","error","Context","shouldThrowError","_useErrorBoundary","params","useMutation","arg1","arg2","arg3","options","parseMutationArgs","queryClient","useQueryClient","context","observer","useState","MutationObserver","React","useEffect","setOptions","result","useSyncExternalStore","useCallback","onStoreChange","subscribe","notifyManager","batchCalls","getCurrentResult","mutate","variables","mutateOptions","catch","noop","error","shouldThrowError","useErrorBoundary","mutateAsync","isError","connect","import_react","mutationFn","isError","disconnect","import_react","mutationFn","isError","sign","import_react","mutationFn","isError","signMessage","React","client","createClient","QueryKeysEnum","MutationKeysEnum"]}